{"swagger":"2.0","info":{"description":"API for PWS","version":"1.1","title":"PWS API","termsOfService":"/swagger-ui/","contact":{"name":"Fleetcor Support","url":"fleetcor.ru","email":"support@fleetcor.ru"},"license":{"name":"License of API","url":"/swagger-ui/"}},"host":"nct","basePath":"/","tags":[{"name":"Обработчик запросов по API ошибке","description":"Api Error Controller"},{"name":"Обработчик запросов по авторизации","description":"Auth Controller"},{"name":"Обработчик запросов по вида лимита для кошелька","description":"Limit Type Controller"},{"name":"Обработчик запросов по виду онлайн лимита для онлайн карты","description":"Onl Limit Kind Controller"},{"name":"Обработчик запросов по группы талонов","description":"Group Coupons Controller"},{"name":"Обработчик запросов по держателю талона","description":"Vc Holder Controller"},{"name":"Обработчик запросов по дню расписания для онлайн карты","description":"Onl Card Day Schedule Controller"},{"name":"Обработчик запросов по заявке на ОИ (ОП и ОС)","description":"Dr Dd Request Controller"},{"name":"Обработчик запросов по заявке на ОИЛ","description":"Oil Request Controller"},{"name":"Обработчик запросов по заявке на блокировку карты","description":"Block Card Request Controller"},{"name":"Обработчик запросов по заявке на изменение держателя карты","description":"Change Holder Request Controller"},{"name":"Обработчик запросов по заявке на изменение онлайн лимита для онлайн карты","description":"Onl Limit Card Request Controller"},{"name":"Обработчик запросов по заявке на разблокировку карты","description":"Unblock Card Request Controller"},{"name":"Обработчик запросов по заявке на талон","description":"Vc Request Controller"},{"name":"Обработчик запросов по карте","description":"Card Controller"},{"name":"Обработчик запросов по кошельку","description":"Purse Controller"},{"name":"Обработчик запросов по лимитам по талону","description":"Vc Limit Controller"},{"name":"Обработчик запросов по номеру кода для отправки заявок на талоны","description":"Vc Code Number Controller"},{"name":"Обработчик запросов по онлайн карте","description":"Onl Card Controller"},{"name":"Обработчик запросов по онлайн лимитам по клиенту","description":"Onl Client Limit Controller"},{"name":"Обработчик запросов по онлайн лимитам по онлайн карте","description":"Onl Limit Card Controller"},{"name":"Обработчик запросов по онлайн лимитам по услуге по онлайн карте","description":"Onl Limit Card Service Controller"},{"name":"Обработчик запросов по онлайн лимитам услуги по клиенту","description":"Onl Client Limit Service Controller"},{"name":"Обработчик запросов по отчету остатка на карте для электронного кошелька","description":"Report Card Balance Controller"},{"name":"Обработчик запросов по пользовательским настройкам","description":"User Setting Controller"},{"name":"Обработчик запросов по причине отказа заявки","description":"Cancel Cause Controller"},{"name":"Обработчик запросов по слову языка","description":"Lng Word Controller"},{"name":"Обработчик запросов по состоянию заявки","description":"Rq State Controller"},{"name":"Обработчик запросов по состоянию карты","description":"Card State Controller"},{"name":"Обработчик запросов по состоянию талона","description":"Vc State Controller"},{"name":"Обработчик запросов по схеме обслуживания","description":"Schema Controller"},{"name":"Обработчик запросов по счету","description":"Account Controller"},{"name":"Обработчик запросов по талону","description":"Virtual Coupon Controller"},{"name":"Обработчик запросов по терминалу точки обслуживания","description":"Pos Trm Controller"},{"name":"Обработчик запросов по типу заявки на ОИ (ОП и ОС)","description":"Dr Dd Type Controller"},{"name":"Обработчик запросов по типу лимита для кошелька","description":"Limit Kind Controller"},{"name":"Обработчик запросов по типу лимита талона","description":"Vc Limit Type Controller"},{"name":"Обработчик запросов по типу онлайн карты","description":"Onl Card Type Controller"},{"name":"Обработчик запросов по типу онлайн лимита для заявки","description":"Onl Limit Type Controller"},{"name":"Обработчик запросов по типу транзакции","description":"Trn Type Controller"},{"name":"Обработчик запросов по точке обслуживания","description":"Pos Controller"},{"name":"Обработчик запросов по транзакции","description":"Transaction Controller"},{"name":"Обработчик запросов по услуге","description":"Service Controller"},{"name":"Обработчик запросов по услуге талона","description":"Vc Service Controller"},{"name":"Обработчик запросов по цене на терминале точки облуживания","description":"Pos Trm Price Controller"},{"name":"Обработчик запросов по языку","description":"Lng Controller"}],"paths":{"/accounts":{"get":{"tags":["Обработчик запросов по счету"],"summary":"Получить список счетов","description":"Доступ к счету дожен быть разблокирован, поле allowAccount = true <br>(поле allowAccount можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"accountsUsingGET","produces":["*/*"],"parameters":[{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Счет","originalRef":"Счет"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Счет","originalRef":"Счет"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/accounts/full":{"get":{"tags":["Обработчик запросов по счету"],"summary":"Получить список счетов с полной информацией","description":"Доступ к счету дожен быть разблокирован, поле allowAccount = true <br>(поле allowAccount можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"accountsFullUsingGET","produces":["*/*"],"parameters":[{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Счет с полной информацией","originalRef":"Счет с полной информацией"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Счет с полной информацией","originalRef":"Счет с полной информацией"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/accounts/{serviceIdWeb}":{"get":{"tags":["Обработчик запросов по счету"],"summary":"Получить счет","description":"Доступ к счету дожен быть разблокирован, поле allowAccount = true <br>(поле allowAccount можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"accountUsingGET","produces":["*/*"],"parameters":[{"name":"serviceIdWeb","in":"path","description":"Идентификатор услуги","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Счет","originalRef":"Счет"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND <br>ACCOUNT_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Счет","originalRef":"Счет"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND <br>ACCOUNT_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/accounts/{serviceIdWeb}/full":{"get":{"tags":["Обработчик запросов по счету"],"summary":"Получить счет с полной информацией","description":"Доступ к счету дожен быть разблокирован, поле allowAccount = true <br>(поле allowAccount можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"accountFullUsingGET","produces":["*/*"],"parameters":[{"name":"serviceIdWeb","in":"path","description":"Идентификатор услуги","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Счет с полной информацией","originalRef":"Счет с полной информацией"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND <br>ACCOUNT_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Счет с полной информацией","originalRef":"Счет с полной информацией"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND <br>ACCOUNT_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/api-errors-by-status-is-bad-request/":{"get":{"tags":["Обработчик запросов по API ошибке"],"summary":"Получить список API ошибок с статусом плохой запрос (Bad Request (400))","operationId":"apiErrorsByStatusIsBadRequestUsingGET","produces":["*/*"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Тело ошибок для ответа","originalRef":"Тело ошибок для ответа"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Тело ошибок для ответа","originalRef":"Тело ошибок для ответа"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/api-errors-by-status-is-forbidden/":{"get":{"tags":["Обработчик запросов по API ошибке"],"summary":"Получить список API ошибок с статусом запрещенный (Forbidden (403))","operationId":"apiErrorsByStatusIsForbiddenUsingGET","produces":["*/*"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Тело ошибок для ответа","originalRef":"Тело ошибок для ответа"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Тело ошибок для ответа","originalRef":"Тело ошибок для ответа"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/api-errors-by-status-is-internal-server-error/":{"get":{"tags":["Обработчик запросов по API ошибке"],"summary":"Получить список API ошибок с статусом внутренняя ошибка сервера (Internal Server Error (500))","operationId":"apiErrorsByStatusIsInternalServerErrorUsingGET","produces":["*/*"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Тело ошибок для ответа","originalRef":"Тело ошибок для ответа"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Тело ошибок для ответа","originalRef":"Тело ошибок для ответа"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/api-errors-by-status-is-not-found/":{"get":{"tags":["Обработчик запросов по API ошибке"],"summary":"Получить список API ошибок с статусом не найден (Not Found (404))","operationId":"apiErrorsByStatusIsNotFoundUsingGET","produces":["*/*"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Тело ошибок для ответа","originalRef":"Тело ошибок для ответа"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Тело ошибок для ответа","originalRef":"Тело ошибок для ответа"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/api-errors-by-status-is-unauthorized/":{"get":{"tags":["Обработчик запросов по API ошибке"],"summary":"Получить список API ошибок с статусом неавторизованный (Unauthorized (401))","operationId":"apiErrorsByStatusIsUnauthorizedUsingGET","produces":["*/*"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Тело ошибок для ответа","originalRef":"Тело ошибок для ответа"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Тело ошибок для ответа","originalRef":"Тело ошибок для ответа"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/api-errors/{apiErrorCode}":{"get":{"tags":["Обработчик запросов по API ошибке"],"summary":"Получить API ошибку","operationId":"apiErrorUsingGET","produces":["*/*"],"parameters":[{"name":"apiErrorCode","in":"path","description":"Код API ошибки","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Тело ошибок для ответа","originalRef":"Тело ошибок для ответа"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Тело ошибок для ответа","originalRef":"Тело ошибок для ответа"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/auth/access-token-header-key":{"get":{"tags":["Обработчик запросов по авторизации"],"summary":"Получить ключ загаловка для токена доступа","operationId":"accessTokenHeaderKeyUsingGET","produces":["*/*"],"responses":{"200":{"description":"OK","schema":{"type":"object","additionalProperties":{"type":"string"}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"responsesObject":{"200":{"description":"OK","schema":{"type":"object","additionalProperties":{"type":"string"}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/auth/login":{"post":{"tags":["Обработчик запросов по авторизации"],"summary":"Авторизоваться, получить токены авторизации (токен доступа и токен обновления токена доступа)","operationId":"loginUsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"form","description":"form","required":true,"schema":{"$ref":"#/definitions/Форма для входа","originalRef":"Форма для входа"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Токены авторизации","originalRef":"Токены авторизации"}},"201":{"description":"Created"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>LOGIN_FORM_NOT_VALIDATED_BECAUSE_LOGIN_IS_EMPTY <br>LOGIN_FORM_NOT_VALIDATED_BECAUSE_PASSWORD_IS_EMPTY <br>LOGIN_FORM_NOT_VALIDATED_BECAUSE_LOGIN_HAS_INVALID_CHARACTERS <br>LOGIN_OR_PASSWORD_INCORRECT <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Unauthorized"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>USER_IS_BLOCKED_TO_DATE <br>SUBSCRIPTION_EXPIRED <br>USER_STATUS_IS_LOCKED <br>USER_STATUS_IS_NOT_SUBSCRIBED <br>USER_IS_LOYALTY_CARD_CLIENT <br>USER_IS_CLIENT_BONUS <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"500":{"description":"Внутренняя ошибка сервера (Internal Server Error (500)) <br>Список кодов API ошибок: <br><br>AUTH_ERROR <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Токены авторизации","originalRef":"Токены авторизации"}},"201":{"description":"Created"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>LOGIN_FORM_NOT_VALIDATED_BECAUSE_LOGIN_IS_EMPTY <br>LOGIN_FORM_NOT_VALIDATED_BECAUSE_PASSWORD_IS_EMPTY <br>LOGIN_FORM_NOT_VALIDATED_BECAUSE_LOGIN_HAS_INVALID_CHARACTERS <br>LOGIN_OR_PASSWORD_INCORRECT <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Unauthorized"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>USER_IS_BLOCKED_TO_DATE <br>SUBSCRIPTION_EXPIRED <br>USER_STATUS_IS_LOCKED <br>USER_STATUS_IS_NOT_SUBSCRIBED <br>USER_IS_LOYALTY_CARD_CLIENT <br>USER_IS_CLIENT_BONUS <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"500":{"description":"Внутренняя ошибка сервера (Internal Server Error (500)) <br>Список кодов API ошибок: <br><br>AUTH_ERROR <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}}}},"/auth/refresh":{"post":{"tags":["Обработчик запросов по авторизации"],"summary":"Обновить токены авторизации (токен доступа и токен обновления токена доступа)","operationId":"refreshUsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"form","description":"form","required":true,"schema":{"$ref":"#/definitions/Форма для обновления токенов","originalRef":"Форма для обновления токенов"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Токены авторизации","originalRef":"Токены авторизации"}},"201":{"description":"Created"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>REFRESH_TOKEN_FORM_NOT_VALIDATED_BECAUSE_REFRESH_TOKEN_IS_EMPTY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>REFRESH_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"500":{"description":"Внутренняя ошибка сервера (Internal Server Error (500)) <br>Список кодов API ошибок: <br><br>AUTH_ERROR <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Токены авторизации","originalRef":"Токены авторизации"}},"201":{"description":"Created"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>REFRESH_TOKEN_FORM_NOT_VALIDATED_BECAUSE_REFRESH_TOKEN_IS_EMPTY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>REFRESH_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"500":{"description":"Внутренняя ошибка сервера (Internal Server Error (500)) <br>Список кодов API ошибок: <br><br>AUTH_ERROR <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}}}},"/block-card-requests":{"get":{"tags":["Обработчик запросов по заявке на блокировку карты"],"summary":"Получить страницу заявок на блокировку карт","description":"Доступ к заявке на блокировку карты дожен быть разблокирован, <br>поле allowBlockCardRequest = true <br>(поле allowBlockCardRequest можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"blockCardRequestsUsingGET","produces":["*/*"],"parameters":[{"name":"beginDateFilter","in":"query","description":"Фильтр по дате начала выборки (Период с) <br>фильтруется по дате создания, поле dateOf","required":false,"type":"string","format":"date-time","x-example":"2022-01-01T00:00:00"},{"name":"cardNumberFilterList","in":"query","description":"Фильтр по номеру карты, поле cardNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех карт можно получить в запросе '/cards' поле cardNumber <br>(описание запроса в Обработчик запросов по карте)","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"endDateFilter","in":"query","description":"Фильтр по дате конца выборки (Период с) <br>фильтруется по дате создания, поле dateOf","required":false,"type":"string","format":"date-time","x-example":"2022-01-31T23:59:59"},{"name":"page","in":"query","description":"Номер страницы в запросе (номер страницы ведется с нуля)","required":false,"type":"integer","format":"int32"},{"name":"rqStateIdFilterList","in":"query","description":"Фильтр по идентификатору состояния заявки, поле rqStateId <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех состояний заявки можно получить в запросе '/rq-states' поле rqStateId <br>(описание запроса в Обработчик запросов по состоянию заявки)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"sendOcFilter","in":"query","description":"Фильтр по подтверждению пользователем заявки <br>если sendOcFilter = false, то выведутся заявки, которые без подтреждения пользователем <br>если sendOcFilter = true, то выведутся заявки, которые подтреждены пользователем <br>подробное описание в поле canSendOcImm <br>(поле canSendOcImm, можно получить в запросе '/user-setting' <br>и описание в разделе Models > Пользовательские настройки)","required":false,"type":"boolean"},{"name":"size","in":"query","description":"Количество элементов на страницу в запросе","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Заявка на блокировку карты»","originalRef":"Страница«Заявка на блокировку карты»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>BLOCK_CARD_REQUEST_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Заявка на блокировку карты»","originalRef":"Страница«Заявка на блокировку карты»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>BLOCK_CARD_REQUEST_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]},"post":{"tags":["Обработчик запросов по заявке на блокировку карты"],"summary":"Создать заявку на блокировку карты","description":"Доступ к заявке на блокировку карты дожен быть разблокирован, <br>поле allowBlockCardRequest = true <br>(поле allowBlockCardRequest можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"createBlockCardRequestUsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"form","description":"form","required":true,"schema":{"$ref":"#/definitions/Форма создание заявки на блокировку карты","originalRef":"Форма создание заявки на блокировку карты"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Заявка на блокировку карты","originalRef":"Заявка на блокировку карты"}},"201":{"description":"Created"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br>BLOCK_CARD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_CARD_NUMBER_IS_EMPTY <br>BLOCK_CARD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_CARD_NUMBER_EXCEEDED_MAX_VALUE <br>BLOCK_CARD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_BLOCK_COMMENT_EXCEEDED_MAX_VALUE <br>BLOCK_CARD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_BLOCK_COMMENT_HAS_INVALID_CHARACTERS <br>REQUEST_COULD_NOT_BE_CREATED_BECAUSE_CARD_STATE_IS_NOT_WORK <br>BLOCK_CARD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_THERE_IS_AN_UNSENT_REQUEST_WITH_THIS_CARD_NUMBER <br>BLOCK_CARD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_THERE_IS_A_SENT_AND_UNCONFIRMED_REQUEST_WITH_THIS_CARD_NUMBER <br> <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>BLOCK_CARD_REQUEST_FORBIDDEN <br>CARD_NUMBER_FORBIDDEN <br>REQUEST_FORBIDDEN_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION_FOR_UNSENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN_FOR_USER_IS_CARD_HOLDER_OR_USER_IS_MOBILE_USER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>BLOCK_CARD_REQUEST_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Заявка на блокировку карты","originalRef":"Заявка на блокировку карты"}},"201":{"description":"Created"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br>BLOCK_CARD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_CARD_NUMBER_IS_EMPTY <br>BLOCK_CARD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_CARD_NUMBER_EXCEEDED_MAX_VALUE <br>BLOCK_CARD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_BLOCK_COMMENT_EXCEEDED_MAX_VALUE <br>BLOCK_CARD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_BLOCK_COMMENT_HAS_INVALID_CHARACTERS <br>REQUEST_COULD_NOT_BE_CREATED_BECAUSE_CARD_STATE_IS_NOT_WORK <br>BLOCK_CARD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_THERE_IS_AN_UNSENT_REQUEST_WITH_THIS_CARD_NUMBER <br>BLOCK_CARD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_THERE_IS_A_SENT_AND_UNCONFIRMED_REQUEST_WITH_THIS_CARD_NUMBER <br> <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>BLOCK_CARD_REQUEST_FORBIDDEN <br>CARD_NUMBER_FORBIDDEN <br>REQUEST_FORBIDDEN_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION_FOR_UNSENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN_FOR_USER_IS_CARD_HOLDER_OR_USER_IS_MOBILE_USER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>BLOCK_CARD_REQUEST_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/block-card-requests/full":{"get":{"tags":["Обработчик запросов по заявке на блокировку карты"],"summary":"Получить страницу заявок на блокировку карт с полной информацией","description":"Доступ к заявке на блокировку карты дожен быть разблокирован, <br>поле allowBlockCardRequest = true <br>(поле allowBlockCardRequest можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"blockCardRequestsFullUsingGET","produces":["*/*"],"parameters":[{"name":"beginDateFilter","in":"query","description":"Фильтр по дате начала выборки (Период с) <br>фильтруется по дате создания, поле dateOf","required":false,"type":"string","format":"date-time","x-example":"2022-01-01T00:00:00"},{"name":"cardNumberFilterList","in":"query","description":"Фильтр по номеру карты, поле cardNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех карт можно получить в запросе '/cards' поле cardNumber <br>(описание запроса в Обработчик запросов по карте)","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"endDateFilter","in":"query","description":"Фильтр по дате конца выборки (Период с) <br>фильтруется по дате создания, поле dateOf","required":false,"type":"string","format":"date-time","x-example":"2022-01-31T23:59:59"},{"name":"page","in":"query","description":"Номер страницы в запросе (номер страницы ведется с нуля)","required":false,"type":"integer","format":"int32"},{"name":"rqStateIdFilterList","in":"query","description":"Фильтр по идентификатору состояния заявки, поле rqStateId <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех состояний заявки можно получить в запросе '/rq-states' поле rqStateId <br>(описание запроса в Обработчик запросов по состоянию заявки)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"sendOcFilter","in":"query","description":"Фильтр по подтверждению пользователем заявки <br>если sendOcFilter = false, то выведутся заявки, которые без подтреждения пользователем <br>если sendOcFilter = true, то выведутся заявки, которые подтреждены пользователем <br>подробное описание в поле canSendOcImm <br>(поле canSendOcImm, можно получить в запросе '/user-setting' <br>и описание в разделе Models > Пользовательские настройки)","required":false,"type":"boolean"},{"name":"size","in":"query","description":"Количество элементов на страницу в запросе","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Заявка на блокировку карты с полной информацией»","originalRef":"Страница«Заявка на блокировку карты с полной информацией»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>BLOCK_CARD_REQUEST_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>RQ_STATE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Заявка на блокировку карты с полной информацией»","originalRef":"Страница«Заявка на блокировку карты с полной информацией»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>BLOCK_CARD_REQUEST_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>RQ_STATE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/block-card-requests/send":{"post":{"tags":["Обработчик запросов по заявке на блокировку карты"],"summary":"Отправить заявки на блокировку карт","description":"Доступ к заявке на блокировку карты дожен быть разблокирован, <br>поле allowBlockCardRequest = true <br>и настройка работы создания и отображение заявки <br>не должно быть установлено Отправлять сразу после создания, поле canSendOcImm != 2(поля allowBlockCardRequest и canSendOcImm можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки) <br>заявки на блокировку карт, которые можно отправить <br>(не подтверждены пользователем, поле sendOc = false) <br>можно получить в запросе '/block-card-requests?sendOcFilter=false' <br>или в запросе '/block-card-requests/full?sendOcFilter=false' ","operationId":"sendBlockCardRequestsUsingPOST","consumes":["application/json"],"produces":["*/*"],"responses":{"200":{"description":"OK"},"201":{"description":"Created"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>BLOCK_CARD_REQUEST_FORBIDDEN <br>SEND_REQUESTS_FORBIDDEN_REQUESTS_COULD_NOT_BE_SENT_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK"},"201":{"description":"Created"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>BLOCK_CARD_REQUEST_FORBIDDEN <br>SEND_REQUESTS_FORBIDDEN_REQUESTS_COULD_NOT_BE_SENT_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/block-card-requests/{requestId}":{"get":{"tags":["Обработчик запросов по заявке на блокировку карты"],"summary":"Получить заявку на блокировку карты","description":"Доступ к заявке на блокировку карты дожен быть разблокирован, <br>поле allowBlockCardRequest = true <br>(поле allowBlockCardRequest можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"blockCardRequestUsingGET","produces":["*/*"],"parameters":[{"name":"requestId","in":"path","description":"Идентификатор заявки","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Заявка на блокировку карты","originalRef":"Заявка на блокировку карты"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>BLOCK_CARD_REQUEST_FORBIDDEN <br>REQUEST_FORBIDDEN_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION_FOR_UNSENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN_FOR_USER_IS_CARD_HOLDER_OR_USER_IS_MOBILE_USER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>BLOCK_CARD_REQUEST_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Заявка на блокировку карты","originalRef":"Заявка на блокировку карты"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>BLOCK_CARD_REQUEST_FORBIDDEN <br>REQUEST_FORBIDDEN_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION_FOR_UNSENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN_FOR_USER_IS_CARD_HOLDER_OR_USER_IS_MOBILE_USER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>BLOCK_CARD_REQUEST_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]},"delete":{"tags":["Обработчик запросов по заявке на блокировку карты"],"summary":"Удаление заявки на блокировку карты","description":"Доступ к заявке на блокировку карты дожен быть разблокирован, <br>поле allowBlockCardRequest = true <br>(поле allowBlockCardRequest можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки) <br>заявки на блокировку карт, которые можно удалить <br>(не подтверждены пользователем, поле sendOc = false) <br>можно получить в запросе '/block-card-requests?sendOcFilter=false' <br>или в запросе '/block-card-requests/full?sendOcFilter=false' ","operationId":"deleteBlockCardRequestUsingDELETE","produces":["*/*"],"parameters":[{"name":"requestId","in":"path","description":"Идентификатор заявки","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK"},"204":{"description":"No Content"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br>REQUEST_COULD_NOT_BE_DELETED_BECAUSE_REQUEST_SENT <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>BLOCK_CARD_REQUEST_FORBIDDEN <br>REQUEST_FORBIDDEN_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION_FOR_UNSENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN_FOR_USER_IS_CARD_HOLDER_OR_USER_IS_MOBILE_USER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>BLOCK_CARD_REQUEST_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK"},"204":{"description":"No Content"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br>REQUEST_COULD_NOT_BE_DELETED_BECAUSE_REQUEST_SENT <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>BLOCK_CARD_REQUEST_FORBIDDEN <br>REQUEST_FORBIDDEN_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION_FOR_UNSENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN_FOR_USER_IS_CARD_HOLDER_OR_USER_IS_MOBILE_USER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>BLOCK_CARD_REQUEST_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/block-card-requests/{requestId}/full":{"get":{"tags":["Обработчик запросов по заявке на блокировку карты"],"summary":"Получить заявку на блокировку карты с полной информацией","description":"Доступ к заявке на блокировку карты дожен быть разблокирован, <br>поле allowBlockCardRequest = true <br>(поле allowBlockCardRequest можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"blockCardRequestFullUsingGET","produces":["*/*"],"parameters":[{"name":"requestId","in":"path","description":"Идентификатор заявки","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Заявка на блокировку карты с полной информацией","originalRef":"Заявка на блокировку карты с полной информацией"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>BLOCK_CARD_REQUEST_FORBIDDEN <br>REQUEST_FORBIDDEN_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION_FOR_UNSENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN_FOR_USER_IS_CARD_HOLDER_OR_USER_IS_MOBILE_USER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>BLOCK_CARD_REQUEST_MODEL_NOT_FOUND <br>RQ_STATE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Заявка на блокировку карты с полной информацией","originalRef":"Заявка на блокировку карты с полной информацией"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>BLOCK_CARD_REQUEST_FORBIDDEN <br>REQUEST_FORBIDDEN_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION_FOR_UNSENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN_FOR_USER_IS_CARD_HOLDER_OR_USER_IS_MOBILE_USER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>BLOCK_CARD_REQUEST_MODEL_NOT_FOUND <br>RQ_STATE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/cancel-causes":{"get":{"tags":["Обработчик запросов по причине отказа заявки"],"summary":"Получить список причин отказа заявки","operationId":"cancelCausesUsingGET","produces":["*/*"],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Причина отказа заявки","originalRef":"Причина отказа заявки"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"responsesObject":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Причина отказа заявки","originalRef":"Причина отказа заявки"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/cancel-causes/{cancelCauseId}":{"get":{"tags":["Обработчик запросов по причине отказа заявки"],"summary":"Получить причину отказа заявки","operationId":"cancelCauseUsingGET","produces":["*/*"],"parameters":[{"name":"cancelCauseId","in":"path","description":"Идентификатор причины отказа заявки","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Причина отказа заявки","originalRef":"Причина отказа заявки"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>CANCEL_CAUSE_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Причина отказа заявки","originalRef":"Причина отказа заявки"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>CANCEL_CAUSE_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/card-states":{"get":{"tags":["Обработчик запросов по состоянию карты"],"summary":"Получить список состояний карты","operationId":"cardStatesUsingGET","produces":["*/*"],"parameters":[{"name":"cardStateIdFilterList","in":"query","description":"Фильтр по идентификатору состояния карты, поле cardStateId <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех состояний карт можно получить в запросе '/card-states' поле cardStateId <br>(описание запроса в Обработчике запросов по состоянию карты)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Состояние карты","originalRef":"Состояние карты"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"responsesObject":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Состояние карты","originalRef":"Состояние карты"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/card-states/{cardStateId}":{"get":{"tags":["Обработчик запросов по состоянию карты"],"summary":"Получить состояние карты","operationId":"cardStateUsingGET","produces":["*/*"],"parameters":[{"name":"cardStateId","in":"path","description":"Идентификатор состояния карты","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Состояние карты","originalRef":"Состояние карты"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>CARD_STATE_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Состояние карты","originalRef":"Состояние карты"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>CARD_STATE_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/cards":{"get":{"tags":["Обработчик запросов по карте"],"summary":"Получить страницу карт без онлайн карты и кошельков","operationId":"cardsUsingGET","produces":["*/*"],"parameters":[{"name":"cardNumberFilterList","in":"query","description":"Фильтр по номеру карты, поле cardNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех карт можно получить в запросе '/cards' поле cardNumber <br>(описание запроса в Обработчике запросов по карте)","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"cardStateIdFilterList","in":"query","description":"Фильтр по идентификатору состояния карты, поле cardStateId <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех состояний карт можно получить в запросе '/card-states' поле cardStateId <br>(описание запроса в Обработчике запросов по состоянию карты)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"hasElectronicPursesFilter","in":"query","description":"Фильтр по признаку наличия электронных кошельков, поле hasElectronicPurses <br>если hasElectronicPursesFilter = false, то выведутся карты без электронных кошельков <br>если hasElectronicPursesFilter = true, то выведутся карты с электронными кошельками","required":false,"type":"boolean"},{"name":"hasPursesFilter","in":"query","description":"Фильтр по признаку наличия кошельков, поле hasPurses <br>если hasPursesFilter = false, то выведутся карты без кошельков <br>если hasPursesFilter = true, то выведутся карты с кошельками","required":false,"type":"boolean"},{"name":"isOnlCardFilter","in":"query","description":"Фильтр по признаку онлайн карты, поле isOnlCard <br>если isOnlCardFilter = false, то выведутся карт, которые не онлайн <br>если isOnlCardFilter = true, то выведутся карты, которые онлайн","required":false,"type":"boolean"},{"name":"page","in":"query","description":"Номер страницы в запросе (номер страницы ведется с нуля)","required":false,"type":"integer","format":"int32"},{"name":"schemaNumberFilterList","in":"query","description":"Фильтр по идентификатору схемы обслуживания, поле schemaNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/schemas' поле schemaNumber <br>(описание запроса в Обработчике запросов по схеме обслуживания)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"size","in":"query","description":"Количество элементов на страницу в запросе","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Карта без онлайн карты и кошельков»","originalRef":"Страница«Карта без онлайн карты и кошельков»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Карта без онлайн карты и кошельков»","originalRef":"Страница«Карта без онлайн карты и кошельков»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/cards/full":{"get":{"tags":["Обработчик запросов по карте"],"summary":"Получить страницу карт c полной информацией без онлайн карты и кошельков","operationId":"cardsFullUsingGET","produces":["*/*"],"parameters":[{"name":"cardNumberFilterList","in":"query","description":"Фильтр по номеру карты, поле cardNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех карт можно получить в запросе '/cards' поле cardNumber <br>(описание запроса в Обработчике запросов по карте)","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"cardStateIdFilterList","in":"query","description":"Фильтр по идентификатору состояния карты, поле cardStateId <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех состояний карт можно получить в запросе '/card-states' поле cardStateId <br>(описание запроса в Обработчике запросов по состоянию карты)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"hasElectronicPursesFilter","in":"query","description":"Фильтр по признаку наличия электронных кошельков, поле hasElectronicPurses <br>если hasElectronicPursesFilter = false, то выведутся карты без электронных кошельков <br>если hasElectronicPursesFilter = true, то выведутся карты с электронными кошельками","required":false,"type":"boolean"},{"name":"hasPursesFilter","in":"query","description":"Фильтр по признаку наличия кошельков, поле hasPurses <br>если hasPursesFilter = false, то выведутся карты без кошельков <br>если hasPursesFilter = true, то выведутся карты с кошельками","required":false,"type":"boolean"},{"name":"isOnlCardFilter","in":"query","description":"Фильтр по признаку онлайн карты, поле isOnlCard <br>если isOnlCardFilter = false, то выведутся карт, которые не онлайн <br>если isOnlCardFilter = true, то выведутся карты, которые онлайн","required":false,"type":"boolean"},{"name":"page","in":"query","description":"Номер страницы в запросе (номер страницы ведется с нуля)","required":false,"type":"integer","format":"int32"},{"name":"schemaNumberFilterList","in":"query","description":"Фильтр по идентификатору схемы обслуживания, поле schemaNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/schemas' поле schemaNumber <br>(описание запроса в Обработчике запросов по схеме обслуживания)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"size","in":"query","description":"Количество элементов на страницу в запросе","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Карта c полной информацией без онлайн карты и кошельков»","originalRef":"Страница«Карта c полной информацией без онлайн карты и кошельков»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>CARD_STATE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Карта c полной информацией без онлайн карты и кошельков»","originalRef":"Страница«Карта c полной информацией без онлайн карты и кошельков»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>CARD_STATE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/cards/with-onl-card-with-all":{"get":{"tags":["Обработчик запросов по карте"],"summary":"Получить страницу карт с онлайн картой и онлайн лимитами и расписанием для онлайн карты","operationId":"cardsWithOnlCardWithAllUsingGET","produces":["*/*"],"parameters":[{"name":"cardNumberFilterList","in":"query","description":"Фильтр по номеру карты, поле cardNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех карт можно получить в запросе '/cards' поле cardNumber <br>(описание запроса в Обработчике запросов по карте)","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"cardStateIdFilterList","in":"query","description":"Фильтр по идентификатору состояния карты, поле cardStateId <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех состояний карт можно получить в запросе '/card-states' поле cardStateId <br>(описание запроса в Обработчике запросов по состоянию карты)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"hasElectronicPursesFilter","in":"query","description":"Фильтр по признаку наличия электронных кошельков, поле hasElectronicPurses <br>если hasElectronicPursesFilter = false, то выведутся карты без электронных кошельков <br>если hasElectronicPursesFilter = true, то выведутся карты с электронными кошельками","required":false,"type":"boolean"},{"name":"hasPursesFilter","in":"query","description":"Фильтр по признаку наличия кошельков, поле hasPurses <br>если hasPursesFilter = false, то выведутся карты без кошельков <br>если hasPursesFilter = true, то выведутся карты с кошельками","required":false,"type":"boolean"},{"name":"isOnlCardFilter","in":"query","description":"Фильтр по признаку онлайн карты, поле isOnlCard <br>если isOnlCardFilter = false, то выведутся карт, которые не онлайн <br>если isOnlCardFilter = true, то выведутся карты, которые онлайн","required":false,"type":"boolean"},{"name":"page","in":"query","description":"Номер страницы в запросе (номер страницы ведется с нуля)","required":false,"type":"integer","format":"int32"},{"name":"schemaNumberFilterList","in":"query","description":"Фильтр по идентификатору схемы обслуживания, поле schemaNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/schemas' поле schemaNumber <br>(описание запроса в Обработчике запросов по схеме обслуживания)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"size","in":"query","description":"Количество элементов на страницу в запросе","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Карта с онлайн картой и онлайн лимитами и расписанием»","originalRef":"Страница«Карта с онлайн картой и онлайн лимитами и расписанием»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>CARD_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_CARD_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_LIMIT_CARD_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Карта с онлайн картой и онлайн лимитами и расписанием»","originalRef":"Страница«Карта с онлайн картой и онлайн лимитами и расписанием»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>CARD_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_CARD_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_LIMIT_CARD_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/cards/with-onl-card-with-all/full":{"get":{"tags":["Обработчик запросов по карте"],"summary":"Получить страницу карт с полной информацией и онлайн картой и онлайн лимитами и расписанием для онлайн карты","operationId":"cardsWithOnlCardWithAllFullUsingGET","produces":["*/*"],"parameters":[{"name":"cardNumberFilterList","in":"query","description":"Фильтр по номеру карты, поле cardNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех карт можно получить в запросе '/cards' поле cardNumber <br>(описание запроса в Обработчике запросов по карте)","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"cardStateIdFilterList","in":"query","description":"Фильтр по идентификатору состояния карты, поле cardStateId <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех состояний карт можно получить в запросе '/card-states' поле cardStateId <br>(описание запроса в Обработчике запросов по состоянию карты)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"hasElectronicPursesFilter","in":"query","description":"Фильтр по признаку наличия электронных кошельков, поле hasElectronicPurses <br>если hasElectronicPursesFilter = false, то выведутся карты без электронных кошельков <br>если hasElectronicPursesFilter = true, то выведутся карты с электронными кошельками","required":false,"type":"boolean"},{"name":"hasPursesFilter","in":"query","description":"Фильтр по признаку наличия кошельков, поле hasPurses <br>если hasPursesFilter = false, то выведутся карты без кошельков <br>если hasPursesFilter = true, то выведутся карты с кошельками","required":false,"type":"boolean"},{"name":"isOnlCardFilter","in":"query","description":"Фильтр по признаку онлайн карты, поле isOnlCard <br>если isOnlCardFilter = false, то выведутся карт, которые не онлайн <br>если isOnlCardFilter = true, то выведутся карты, которые онлайн","required":false,"type":"boolean"},{"name":"page","in":"query","description":"Номер страницы в запросе (номер страницы ведется с нуля)","required":false,"type":"integer","format":"int32"},{"name":"schemaNumberFilterList","in":"query","description":"Фильтр по идентификатору схемы обслуживания, поле schemaNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/schemas' поле schemaNumber <br>(описание запроса в Обработчике запросов по схеме обслуживания)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"size","in":"query","description":"Количество элементов на страницу в запросе","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Карта с полной информацией и онлайн картой и онлайн лимитами и расписанием»","originalRef":"Страница«Карта с полной информацией и онлайн картой и онлайн лимитами и расписанием»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>CARD_STATE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>CARD_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_CARD_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_CARD_TYPE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_LIMIT_CARD_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_LIMIT_KIND_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Карта с полной информацией и онлайн картой и онлайн лимитами и расписанием»","originalRef":"Страница«Карта с полной информацией и онлайн картой и онлайн лимитами и расписанием»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>CARD_STATE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>CARD_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_CARD_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_CARD_TYPE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_LIMIT_CARD_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_LIMIT_KIND_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/cards/with-purses":{"get":{"tags":["Обработчик запросов по карте"],"summary":"Получить страницу карт с кошельками","operationId":"cardsWithPursesUsingGET","produces":["*/*"],"parameters":[{"name":"cardNumberFilterList","in":"query","description":"Фильтр по номеру карты, поле cardNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех карт можно получить в запросе '/cards' поле cardNumber <br>(описание запроса в Обработчике запросов по карте)","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"cardStateIdFilterList","in":"query","description":"Фильтр по идентификатору состояния карты, поле cardStateId <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех состояний карт можно получить в запросе '/card-states' поле cardStateId <br>(описание запроса в Обработчике запросов по состоянию карты)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"hasElectronicPursesFilter","in":"query","description":"Фильтр по признаку наличия электронных кошельков, поле hasElectronicPurses <br>если hasElectronicPursesFilter = false, то выведутся карты без электронных кошельков <br>если hasElectronicPursesFilter = true, то выведутся карты с электронными кошельками","required":false,"type":"boolean"},{"name":"hasPursesFilter","in":"query","description":"Фильтр по признаку наличия кошельков, поле hasPurses <br>если hasPursesFilter = false, то выведутся карты без кошельков <br>если hasPursesFilter = true, то выведутся карты с кошельками","required":false,"type":"boolean"},{"name":"isOnlCardFilter","in":"query","description":"Фильтр по признаку онлайн карты, поле isOnlCard <br>если isOnlCardFilter = false, то выведутся карт, которые не онлайн <br>если isOnlCardFilter = true, то выведутся карты, которые онлайн","required":false,"type":"boolean"},{"name":"page","in":"query","description":"Номер страницы в запросе (номер страницы ведется с нуля)","required":false,"type":"integer","format":"int32"},{"name":"schemaNumberFilterList","in":"query","description":"Фильтр по идентификатору схемы обслуживания, поле schemaNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/schemas' поле schemaNumber <br>(описание запроса в Обработчике запросов по схеме обслуживания)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"size","in":"query","description":"Количество элементов на страницу в запросе","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Карта с кошельками»","originalRef":"Страница«Карта с кошельками»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>CARD_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Карта с кошельками»","originalRef":"Страница«Карта с кошельками»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>CARD_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/cards/with-purses-and-onl-card-with-all":{"get":{"tags":["Обработчик запросов по карте"],"summary":"Получить страницу карт с кошельками и онлайн картой и онлайн лимитами и расписанием для онлайн карты","operationId":"cardsWithPursesAndOnlCardWithAllUsingGET","produces":["*/*"],"parameters":[{"name":"cardNumberFilterList","in":"query","description":"Фильтр по номеру карты, поле cardNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех карт можно получить в запросе '/cards' поле cardNumber <br>(описание запроса в Обработчике запросов по карте)","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"cardStateIdFilterList","in":"query","description":"Фильтр по идентификатору состояния карты, поле cardStateId <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех состояний карт можно получить в запросе '/card-states' поле cardStateId <br>(описание запроса в Обработчике запросов по состоянию карты)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"hasElectronicPursesFilter","in":"query","description":"Фильтр по признаку наличия электронных кошельков, поле hasElectronicPurses <br>если hasElectronicPursesFilter = false, то выведутся карты без электронных кошельков <br>если hasElectronicPursesFilter = true, то выведутся карты с электронными кошельками","required":false,"type":"boolean"},{"name":"hasPursesFilter","in":"query","description":"Фильтр по признаку наличия кошельков, поле hasPurses <br>если hasPursesFilter = false, то выведутся карты без кошельков <br>если hasPursesFilter = true, то выведутся карты с кошельками","required":false,"type":"boolean"},{"name":"isOnlCardFilter","in":"query","description":"Фильтр по признаку онлайн карты, поле isOnlCard <br>если isOnlCardFilter = false, то выведутся карт, которые не онлайн <br>если isOnlCardFilter = true, то выведутся карты, которые онлайн","required":false,"type":"boolean"},{"name":"page","in":"query","description":"Номер страницы в запросе (номер страницы ведется с нуля)","required":false,"type":"integer","format":"int32"},{"name":"schemaNumberFilterList","in":"query","description":"Фильтр по идентификатору схемы обслуживания, поле schemaNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/schemas' поле schemaNumber <br>(описание запроса в Обработчике запросов по схеме обслуживания)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"size","in":"query","description":"Количество элементов на страницу в запросе","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Карта»","originalRef":"Страница«Карта»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>CARD_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_CARD_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_LIMIT_CARD_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Карта»","originalRef":"Страница«Карта»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>CARD_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_CARD_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_LIMIT_CARD_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/cards/with-purses-and-onl-card-with-all/full":{"get":{"tags":["Обработчик запросов по карте"],"summary":"Получить страницу карт с полной информацией и кошельками и онлайн картой и онлайн лимитами и расписанием для онлайн карты","operationId":"cardsWithPursesAndOnlCardWithAllFullUsingGET","produces":["*/*"],"parameters":[{"name":"cardNumberFilterList","in":"query","description":"Фильтр по номеру карты, поле cardNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех карт можно получить в запросе '/cards' поле cardNumber <br>(описание запроса в Обработчике запросов по карте)","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"cardStateIdFilterList","in":"query","description":"Фильтр по идентификатору состояния карты, поле cardStateId <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех состояний карт можно получить в запросе '/card-states' поле cardStateId <br>(описание запроса в Обработчике запросов по состоянию карты)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"hasElectronicPursesFilter","in":"query","description":"Фильтр по признаку наличия электронных кошельков, поле hasElectronicPurses <br>если hasElectronicPursesFilter = false, то выведутся карты без электронных кошельков <br>если hasElectronicPursesFilter = true, то выведутся карты с электронными кошельками","required":false,"type":"boolean"},{"name":"hasPursesFilter","in":"query","description":"Фильтр по признаку наличия кошельков, поле hasPurses <br>если hasPursesFilter = false, то выведутся карты без кошельков <br>если hasPursesFilter = true, то выведутся карты с кошельками","required":false,"type":"boolean"},{"name":"isOnlCardFilter","in":"query","description":"Фильтр по признаку онлайн карты, поле isOnlCard <br>если isOnlCardFilter = false, то выведутся карт, которые не онлайн <br>если isOnlCardFilter = true, то выведутся карты, которые онлайн","required":false,"type":"boolean"},{"name":"page","in":"query","description":"Номер страницы в запросе (номер страницы ведется с нуля)","required":false,"type":"integer","format":"int32"},{"name":"schemaNumberFilterList","in":"query","description":"Фильтр по идентификатору схемы обслуживания, поле schemaNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/schemas' поле schemaNumber <br>(описание запроса в Обработчике запросов по схеме обслуживания)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"size","in":"query","description":"Количество элементов на страницу в запросе","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Карта с полной информацией»","originalRef":"Страница«Карта с полной информацией»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>CARD_STATE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>CARD_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>SCHEMA_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>LIMIT_TYPE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>LIMIT_KIND_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_CARD_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_CARD_TYPE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_LIMIT_CARD_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_LIMIT_KIND_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Карта с полной информацией»","originalRef":"Страница«Карта с полной информацией»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>CARD_STATE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>CARD_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>SCHEMA_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>LIMIT_TYPE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>LIMIT_KIND_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_CARD_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_CARD_TYPE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_LIMIT_CARD_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_LIMIT_KIND_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/cards/with-purses/full":{"get":{"tags":["Обработчик запросов по карте"],"summary":"Получить страницу карт с полной информацией и кошельками","operationId":"cardsWithPursesFullUsingGET","produces":["*/*"],"parameters":[{"name":"cardNumberFilterList","in":"query","description":"Фильтр по номеру карты, поле cardNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех карт можно получить в запросе '/cards' поле cardNumber <br>(описание запроса в Обработчике запросов по карте)","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"cardStateIdFilterList","in":"query","description":"Фильтр по идентификатору состояния карты, поле cardStateId <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех состояний карт можно получить в запросе '/card-states' поле cardStateId <br>(описание запроса в Обработчике запросов по состоянию карты)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"hasElectronicPursesFilter","in":"query","description":"Фильтр по признаку наличия электронных кошельков, поле hasElectronicPurses <br>если hasElectronicPursesFilter = false, то выведутся карты без электронных кошельков <br>если hasElectronicPursesFilter = true, то выведутся карты с электронными кошельками","required":false,"type":"boolean"},{"name":"hasPursesFilter","in":"query","description":"Фильтр по признаку наличия кошельков, поле hasPurses <br>если hasPursesFilter = false, то выведутся карты без кошельков <br>если hasPursesFilter = true, то выведутся карты с кошельками","required":false,"type":"boolean"},{"name":"isOnlCardFilter","in":"query","description":"Фильтр по признаку онлайн карты, поле isOnlCard <br>если isOnlCardFilter = false, то выведутся карт, которые не онлайн <br>если isOnlCardFilter = true, то выведутся карты, которые онлайн","required":false,"type":"boolean"},{"name":"page","in":"query","description":"Номер страницы в запросе (номер страницы ведется с нуля)","required":false,"type":"integer","format":"int32"},{"name":"schemaNumberFilterList","in":"query","description":"Фильтр по идентификатору схемы обслуживания, поле schemaNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/schemas' поле schemaNumber <br>(описание запроса в Обработчике запросов по схеме обслуживания)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"size","in":"query","description":"Количество элементов на страницу в запросе","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Карта с полной информацией и кошельками»","originalRef":"Страница«Карта с полной информацией и кошельками»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>CARD_STATE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>SCHEMA_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>LIMIT_TYPE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>LIMIT_KIND_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Карта с полной информацией и кошельками»","originalRef":"Страница«Карта с полной информацией и кошельками»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>CARD_STATE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>SCHEMA_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>LIMIT_TYPE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>LIMIT_KIND_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/cards/{cardNumber}":{"get":{"tags":["Обработчик запросов по карте"],"summary":"Получить карту без онлайн карты и кошельков","operationId":"cardUsingGET","produces":["*/*"],"parameters":[{"name":"cardNumber","in":"path","description":"Номер карты","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Карта без онлайн карты и кошельков","originalRef":"Карта без онлайн карты и кошельков"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Карта без онлайн карты и кошельков","originalRef":"Карта без онлайн карты и кошельков"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/cards/{cardNumber}/full":{"get":{"tags":["Обработчик запросов по карте"],"summary":"Получить карту c полной информацией без онлайн карты и кошельков","operationId":"cardFullUsingGET","produces":["*/*"],"parameters":[{"name":"cardNumber","in":"path","description":"Номер карты","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Карта c полной информацией без онлайн карты и кошельков","originalRef":"Карта c полной информацией без онлайн карты и кошельков"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>CARD_STATE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Карта c полной информацией без онлайн карты и кошельков","originalRef":"Карта c полной информацией без онлайн карты и кошельков"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>CARD_STATE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/cards/{cardNumber}/onl-card":{"get":{"tags":["Обработчик запросов по онлайн карте"],"summary":"Получить онлайн карту","description":"Признак онлайн карты указан в поле isOnlCard <br>(поле isOnlCard можно получить в запросе '/cards/{cardNumber}' <br>описание запроса в Обработчике запросов по карте <br>и в разделе Models > Карта)","operationId":"onlCardUsingGET","produces":["*/*"],"parameters":[{"name":"cardNumber","in":"path","description":"Номер онлайн карты","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Онлайн карта без онлайн лимитов и расписания","originalRef":"Онлайн карта без онлайн лимитов и расписания"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>ONL_CARD_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Онлайн карта без онлайн лимитов и расписания","originalRef":"Онлайн карта без онлайн лимитов и расписания"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>ONL_CARD_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/cards/{cardNumber}/onl-card/day-schedule-list":{"get":{"tags":["Обработчик запросов по дню расписания для онлайн карты"],"summary":"Получить список дней расписания для онлайн карты","description":"Признак онлайн карты указан в поле isOnlCard <br>(поле isOnlCard можно получить в запросе '/cards/{cardNumber}' <br>описание запроса в Обработчике запросов по карте <br>и в разделе Models > Карта)","operationId":"dayScheduleListUsingGET","produces":["*/*"],"parameters":[{"name":"cardNumber","in":"path","description":"Номер онлайн карты","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/День расписания для онлайн карты","originalRef":"День расписания для онлайн карты"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>ONL_CARD_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/День расписания для онлайн карты","originalRef":"День расписания для онлайн карты"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>ONL_CARD_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/cards/{cardNumber}/onl-card/day-schedule-list/{dayId}":{"get":{"tags":["Обработчик запросов по дню расписания для онлайн карты"],"summary":"Получить днь расписания для онлайн карты","description":"Признак онлайн карты указан в поле isOnlCard <br>(поле isOnlCard можно получить в запросе '/cards/{cardNumber}' <br>описание запроса в Обработчике запросов по карте <br>и в разделе Models > Карта)","operationId":"dayScheduleUsingGET","produces":["*/*"],"parameters":[{"name":"cardNumber","in":"path","description":"Номер онлайн карты","required":true,"type":"string"},{"name":"dayId","in":"path","description":"Идентификатор дня (1, 2, 3, 4, 5, 6, 7)","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/День расписания для онлайн карты","originalRef":"День расписания для онлайн карты"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>ONL_CARD_MODEL_NOT_FOUND <br>ONL_CARD_DAY_SCHEDULE_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/День расписания для онлайн карты","originalRef":"День расписания для онлайн карты"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>ONL_CARD_MODEL_NOT_FOUND <br>ONL_CARD_DAY_SCHEDULE_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/cards/{cardNumber}/onl-card/full":{"get":{"tags":["Обработчик запросов по онлайн карте"],"summary":"Получить онлайн карту с полной информацией","description":"Признак онлайн карты указан в поле isOnlCard <br>(поле isOnlCard можно получить в запросе '/cards/{cardNumber}' <br>описание запроса в Обработчике запросов по карте <br>и в разделе Models > Карта)","operationId":"onlCardFullUsingGET","produces":["*/*"],"parameters":[{"name":"cardNumber","in":"path","description":"Номер онлайн карты","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Онлайн карта с полной информацией без онлайн лимитов и расписания","originalRef":"Онлайн карта с полной информацией без онлайн лимитов и расписания"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>ONL_CARD_MODEL_NOT_FOUND <br>ONL_CARD_TYPE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Онлайн карта с полной информацией без онлайн лимитов и расписания","originalRef":"Онлайн карта с полной информацией без онлайн лимитов и расписания"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>ONL_CARD_MODEL_NOT_FOUND <br>ONL_CARD_TYPE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/cards/{cardNumber}/onl-card/onl-limit-card":{"get":{"tags":["Обработчик запросов по онлайн лимитам по онлайн карте"],"summary":"Получить онлайн лимиты по онлайн карты","description":"Признак онлайн карты указан в поле isOnlCard <br>(поле isOnlCard можно получить в запросе '/cards/{cardNumber}' <br>описание запроса в Обработчике запросов по карте <br>и в разделе Models > Карта)","operationId":"onlLimitCardUsingGET","produces":["*/*"],"parameters":[{"name":"cardNumber","in":"path","description":"Номер онлайн карты","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Онлайн лимиты по онлайн карте","originalRef":"Онлайн лимиты по онлайн карте"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>ONL_CARD_MODEL_NOT_FOUND <br>ONL_LIMIT_CARD_MODEL_NOT_FOUND - ошибка данных, повтороте запрос через некоторое время <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Онлайн лимиты по онлайн карте","originalRef":"Онлайн лимиты по онлайн карте"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>ONL_CARD_MODEL_NOT_FOUND <br>ONL_LIMIT_CARD_MODEL_NOT_FOUND - ошибка данных, повтороте запрос через некоторое время <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/cards/{cardNumber}/onl-card/onl-limit-card-services":{"get":{"tags":["Обработчик запросов по онлайн лимитам по услуге по онлайн карте"],"summary":"Получить список онлайн лимитов по услугам для онлайн карты","description":"Признак онлайн карты указан в поле isOnlCard <br>(поле isOnlCard можно получить в запросе '/cards/{cardNumber}' <br>описание запроса в Обработчике запросов по карте <br>и в разделе Models > Карта)","operationId":"onlLimitCardServicesUsingGET","produces":["*/*"],"parameters":[{"name":"cardNumber","in":"path","description":"Номер онлайн карты","required":true,"type":"string"},{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Онлайн лимиты по услуге по онлайн карте","originalRef":"Онлайн лимиты по услуге по онлайн карте"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>ONL_CARD_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Онлайн лимиты по услуге по онлайн карте","originalRef":"Онлайн лимиты по услуге по онлайн карте"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>ONL_CARD_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/cards/{cardNumber}/onl-card/onl-limit-card-services/full":{"get":{"tags":["Обработчик запросов по онлайн лимитам по услуге по онлайн карте"],"summary":"Получить список онлайн лимитов по услугам для онлайн карты с полной информацией","description":"Признак онлайн карты указан в поле isOnlCard <br>(поле isOnlCard можно получить в запросе '/cards/{cardNumber}' <br>описание запроса в Обработчике запросов по карте <br>и в разделе Models > Карта)","operationId":"onlLimitCardServiceAllFullUsingGET","produces":["*/*"],"parameters":[{"name":"cardNumber","in":"path","description":"Номер онлайн карты","required":true,"type":"string"},{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Онлайн лимиты по услуге по онлайн карте с полной информацией","originalRef":"Онлайн лимиты по услуге по онлайн карте с полной информацией"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>ONL_CARD_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_LIMIT_KIND_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Онлайн лимиты по услуге по онлайн карте с полной информацией","originalRef":"Онлайн лимиты по услуге по онлайн карте с полной информацией"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>ONL_CARD_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_LIMIT_KIND_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/cards/{cardNumber}/onl-card/onl-limit-card-services/{serviceIdWeb}":{"get":{"tags":["Обработчик запросов по онлайн лимитам по услуге по онлайн карте"],"summary":"Получить онлайн лимиты по услуге для онлайн карты","description":"Признак онлайн карты указан в поле isOnlCard <br>(поле isOnlCard можно получить в запросе '/cards/{cardNumber}' <br>описание запроса в Обработчике запросов по карте <br>и в разделе Models > Карта)","operationId":"onlLimitCardServiceUsingGET","produces":["*/*"],"parameters":[{"name":"cardNumber","in":"path","description":"Номер онлайн карты","required":true,"type":"string"},{"name":"serviceIdWeb","in":"path","description":"Идентификатор услуги","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Онлайн лимиты по услуге по онлайн карте","originalRef":"Онлайн лимиты по услуге по онлайн карте"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>ONL_CARD_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND <br>ONL_LIMIT_CARD_SERVICE_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Онлайн лимиты по услуге по онлайн карте","originalRef":"Онлайн лимиты по услуге по онлайн карте"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>ONL_CARD_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND <br>ONL_LIMIT_CARD_SERVICE_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/cards/{cardNumber}/onl-card/onl-limit-card-services/{serviceIdWeb}/full":{"get":{"tags":["Обработчик запросов по онлайн лимитам по услуге по онлайн карте"],"summary":"Получить онлайн лимиты по услуге для онлайн карты с полной информацией","description":"Признак онлайн карты указан в поле isOnlCard <br>(поле isOnlCard можно получить в запросе '/cards/{cardNumber}' <br>описание запроса в Обработчике запросов по карте <br>и в разделе Models > Карта)","operationId":"onlLimitCardServiceFullUsingGET","produces":["*/*"],"parameters":[{"name":"cardNumber","in":"path","description":"Номер онлайн карты","required":true,"type":"string"},{"name":"serviceIdWeb","in":"path","description":"Идентификатор услуги","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Онлайн лимиты по услуге по онлайн карте с полной информацией","originalRef":"Онлайн лимиты по услуге по онлайн карте с полной информацией"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>ONL_CARD_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND <br>ONL_LIMIT_CARD_SERVICE_MODEL_NOT_FOUND <br>ONL_LIMIT_KIND_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Онлайн лимиты по услуге по онлайн карте с полной информацией","originalRef":"Онлайн лимиты по услуге по онлайн карте с полной информацией"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>ONL_CARD_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND <br>ONL_LIMIT_CARD_SERVICE_MODEL_NOT_FOUND <br>ONL_LIMIT_KIND_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/cards/{cardNumber}/onl-card/with-all":{"get":{"tags":["Обработчик запросов по онлайн карте"],"summary":"Получить онлайн карту с онлайн лимитами и расписанием","description":"Признак онлайн карты указан в поле isOnlCard <br>(поле isOnlCard можно получить в запросе '/cards/{cardNumber}' <br>описание запроса в Обработчике запросов по карте <br>и в разделе Models > Карта)","operationId":"onlCardWithAllUsingGET","produces":["*/*"],"parameters":[{"name":"cardNumber","in":"path","description":"Номер онлайн карты","required":true,"type":"string"},{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Онлайн карта","originalRef":"Онлайн карта"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>ONL_CARD_MODEL_NOT_FOUND <br>ONL_LIMIT_CARD_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Онлайн карта","originalRef":"Онлайн карта"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>ONL_CARD_MODEL_NOT_FOUND <br>ONL_LIMIT_CARD_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/cards/{cardNumber}/onl-card/with-all/full":{"get":{"tags":["Обработчик запросов по онлайн карте"],"summary":"Получить онлайн карту с полной информацией и онлайн лимитами и расписанием","description":"Признак онлайн карты указан в поле isOnlCard <br>(поле isOnlCard можно получить в запросе '/cards/{cardNumber}' <br>описание запроса в Обработчике запросов по карте <br>и в разделе Models > Карта)","operationId":"onlCardWithAllFullUsingGET","produces":["*/*"],"parameters":[{"name":"cardNumber","in":"path","description":"Номер онлайн карты","required":true,"type":"string"},{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Онлайн карта c полной информацией","originalRef":"Онлайн карта c полной информацией"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>ONL_CARD_MODEL_NOT_FOUND <br>ONL_CARD_TYPE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_LIMIT_CARD_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_LIMIT_KIND_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Онлайн карта c полной информацией","originalRef":"Онлайн карта c полной информацией"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>ONL_CARD_MODEL_NOT_FOUND <br>ONL_CARD_TYPE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_LIMIT_CARD_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_LIMIT_KIND_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/cards/{cardNumber}/onl-card/with-day-schedule-list":{"get":{"tags":["Обработчик запросов по онлайн карте"],"summary":"Получить онлайн карту с расписаем","description":"Признак онлайн карты указан в поле isOnlCard <br>(поле isOnlCard можно получить в запросе '/cards/{cardNumber}' <br>описание запроса в Обработчике запросов по карте <br>и в разделе Models > Карта)","operationId":"onlCardWithDayScheduleListUsingGET","produces":["*/*"],"parameters":[{"name":"cardNumber","in":"path","description":"Номер онлайн карты","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Онлайн карта с расписанием","originalRef":"Онлайн карта с расписанием"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>ONL_CARD_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Онлайн карта с расписанием","originalRef":"Онлайн карта с расписанием"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>ONL_CARD_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/cards/{cardNumber}/onl-card/with-day-schedule-list/full":{"get":{"tags":["Обработчик запросов по онлайн карте"],"summary":"Получить онлайн карту с полной информацией и расписанием","description":"Признак онлайн карты указан в поле isOnlCard <br>(поле isOnlCard можно получить в запросе '/cards/{cardNumber}' <br>описание запроса в Обработчике запросов по карте <br>и в разделе Models > Карта)","operationId":"onlCardWithDayScheduleListFullUsingGET","produces":["*/*"],"parameters":[{"name":"cardNumber","in":"path","description":"Номер онлайн карты","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Онлайн карта с полной информацией и расписанием","originalRef":"Онлайн карта с полной информацией и расписанием"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>ONL_CARD_MODEL_NOT_FOUND <br>ONL_CARD_TYPE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Онлайн карта с полной информацией и расписанием","originalRef":"Онлайн карта с полной информацией и расписанием"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>ONL_CARD_MODEL_NOT_FOUND <br>ONL_CARD_TYPE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/cards/{cardNumber}/onl-card/with-onl-limit-card":{"get":{"tags":["Обработчик запросов по онлайн карте"],"summary":"Получить онлайн карту с онлайн лимитами по онлайн карте","description":"Признак онлайн карты указан в поле isOnlCard <br>(поле isOnlCard можно получить в запросе '/cards/{cardNumber}' <br>описание запроса в Обработчике запросов по карте <br>и в разделе Models > Карта)","operationId":"onlCardWithOnlLimitCardUsingGET","produces":["*/*"],"parameters":[{"name":"cardNumber","in":"path","description":"Номер онлайн карты","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Онлайн карта с онлайн лимитами по онлайн карте","originalRef":"Онлайн карта с онлайн лимитами по онлайн карте"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>ONL_CARD_MODEL_NOT_FOUND <br>ONL_LIMIT_CARD_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Онлайн карта с онлайн лимитами по онлайн карте","originalRef":"Онлайн карта с онлайн лимитами по онлайн карте"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>ONL_CARD_MODEL_NOT_FOUND <br>ONL_LIMIT_CARD_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/cards/{cardNumber}/onl-card/with-onl-limit-card-services":{"get":{"tags":["Обработчик запросов по онлайн карте"],"summary":"Получить онлайн карту с онлайн лимитами по услугам по онлайн карте","description":"Признак онлайн карты указан в поле isOnlCard <br>(поле isOnlCard можно получить в запросе '/cards/{cardNumber}' <br>описание запроса в Обработчике запросов по карте <br>и в разделе Models > Карта)","operationId":"onlCardWithOnlLimitCardServicesUsingGET","produces":["*/*"],"parameters":[{"name":"cardNumber","in":"path","description":"Номер онлайн карты","required":true,"type":"string"},{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Онлайн карта с онлайн лимитами по услуге","originalRef":"Онлайн карта с онлайн лимитами по услуге"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>ONL_CARD_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Онлайн карта с онлайн лимитами по услуге","originalRef":"Онлайн карта с онлайн лимитами по услуге"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>ONL_CARD_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/cards/{cardNumber}/onl-card/with-onl-limit-card-services/full":{"get":{"tags":["Обработчик запросов по онлайн карте"],"summary":"Получить онлайн карту с полной информацией и онлайн лимитами по услугам по онлайн карте","description":"Признак онлайн карты указан в поле isOnlCard <br>(поле isOnlCard можно получить в запросе '/cards/{cardNumber}' <br>описание запроса в Обработчике запросов по карте <br>и в разделе Models > Карта)","operationId":"onlCardWithOnlLimitCardServicesFullUsingGET","produces":["*/*"],"parameters":[{"name":"cardNumber","in":"path","description":"Номер онлайн карты","required":true,"type":"string"},{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Онлайн карта с полной информацией и онлайн лимитами по услуге","originalRef":"Онлайн карта с полной информацией и онлайн лимитами по услуге"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>ONL_CARD_MODEL_NOT_FOUND <br>ONL_CARD_TYPE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_LIMIT_KIND_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Онлайн карта с полной информацией и онлайн лимитами по услуге","originalRef":"Онлайн карта с полной информацией и онлайн лимитами по услуге"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>ONL_CARD_MODEL_NOT_FOUND <br>ONL_CARD_TYPE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_LIMIT_KIND_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/cards/{cardNumber}/onl-card/with-onl-limit-card/full":{"get":{"tags":["Обработчик запросов по онлайн карте"],"summary":"Получить онлайн карту с полной информацием и онлайн лимитами по онлайн карте","description":"Признак онлайн карты указан в поле isOnlCard <br>(поле isOnlCard можно получить в запросе '/cards/{cardNumber}' <br>описание запроса в Обработчике запросов по карте <br>и в разделе Models > Карта)","operationId":"onlCardWithOnlLimitCardFullUsingGET","produces":["*/*"],"parameters":[{"name":"cardNumber","in":"path","description":"Номер онлайн карты","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Онлайн карта с полной информацией и онлайн лимитами по онлайн карте","originalRef":"Онлайн карта с полной информацией и онлайн лимитами по онлайн карте"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>ONL_CARD_MODEL_NOT_FOUND <br>ONL_CARD_TYPE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_LIMIT_CARD_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Онлайн карта с полной информацией и онлайн лимитами по онлайн карте","originalRef":"Онлайн карта с полной информацией и онлайн лимитами по онлайн карте"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>ONL_CARD_MODEL_NOT_FOUND <br>ONL_CARD_TYPE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_LIMIT_CARD_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/cards/{cardNumber}/purses":{"get":{"tags":["Обработчик запросов по кошельку"],"summary":"Получить список кошельков","operationId":"pursesUsingGET","produces":["*/*"],"parameters":[{"name":"cardNumber","in":"path","description":"Номер карты","required":true,"type":"string"},{"name":"schemaNumberFilterList","in":"query","description":"Фильтр по идентификатору схемы обслуживания, поле schemaNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/schemas' поле schemaNumber <br>(описание запроса в Обработчике запросов по схеме обслуживания)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Кошелек","originalRef":"Кошелек"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Кошелек","originalRef":"Кошелек"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/cards/{cardNumber}/purses/full":{"get":{"tags":["Обработчик запросов по кошельку"],"summary":"Получить список кошельков с полной информацией","operationId":"pursesFullUsingGET","produces":["*/*"],"parameters":[{"name":"cardNumber","in":"path","description":"Номер карты","required":true,"type":"string"},{"name":"schemaNumberFilterList","in":"query","description":"Фильтр по идентификатору схемы обслуживания, поле schemaNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/schemas' поле schemaNumber <br>(описание запроса в Обработчике запросов по схеме обслуживания)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Кошелек с полной информацией","originalRef":"Кошелек с полной информацией"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>SCHEMA_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>LIMIT_TYPE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>LIMIT_KIND_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Кошелек с полной информацией","originalRef":"Кошелек с полной информацией"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>SCHEMA_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>LIMIT_TYPE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>LIMIT_KIND_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/cards/{cardNumber}/purses/{serviceIdWeb}":{"get":{"tags":["Обработчик запросов по кошельку"],"summary":"Получить кошелек","operationId":"purseUsingGET","produces":["*/*"],"parameters":[{"name":"cardNumber","in":"path","description":"Номер карты","required":true,"type":"string"},{"name":"serviceIdWeb","in":"path","description":"Идентификатор услуги","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Кошелек","originalRef":"Кошелек"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND <br>PURSE_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Кошелек","originalRef":"Кошелек"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND <br>PURSE_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/cards/{cardNumber}/purses/{serviceIdWeb}/full":{"get":{"tags":["Обработчик запросов по кошельку"],"summary":"Получить кошелек с полной информацией","operationId":"purseFullUsingGET","produces":["*/*"],"parameters":[{"name":"cardNumber","in":"path","description":"Номер карты","required":true,"type":"string"},{"name":"serviceIdWeb","in":"path","description":"Идентификатор услуги","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Кошелек с полной информацией","originalRef":"Кошелек с полной информацией"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND <br>PURSE_MODEL_NOT_FOUND <br>SCHEMA_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>LIMIT_TYPE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>LIMIT_KIND_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Кошелек с полной информацией","originalRef":"Кошелек с полной информацией"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND <br>PURSE_MODEL_NOT_FOUND <br>SCHEMA_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>LIMIT_TYPE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>LIMIT_KIND_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/cards/{cardNumber}/with-onl-card-with-all":{"get":{"tags":["Обработчик запросов по карте"],"summary":"Получить карту с онлайн картой и онлайн лимитами и расписанием для онлайн карты","operationId":"cardWithOnlCardWithAllUsingGET","produces":["*/*"],"parameters":[{"name":"cardNumber","in":"path","description":"Номер карты","required":true,"type":"string"},{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Карта с онлайн картой и онлайн лимитами и расписанием","originalRef":"Карта с онлайн картой и онлайн лимитами и расписанием"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>ONL_CARD_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_LIMIT_CARD_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Карта с онлайн картой и онлайн лимитами и расписанием","originalRef":"Карта с онлайн картой и онлайн лимитами и расписанием"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>ONL_CARD_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_LIMIT_CARD_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/cards/{cardNumber}/with-onl-card-with-all/full":{"get":{"tags":["Обработчик запросов по карте"],"summary":"Получить карту с полной информацией и онлайн картой и онлайн лимитами и расписанием для онлайн карты","operationId":"cardWithOnlCardWithAllFullUsingGET","produces":["*/*"],"parameters":[{"name":"cardNumber","in":"path","description":"Номер карты","required":true,"type":"string"},{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Карта с полной информацией и онлайн картой и онлайн лимитами и расписанием","originalRef":"Карта с полной информацией и онлайн картой и онлайн лимитами и расписанием"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>CARD_STATE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_CARD_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_CARD_TYPE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_LIMIT_CARD_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_LIMIT_KIND_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Карта с полной информацией и онлайн картой и онлайн лимитами и расписанием","originalRef":"Карта с полной информацией и онлайн картой и онлайн лимитами и расписанием"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>CARD_STATE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_CARD_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_CARD_TYPE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_LIMIT_CARD_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_LIMIT_KIND_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/cards/{cardNumber}/with-purses":{"get":{"tags":["Обработчик запросов по карте"],"summary":"Получить карту с кошельками","operationId":"cardWithPursesUsingGET","produces":["*/*"],"parameters":[{"name":"cardNumber","in":"path","description":"Номер карты","required":true,"type":"string"},{"name":"schemaNumberFilterList","in":"query","description":"Фильтр по идентификатору схемы обслуживания, поле schemaNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/schemas' поле schemaNumber <br>(описание запроса в Обработчике запросов по схеме обслуживания)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Карта с кошельками","originalRef":"Карта с кошельками"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Карта с кошельками","originalRef":"Карта с кошельками"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/cards/{cardNumber}/with-purses-and-onl-card-with-all":{"get":{"tags":["Обработчик запросов по карте"],"summary":"Получить карту с кошельками и онлайн картой и онлайн лимитами и расписанием для онлайн карты","operationId":"cardWithPursesAndOnlCardWithAllUsingGET","produces":["*/*"],"parameters":[{"name":"cardNumber","in":"path","description":"Номер карты","required":true,"type":"string"},{"name":"schemaNumberFilterList","in":"query","description":"Фильтр по идентификатору схемы обслуживания, поле schemaNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/schemas' поле schemaNumber <br>(описание запроса в Обработчике запросов по схеме обслуживания)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Карта","originalRef":"Карта"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>ONL_CARD_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_LIMIT_CARD_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Карта","originalRef":"Карта"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>ONL_CARD_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_LIMIT_CARD_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/cards/{cardNumber}/with-purses-and-onl-card-with-all/full":{"get":{"tags":["Обработчик запросов по карте"],"summary":"Получить карту с полной информацией и кошельками и онлайн картой и онлайн лимитами и расписанием для онлайн карты","operationId":"cardWithPursesAndOnlCardWithAllFullUsingGET","produces":["*/*"],"parameters":[{"name":"cardNumber","in":"path","description":"Номер карты","required":true,"type":"string"},{"name":"schemaNumberFilterList","in":"query","description":"Фильтр по идентификатору схемы обслуживания, поле schemaNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/schemas' поле schemaNumber <br>(описание запроса в Обработчике запросов по схеме обслуживания)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Карта с полной информацией","originalRef":"Карта с полной информацией"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>CARD_STATE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>SCHEMA_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>LIMIT_TYPE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>LIMIT_KIND_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_CARD_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_CARD_TYPE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_LIMIT_CARD_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_LIMIT_KIND_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Карта с полной информацией","originalRef":"Карта с полной информацией"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>CARD_STATE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>SCHEMA_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>LIMIT_TYPE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>LIMIT_KIND_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_CARD_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_CARD_TYPE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_LIMIT_CARD_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_LIMIT_KIND_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/cards/{cardNumber}/with-purses/full":{"get":{"tags":["Обработчик запросов по карте"],"summary":"Получить карту с полной информацией и кошельками","operationId":"cardWithPursesFullUsingGET","produces":["*/*"],"parameters":[{"name":"cardNumber","in":"path","description":"Номер карты","required":true,"type":"string"},{"name":"schemaNumberFilterList","in":"query","description":"Фильтр по идентификатору схемы обслуживания, поле schemaNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/schemas' поле schemaNumber <br>(описание запроса в Обработчике запросов по схеме обслуживания)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Карта с полной информацией и кошельками","originalRef":"Карта с полной информацией и кошельками"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>CARD_STATE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>SCHEMA_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>LIMIT_TYPE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>LIMIT_KIND_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Карта с полной информацией и кошельками","originalRef":"Карта с полной информацией и кошельками"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>CARD_STATE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>SCHEMA_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>LIMIT_TYPE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>LIMIT_KIND_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/change-holder-requests":{"get":{"tags":["Обработчик запросов по заявке на изменение держателя карты"],"summary":"Получить страницу заявок на изменение держателей карт","description":"Доступ к заявке на изменение держателя карты дожен быть разблокирован, <br>поле allowChangeHolderRequest = true <br>(поле allowChangeHolderRequest можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"changeHolderRequestsUsingGET","produces":["*/*"],"parameters":[{"name":"beginDateFilter","in":"query","description":"Фильтр по дате начала выборки (Период с) <br>фильтруется по дате создания, поле dateOf","required":false,"type":"string","format":"date-time","x-example":"2022-01-01T00:00:00"},{"name":"cardNumberFilterList","in":"query","description":"Фильтр по номеру карты, поле cardNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех карт можно получить в запросе '/cards' поле cardNumber <br>(описание поля в Обработчике запросов по карте)","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"endDateFilter","in":"query","description":"Фильтр по дате конца выборки (Период с) <br>фильтруется по дате создания, поле dateOf","required":false,"type":"string","format":"date-time","x-example":"2022-01-31T23:59:59"},{"name":"page","in":"query","description":"Номер страницы в запросе (номер страницы ведется с нуля)","required":false,"type":"integer","format":"int32"},{"name":"rqStateIdFilterList","in":"query","description":"Фильтр по идентификатору состояния заявки, поле rqStateId <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех состояний заявки можно получить в запросе '/rq-states' поле rqStateId <br>(описание запроса в Обработчик запросов по состоянию заявки)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"sendOcFilter","in":"query","description":"Фильтр по подтверждению пользователем заявки <br>если sendOcFilter = false, то выведутся заявки, которые без подтреждения пользователем <br>если sendOcFilter = true, то выведутся заявки, которые подтреждены пользователем <br>подробное описание в поле canSendOcImm <br>(поле canSendOcImm, можно получить в запросе '/user-setting' <br>и описание в разделе Models > Пользовательские настройки)","required":false,"type":"boolean"},{"name":"size","in":"query","description":"Количество элементов на страницу в запросе","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Заявка на изменение держателя карты»","originalRef":"Страница«Заявка на изменение держателя карты»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>CHANGE_HOLDER_REQUEST_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Заявка на изменение держателя карты»","originalRef":"Страница«Заявка на изменение держателя карты»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>CHANGE_HOLDER_REQUEST_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]},"post":{"tags":["Обработчик запросов по заявке на изменение держателя карты"],"summary":"Создать заявку на изменение держателя карты","description":"Доступ к заявке на изменение держателя карты дожен быть разблокирован, <br>поле allowChangeHolderRequest = true <br>(поле allowChangeHolderRequest можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"createChangeHolderRequestUsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"form","description":"form","required":true,"schema":{"$ref":"#/definitions/Форма создание заявки на изменение держателя карты","originalRef":"Форма создание заявки на изменение держателя карты"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Заявка на изменение держателя карты","originalRef":"Заявка на изменение держателя карты"}},"201":{"description":"Created"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br>REQUEST_COULD_NOT_BE_CREATED_BECAUSE_CARD_STATE_IS_NOT_WORK <br>CHANGE_HOLDER_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_THERE_IS_AN_UNSENT_REQUEST_WITH_THIS_CARD_NUMBER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>CHANGE_HOLDER_REQUEST_FORBIDDEN <br>CARD_NUMBER_FORBIDDEN <br>REQUEST_FORBIDDEN_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION_FOR_UNSENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN_FOR_USER_IS_CARD_HOLDER_OR_USER_IS_MOBILE_USER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>CHANGE_HOLDER_REQUEST_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Заявка на изменение держателя карты","originalRef":"Заявка на изменение держателя карты"}},"201":{"description":"Created"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br>REQUEST_COULD_NOT_BE_CREATED_BECAUSE_CARD_STATE_IS_NOT_WORK <br>CHANGE_HOLDER_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_THERE_IS_AN_UNSENT_REQUEST_WITH_THIS_CARD_NUMBER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>CHANGE_HOLDER_REQUEST_FORBIDDEN <br>CARD_NUMBER_FORBIDDEN <br>REQUEST_FORBIDDEN_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION_FOR_UNSENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN_FOR_USER_IS_CARD_HOLDER_OR_USER_IS_MOBILE_USER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>CHANGE_HOLDER_REQUEST_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/change-holder-requests/full":{"get":{"tags":["Обработчик запросов по заявке на изменение держателя карты"],"summary":"Получить страницу заявок на изменение держателей карт с полной информацией","description":"Доступ к заявке на изменение держателя карты дожен быть разблокирован, <br>поле allowChangeHolderRequest = true <br>(поле allowChangeHolderRequest можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"changeHolderRequestsFullUsingGET","produces":["*/*"],"parameters":[{"name":"beginDateFilter","in":"query","description":"Фильтр по дате начала выборки (Период с) <br>фильтруется по дате создания, поле dateOf","required":false,"type":"string","format":"date-time","x-example":"2022-01-01T00:00:00"},{"name":"cardNumberFilterList","in":"query","description":"Фильтр по номеру карты, поле cardNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех карт можно получить в запросе '/cards' поле cardNumber <br>(описание поля в Обработчике запросов по карте)","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"endDateFilter","in":"query","description":"Фильтр по дате конца выборки (Период с) <br>фильтруется по дате создания, поле dateOf","required":false,"type":"string","format":"date-time","x-example":"2022-01-31T23:59:59"},{"name":"page","in":"query","description":"Номер страницы в запросе (номер страницы ведется с нуля)","required":false,"type":"integer","format":"int32"},{"name":"rqStateIdFilterList","in":"query","description":"Фильтр по идентификатору состояния заявки, поле rqStateId <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех состояний заявки можно получить в запросе '/rq-states' поле rqStateId <br>(описание запроса в Обработчик запросов по состоянию заявки)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"sendOcFilter","in":"query","description":"Фильтр по подтверждению пользователем заявки <br>если sendOcFilter = false, то выведутся заявки, которые без подтреждения пользователем <br>если sendOcFilter = true, то выведутся заявки, которые подтреждены пользователем <br>подробное описание в поле canSendOcImm <br>(поле canSendOcImm, можно получить в запросе '/user-setting' <br>и описание в разделе Models > Пользовательские настройки)","required":false,"type":"boolean"},{"name":"size","in":"query","description":"Количество элементов на страницу в запросе","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Заявка на изменение держателя карты с полной информацией»","originalRef":"Страница«Заявка на изменение держателя карты с полной информацией»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>CHANGE_HOLDER_REQUEST_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>RQ_STATE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Заявка на изменение держателя карты с полной информацией»","originalRef":"Страница«Заявка на изменение держателя карты с полной информацией»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>CHANGE_HOLDER_REQUEST_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>RQ_STATE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/change-holder-requests/send":{"post":{"tags":["Обработчик запросов по заявке на изменение держателя карты"],"summary":"Отправить заявки на изменение держателей карт, <br>которые не подтверждены пользователем (sendOc = false)","description":"Доступ к заявке на изменение держателя карты дожен быть разблокирован, <br>поле allowChangeHolderRequest = true <br>и настройка работы создания и отображение заявки <br>не должно быть установлено Отправлять сразу после создания, поле canSendOcImm != 2(поля allowChangeHolderRequest и canSendOcImm можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки) <br>заявки на изменение держателей карт, которые можно отправить <br>(не подтверждены пользователем, поле sendOc = false) <br>можно получить в запросе '/change-holder-requests?sendOcFilter=false' <br>или в запросе '/change-holder-requests/full?sendOcFilter=false' ","operationId":"sendChangeHolderRequestsUsingPOST","consumes":["application/json"],"produces":["*/*"],"responses":{"200":{"description":"OK"},"201":{"description":"Created"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>CHANGE_HOLDER_REQUEST_FORBIDDEN <br>SEND_REQUESTS_FORBIDDEN_REQUESTS_COULD_NOT_BE_SENT_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK"},"201":{"description":"Created"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>CHANGE_HOLDER_REQUEST_FORBIDDEN <br>SEND_REQUESTS_FORBIDDEN_REQUESTS_COULD_NOT_BE_SENT_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/change-holder-requests/{requestId}":{"get":{"tags":["Обработчик запросов по заявке на изменение держателя карты"],"summary":"Получить заявку на изменение держателя карты","description":"Доступ к заявке на изменение держателя карты дожен быть разблокирован, <br>поле allowChangeHolderRequest = true <br>(поле allowChangeHolderRequest можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"changeHolderRequestUsingGET","produces":["*/*"],"parameters":[{"name":"requestId","in":"path","description":"Идентификатор заявки","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Заявка на изменение держателя карты","originalRef":"Заявка на изменение держателя карты"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>CHANGE_HOLDER_REQUEST_FORBIDDEN <br>REQUEST_FORBIDDEN_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION_FOR_UNSENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN_FOR_USER_IS_CARD_HOLDER_OR_USER_IS_MOBILE_USER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CHANGE_HOLDER_REQUEST_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Заявка на изменение держателя карты","originalRef":"Заявка на изменение держателя карты"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>CHANGE_HOLDER_REQUEST_FORBIDDEN <br>REQUEST_FORBIDDEN_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION_FOR_UNSENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN_FOR_USER_IS_CARD_HOLDER_OR_USER_IS_MOBILE_USER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CHANGE_HOLDER_REQUEST_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]},"delete":{"tags":["Обработчик запросов по заявке на изменение держателя карты"],"summary":"Удаление заявки на изменение держателя карты","description":"Доступ к заявке на изменение держателя карты дожен быть разблокирован, <br>поле allowChangeHolderRequest = true <br>(поле allowChangeHolderRequest можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки) <br>заявки на изменение держателей карт, которые можно удалить <br>(не подтверждены пользователем, поле sendOc = false) <br>можно получить в запросе '/change-holder-requests?sendOcFilter=false' <br>или в запросе '/change-holder-requests/full?sendOcFilter=false' ","operationId":"deleteChangeHolderRequestUsingDELETE","produces":["*/*"],"parameters":[{"name":"requestId","in":"path","description":"Идентификатор заявки","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK"},"204":{"description":"No Content"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br>REQUEST_COULD_NOT_BE_DELETED_BECAUSE_REQUEST_SENT <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>CHANGE_HOLDER_REQUEST_FORBIDDEN <br>REQUEST_FORBIDDEN_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION_FOR_UNSENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN_FOR_USER_IS_CARD_HOLDER_OR_USER_IS_MOBILE_USER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CHANGE_HOLDER_REQUEST_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK"},"204":{"description":"No Content"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br>REQUEST_COULD_NOT_BE_DELETED_BECAUSE_REQUEST_SENT <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>CHANGE_HOLDER_REQUEST_FORBIDDEN <br>REQUEST_FORBIDDEN_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION_FOR_UNSENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN_FOR_USER_IS_CARD_HOLDER_OR_USER_IS_MOBILE_USER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CHANGE_HOLDER_REQUEST_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/change-holder-requests/{requestId}/full":{"get":{"tags":["Обработчик запросов по заявке на изменение держателя карты"],"summary":"Получить заявку на изменение держателя карты с полной информацией","description":"Доступ к заявке на изменение держателя карты дожен быть разблокирован, <br>поле allowChangeHolderRequest = true <br>(поле allowChangeHolderRequest можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"changeHolderRequestFullUsingGET","produces":["*/*"],"parameters":[{"name":"requestId","in":"path","description":"Идентификатор заявки","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Заявка на изменение держателя карты с полной информацией","originalRef":"Заявка на изменение держателя карты с полной информацией"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>CHANGE_HOLDER_REQUEST_FORBIDDEN <br>REQUEST_FORBIDDEN_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION_FOR_UNSENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN_FOR_USER_IS_CARD_HOLDER_OR_USER_IS_MOBILE_USER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CHANGE_HOLDER_REQUEST_MODEL_NOT_FOUND <br>RQ_STATE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Заявка на изменение держателя карты с полной информацией","originalRef":"Заявка на изменение держателя карты с полной информацией"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>CHANGE_HOLDER_REQUEST_FORBIDDEN <br>REQUEST_FORBIDDEN_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION_FOR_UNSENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN_FOR_USER_IS_CARD_HOLDER_OR_USER_IS_MOBILE_USER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CHANGE_HOLDER_REQUEST_MODEL_NOT_FOUND <br>RQ_STATE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/check/access-token":{"get":{"tags":["Обработчик запросов по авторизации"],"summary":"Проверить срок жизни токена доступа","operationId":"checkAccessTokenUsingGET","produces":["*/*"],"responses":{"200":{"description":"OK"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"responsesObject":{"200":{"description":"OK"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/dr-and-dd-requests":{"get":{"tags":["Обработчик запросов по заявке на ОИ (ОП и ОС)"],"summary":"Получить страницу заявок на ОИ (ОП и ОС)","description":"Доступ к заявке на ОИ (ОП и ОС) дожен быть разблокирован, поле allowDrDdRequest = true <br>(поле allowDrDdRequest можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"drDdRequestsUsingGET","produces":["*/*"],"parameters":[{"name":"beginDateFilter","in":"query","description":"Фильтр по дате начала выборки (Период с) <br>фильтруется по дате создания, поле dateOf","required":false,"type":"string","format":"date-time","x-example":"2022-01-01T00:00:00"},{"name":"cardNumberFilterList","in":"query","description":"Фильтр по номеру карты, поле cardNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех карт можно получить в запросе '/cards' поле cardNumber <br>(описание поля в Обработчике запросов по карте)","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"drDdTypeIdFilter","in":"query","description":"Фильтр по идентификатору типа завки ОИ (ОП и ОС) (drDdTypeId) <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех типов заявок на ОИ (ОП и ОС) можно получить <br>в запросе '/dr-and-dd-types' поле drDdTypeId <br>(описание зпроса в Лбработчике запросов по типу заявки на ОИ (ОП и ОС))","required":false,"type":"integer","format":"int32"},{"name":"endDateFilter","in":"query","description":"Фильтр по дате конца выборки (Период с) <br>фильтруется по дате создания, поле dateOf","required":false,"type":"string","format":"date-time","x-example":"2022-01-31T23:59:59"},{"name":"page","in":"query","description":"Номер страницы в запросе (номер страницы ведется с нуля)","required":false,"type":"integer","format":"int32"},{"name":"rqStateIdFilterList","in":"query","description":"Фильтр по идентификатору состояния заявки, поле rqStateId <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех состояний заявки можно получить в запросе '/rq-states' поле rqStateId <br>(описание запроса в Обработчик запросов по состоянию заявки)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"sendOcFilter","in":"query","description":"Фильтр по подтверждению пользователем заявки <br>если sendOcFilter = false, то выведутся заявки, которые без подтреждения пользователем <br>если sendOcFilter = true, то выведутся заявки, которые подтреждены пользователем <br>подробное описание в поле canSendOcImm <br>(поле canSendOcImm, можно получить в запросе '/user-setting' <br>и описание в разделе Models > Пользовательские настройки)","required":false,"type":"boolean"},{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"size","in":"query","description":"Количество элементов на страницу в запросе","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Заявка на ОИ (ОП и ОС)»","originalRef":"Страница«Заявка на ОИ (ОП и ОС)»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>DR_AND_DD_REQUEST_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Заявка на ОИ (ОП и ОС)»","originalRef":"Страница«Заявка на ОИ (ОП и ОС)»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>DR_AND_DD_REQUEST_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]},"post":{"tags":["Обработчик запросов по заявке на ОИ (ОП и ОС)"],"summary":"Создать заявку на ОИ (ОП и ОС)","description":"Доступ к заявке на ОИ (ОП и ОС) дожен быть разблокирован, поле allowDrDdRequest = true <br>(поле allowDrDdRequest можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"createDrDdRequestUsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"form","description":"form","required":true,"schema":{"$ref":"#/definitions/Форма создания заявки на ОИ (ОП и ОС)","originalRef":"Форма создания заявки на ОИ (ОП и ОС)"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Заявка на ОИ (ОП и ОС)","originalRef":"Заявка на ОИ (ОП и ОС)"}},"201":{"description":"Created"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br> <br>DR_AND_DD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_DR_DD_TYPE_ID_IS_EMPTY <br>DR_AND_DD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_CARD_NUMBER_IS_EMPTY <br>DR_AND_DD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_SERVICE_ID_WEB_IS_EMPTY <br>DR_AND_DD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_AMOUNT_IS_EMPTY <br>DR_AND_DD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_AMOUNT_IS_NEGATIVE <br>DR_AND_DD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_CARD_NUMBER_EXCEEDED_MAX_VALUE <br> <br>REQUEST_COULD_NOT_BE_CREATED_BECAUSE_CARD_STATE_IS_NOT_WORK <br>REQUEST_COULD_NOT_BE_CREATED_BECAUSE_CARD_HAS_NOT_ELECTRONIC_PURSES <br> <br>REQUEST_COULD_NOT_BE_CREATED_BECAUSE_PURSE_IS_NOT_ELECTRONIC_PURSE_BECAUSE_SCHEMA_ARE_NOT_EP_EPC_EPFP <br> <br>DR_AND_DD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_AMOUNT_GREATER_THAN_ACCOUNT_BALANCE_FOR_DR_REQUEST <br>DR_AND_DD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_AMOUNT_GREATER_THAN_MAX_SERVICE_CURRENCY_VALUE <br>DR_AND_DD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_AMOUNT_GREATER_THAN_MAX_SERVICE_VALUE <br>DR_AND_DD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_AMOUNT_GREATER_THAN_PURSE_BALANCE_FOR_DD_REQUEST <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>DR_AND_DD_REQUEST_FORBIDDEN <br>CREATE_DR_AND_DD_REQUEST_FORBIDDEN_BECAUSE_DR_REQUEST_FORBIDDEN <br>CREATE_DR_AND_DD_REQUEST_FORBIDDEN_BECAUSE_DD_REQUEST_FORBIDDEN <br>CARD_NUMBER_FORBIDDEN <br>ACCOUNT_FORBIDDEN <br>DR_AND_DD_REQUEST_FORBIDDEN_BECAUSE_DR_REQUEST_FORBIDDEN_FOR_SENT_REQUEST <br>DR_AND_DD_REQUEST_FORBIDDEN_BECAUSE_DD_REQUEST_FORBIDDEN_FOR_SENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION_FOR_UNSENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN_FOR_USER_IS_CARD_HOLDER_OR_USER_IS_MOBILE_USER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>DR_DD_TYPE_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND <br>PURSE_MODEL_NOT_FOUND <br>ACCOUNT_MODEL_NOT_FOUND <br>DR_AND_DD_REQUEST_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Заявка на ОИ (ОП и ОС)","originalRef":"Заявка на ОИ (ОП и ОС)"}},"201":{"description":"Created"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br> <br>DR_AND_DD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_DR_DD_TYPE_ID_IS_EMPTY <br>DR_AND_DD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_CARD_NUMBER_IS_EMPTY <br>DR_AND_DD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_SERVICE_ID_WEB_IS_EMPTY <br>DR_AND_DD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_AMOUNT_IS_EMPTY <br>DR_AND_DD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_AMOUNT_IS_NEGATIVE <br>DR_AND_DD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_CARD_NUMBER_EXCEEDED_MAX_VALUE <br> <br>REQUEST_COULD_NOT_BE_CREATED_BECAUSE_CARD_STATE_IS_NOT_WORK <br>REQUEST_COULD_NOT_BE_CREATED_BECAUSE_CARD_HAS_NOT_ELECTRONIC_PURSES <br> <br>REQUEST_COULD_NOT_BE_CREATED_BECAUSE_PURSE_IS_NOT_ELECTRONIC_PURSE_BECAUSE_SCHEMA_ARE_NOT_EP_EPC_EPFP <br> <br>DR_AND_DD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_AMOUNT_GREATER_THAN_ACCOUNT_BALANCE_FOR_DR_REQUEST <br>DR_AND_DD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_AMOUNT_GREATER_THAN_MAX_SERVICE_CURRENCY_VALUE <br>DR_AND_DD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_AMOUNT_GREATER_THAN_MAX_SERVICE_VALUE <br>DR_AND_DD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_AMOUNT_GREATER_THAN_PURSE_BALANCE_FOR_DD_REQUEST <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>DR_AND_DD_REQUEST_FORBIDDEN <br>CREATE_DR_AND_DD_REQUEST_FORBIDDEN_BECAUSE_DR_REQUEST_FORBIDDEN <br>CREATE_DR_AND_DD_REQUEST_FORBIDDEN_BECAUSE_DD_REQUEST_FORBIDDEN <br>CARD_NUMBER_FORBIDDEN <br>ACCOUNT_FORBIDDEN <br>DR_AND_DD_REQUEST_FORBIDDEN_BECAUSE_DR_REQUEST_FORBIDDEN_FOR_SENT_REQUEST <br>DR_AND_DD_REQUEST_FORBIDDEN_BECAUSE_DD_REQUEST_FORBIDDEN_FOR_SENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION_FOR_UNSENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN_FOR_USER_IS_CARD_HOLDER_OR_USER_IS_MOBILE_USER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>DR_DD_TYPE_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND <br>PURSE_MODEL_NOT_FOUND <br>ACCOUNT_MODEL_NOT_FOUND <br>DR_AND_DD_REQUEST_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/dr-and-dd-requests/full":{"get":{"tags":["Обработчик запросов по заявке на ОИ (ОП и ОС)"],"summary":"Получить страницу заявок на ОИ (ОП и ОС) с полной информацией","description":"Доступ к заявке на ОИ (ОП и ОС) дожен быть разблокирован, поле allowDrDdRequest = true <br>(поле allowDrDdRequest можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"drDdRequestsFullUsingGET","produces":["*/*"],"parameters":[{"name":"beginDateFilter","in":"query","description":"Фильтр по дате начала выборки (Период с) <br>фильтруется по дате создания, поле dateOf","required":false,"type":"string","format":"date-time","x-example":"2022-01-01T00:00:00"},{"name":"cardNumberFilterList","in":"query","description":"Фильтр по номеру карты, поле cardNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех карт можно получить в запросе '/cards' поле cardNumber <br>(описание поля в Обработчике запросов по карте)","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"drDdTypeIdFilter","in":"query","description":"Фильтр по идентификатору типа завки ОИ (ОП и ОС) (drDdTypeId) <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех типов заявок на ОИ (ОП и ОС) можно получить <br>в запросе '/dr-and-dd-types' поле drDdTypeId <br>(описание зпроса в Лбработчике запросов по типу заявки на ОИ (ОП и ОС))","required":false,"type":"integer","format":"int32"},{"name":"endDateFilter","in":"query","description":"Фильтр по дате конца выборки (Период с) <br>фильтруется по дате создания, поле dateOf","required":false,"type":"string","format":"date-time","x-example":"2022-01-31T23:59:59"},{"name":"page","in":"query","description":"Номер страницы в запросе (номер страницы ведется с нуля)","required":false,"type":"integer","format":"int32"},{"name":"rqStateIdFilterList","in":"query","description":"Фильтр по идентификатору состояния заявки, поле rqStateId <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех состояний заявки можно получить в запросе '/rq-states' поле rqStateId <br>(описание запроса в Обработчик запросов по состоянию заявки)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"sendOcFilter","in":"query","description":"Фильтр по подтверждению пользователем заявки <br>если sendOcFilter = false, то выведутся заявки, которые без подтреждения пользователем <br>если sendOcFilter = true, то выведутся заявки, которые подтреждены пользователем <br>подробное описание в поле canSendOcImm <br>(поле canSendOcImm, можно получить в запросе '/user-setting' <br>и описание в разделе Models > Пользовательские настройки)","required":false,"type":"boolean"},{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"size","in":"query","description":"Количество элементов на страницу в запросе","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Заявка на ОИ (ОП и ОС) с полной информацией»","originalRef":"Страница«Заявка на ОИ (ОП и ОС) с полной информацией»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>DR_AND_DD_REQUEST_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>DR_DD_TYPE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>RQ_STATE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>CANCEL_CAUSE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Заявка на ОИ (ОП и ОС) с полной информацией»","originalRef":"Страница«Заявка на ОИ (ОП и ОС) с полной информацией»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>DR_AND_DD_REQUEST_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>DR_DD_TYPE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>RQ_STATE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>CANCEL_CAUSE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/dr-and-dd-requests/send":{"post":{"tags":["Обработчик запросов по заявке на ОИ (ОП и ОС)"],"summary":"Отправить заявки на ОИ (ОП и ОС)","description":"Доступ к заявке на ОИ (ОП и ОС) дожен быть разблокирован, поле allowDrDdRequest = true <br>и настройка работы создания и отображение заявки <br>не должно быть установлено Отправлять сразу после создания, поле canSendOcImm != 2(поля allowDrDdRequest и canSendOcImm можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки) <br>заявки на ОИ (ОП и ОС), которые можно отправить <br>(не подтверждены пользователем, поле sendOc = false) <br>можно получить в запросе '/dr-and-dd-requests?sendOcFilter=false' <br>или в запросе '/dr-and-dd-requests/full?sendOcFilter=false' ","operationId":"sendDrDdRequestsUsingPOST","consumes":["application/json"],"produces":["*/*"],"responses":{"200":{"description":"OK"},"201":{"description":"Created"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>DR_AND_DD_REQUEST_FORBIDDEN <br>SEND_REQUESTS_FORBIDDEN_REQUESTS_COULD_NOT_BE_SENT_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK"},"201":{"description":"Created"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>DR_AND_DD_REQUEST_FORBIDDEN <br>SEND_REQUESTS_FORBIDDEN_REQUESTS_COULD_NOT_BE_SENT_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/dr-and-dd-requests/{drDdTypeId}/{requestId}":{"get":{"tags":["Обработчик запросов по заявке на ОИ (ОП и ОС)"],"summary":"Получить заявку на ОИ (ОП и ОС)","description":"Доступ к заявке на ОИ (ОП и ОС) дожен быть разблокирован, поле allowDrDdRequest = true <br>(поле allowDrDdRequest можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"drDdRequestUsingGET","produces":["*/*"],"parameters":[{"name":"drDdTypeId","in":"path","description":"Идентификатор типа заявки на ОИ (ОП и ОС)","required":true,"type":"integer","format":"int32"},{"name":"requestId","in":"path","description":"Идентификатор заявки","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Заявка на ОИ (ОП и ОС)","originalRef":"Заявка на ОИ (ОП и ОС)"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>DR_AND_DD_REQUEST_FORBIDDEN <br>DR_AND_DD_REQUEST_FORBIDDEN_BECAUSE_DR_REQUEST_FORBIDDEN_FOR_SENT_REQUEST <br>DR_AND_DD_REQUEST_FORBIDDEN_BECAUSE_DD_REQUEST_FORBIDDEN_FOR_SENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION_FOR_UNSENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN_FOR_USER_IS_CARD_HOLDER_OR_USER_IS_MOBILE_USER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>DR_DD_TYPE_MODEL_NOT_FOUND <br>DR_AND_DD_REQUEST_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Заявка на ОИ (ОП и ОС)","originalRef":"Заявка на ОИ (ОП и ОС)"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>DR_AND_DD_REQUEST_FORBIDDEN <br>DR_AND_DD_REQUEST_FORBIDDEN_BECAUSE_DR_REQUEST_FORBIDDEN_FOR_SENT_REQUEST <br>DR_AND_DD_REQUEST_FORBIDDEN_BECAUSE_DD_REQUEST_FORBIDDEN_FOR_SENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION_FOR_UNSENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN_FOR_USER_IS_CARD_HOLDER_OR_USER_IS_MOBILE_USER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>DR_DD_TYPE_MODEL_NOT_FOUND <br>DR_AND_DD_REQUEST_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]},"delete":{"tags":["Обработчик запросов по заявке на ОИ (ОП и ОС)"],"summary":"Удаление заявки на ОИ (ОП и ОС)","description":"Доступ к заявке на ОИ (ОП и ОС) дожен быть разблокирован, поле allowDrDdRequest = true <br>(поле allowDrDdRequest можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки) <br>заявки на ОИ (ОП и ОС), которые можно удалить <br>(не подтверждены пользователем, поле sendOc = false) <br>можно получить в запросе '/dr-and-dd-requests?sendOcFilter=false' <br>или в запросе '/dr-and-dd-requests/full?sendOcFilter=false' ","operationId":"deleteDrDdRequestUsingDELETE","produces":["*/*"],"parameters":[{"name":"drDdTypeId","in":"path","description":"Идентификатор типа заявки на ОИ (ОП и ОС)","required":true,"type":"integer","format":"int32"},{"name":"requestId","in":"path","description":"Идентификатор заявки","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK"},"204":{"description":"No Content"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br>REQUEST_COULD_NOT_BE_DELETED_BECAUSE_REQUEST_SENT <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>DR_AND_DD_REQUEST_FORBIDDEN <br>DR_AND_DD_REQUEST_FORBIDDEN_BECAUSE_DR_REQUEST_FORBIDDEN_FOR_SENT_REQUEST <br>DR_AND_DD_REQUEST_FORBIDDEN_BECAUSE_DD_REQUEST_FORBIDDEN_FOR_SENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION_FOR_UNSENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN_FOR_USER_IS_CARD_HOLDER_OR_USER_IS_MOBILE_USER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>DR_DD_TYPE_MODEL_NOT_FOUND <br>DR_AND_DD_REQUEST_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK"},"204":{"description":"No Content"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br>REQUEST_COULD_NOT_BE_DELETED_BECAUSE_REQUEST_SENT <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>DR_AND_DD_REQUEST_FORBIDDEN <br>DR_AND_DD_REQUEST_FORBIDDEN_BECAUSE_DR_REQUEST_FORBIDDEN_FOR_SENT_REQUEST <br>DR_AND_DD_REQUEST_FORBIDDEN_BECAUSE_DD_REQUEST_FORBIDDEN_FOR_SENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION_FOR_UNSENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN_FOR_USER_IS_CARD_HOLDER_OR_USER_IS_MOBILE_USER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>DR_DD_TYPE_MODEL_NOT_FOUND <br>DR_AND_DD_REQUEST_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/dr-and-dd-requests/{drDdTypeId}/{requestId}/full":{"get":{"tags":["Обработчик запросов по заявке на ОИ (ОП и ОС)"],"summary":"Получить заявку на ОИ (ОП и ОС) с полной информацией","description":"Доступ к заявке на ОИ (ОП и ОС) дожен быть разблокирован, поле allowDrDdRequest = true <br>(поле allowDrDdRequest можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"drDdRequestFullUsingGET","produces":["*/*"],"parameters":[{"name":"drDdTypeId","in":"path","description":"Идентификатор типа заявки на ОИ (ОП и ОС)","required":true,"type":"integer","format":"int32"},{"name":"requestId","in":"path","description":"Идентификатор заявки","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Заявка на ОИ (ОП и ОС) с полной информацией","originalRef":"Заявка на ОИ (ОП и ОС) с полной информацией"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>DR_AND_DD_REQUEST_FORBIDDEN <br>DR_AND_DD_REQUEST_FORBIDDEN_BECAUSE_DR_REQUEST_FORBIDDEN_FOR_SENT_REQUEST <br>DR_AND_DD_REQUEST_FORBIDDEN_BECAUSE_DD_REQUEST_FORBIDDEN_FOR_SENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION_FOR_UNSENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN_FOR_USER_IS_CARD_HOLDER_OR_USER_IS_MOBILE_USER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>DR_DD_TYPE_MODEL_NOT_FOUND <br>DR_AND_DD_REQUEST_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>RQ_STATE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>CANCEL_CAUSE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Заявка на ОИ (ОП и ОС) с полной информацией","originalRef":"Заявка на ОИ (ОП и ОС) с полной информацией"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>DR_AND_DD_REQUEST_FORBIDDEN <br>DR_AND_DD_REQUEST_FORBIDDEN_BECAUSE_DR_REQUEST_FORBIDDEN_FOR_SENT_REQUEST <br>DR_AND_DD_REQUEST_FORBIDDEN_BECAUSE_DD_REQUEST_FORBIDDEN_FOR_SENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION_FOR_UNSENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN_FOR_USER_IS_CARD_HOLDER_OR_USER_IS_MOBILE_USER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>DR_DD_TYPE_MODEL_NOT_FOUND <br>DR_AND_DD_REQUEST_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>RQ_STATE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>CANCEL_CAUSE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/dr-and-dd-types":{"get":{"tags":["Обработчик запросов по типу заявки на ОИ (ОП и ОС)"],"summary":"Получить список типов заявки на ОИ (ОП и ОС)","operationId":"drDdTypesUsingGET","produces":["*/*"],"parameters":[{"name":"allowFilter","in":"query","description":"Фильтр по разрешению типа заявки на ОИ (ОП и ОС), поле allow <br>если allowFilter = false, то выведутся типы заявки на ОИ (ОП и ОС), которые заблокированы <br>если allowFilter = true, то выведутся типы заявки на ОИ (ОП и ОС), которые разблокированы","required":false,"type":"boolean"}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Тип заявки на ОИ (ОП и ОС)","originalRef":"Тип заявки на ОИ (ОП и ОС)"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"responsesObject":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Тип заявки на ОИ (ОП и ОС)","originalRef":"Тип заявки на ОИ (ОП и ОС)"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/dr-and-dd-types/{drDdTypeId}":{"get":{"tags":["Обработчик запросов по типу заявки на ОИ (ОП и ОС)"],"summary":"Получить тип заявки на ОИ (ОП и ОС)","operationId":"drDdTypeUsingGET","produces":["*/*"],"parameters":[{"name":"drDdTypeId","in":"path","description":"Идентификатор типа заявки на ОИ (ОП и ОС)","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Тип заявки на ОИ (ОП и ОС)","originalRef":"Тип заявки на ОИ (ОП и ОС)"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>DR_DD_TYPE_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Тип заявки на ОИ (ОП и ОС)","originalRef":"Тип заявки на ОИ (ОП и ОС)"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>DR_DD_TYPE_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/group-coupons/{groupCouponsId}":{"get":{"tags":["Обработчик запросов по группы талонов"],"summary":"Получить группу талонов","description":"Доступ к талону должен быть разрешен, поле allowVc = true <br>(поле allowVc можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"groupCouponsUsingGET","produces":["*/*"],"parameters":[{"name":"groupCouponsId","in":"path","description":"Идентификатор группы талонов","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Группа талонов","originalRef":"Группа талонов"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>GROUP_COUPONS_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Группа талонов","originalRef":"Группа талонов"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>GROUP_COUPONS_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/group-coupons/{groupCouponsId}/full":{"get":{"tags":["Обработчик запросов по группы талонов"],"summary":"Получить группу талонов с полной информацией","description":"Доступ к талону должен быть разрешен, поле allowVc = true <br>(поле allowVc можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"groupCouponsFullUsingGET","produces":["*/*"],"parameters":[{"name":"groupCouponsId","in":"path","description":"Идентификатор группы талонов","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Группа талонов с полной информацией","originalRef":"Группа талонов с полной информацией"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>GROUP_COUPONS_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>VIRTUAL_COUPON_LIMIT_TYPE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Группа талонов с полной информацией","originalRef":"Группа талонов с полной информацией"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>GROUP_COUPONS_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>VIRTUAL_COUPON_LIMIT_TYPE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/languages":{"get":{"tags":["Обработчик запросов по языку"],"summary":"Получить список языков","operationId":"languagesUsingGET","produces":["*/*"],"parameters":[{"name":"lngIdFilterList","in":"query","description":"Фильтр по идентификатору языка, поле lngId <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех языков можно получить в запросе '/languages' поле lngId <br>(описание запроса в Обработчике запросов по языку)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"lngPrefixFilterList","in":"query","description":"Фильтр по языковому префиксу, поле lngPrefix <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех языковых префиксов можно получить в запросе '/languages' поле lngPrefix <br>(описание запроса в Обработчике запросов по языку)","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"wordIdFilterList","in":"query","description":"Фильтр по идентификатору слова, поле wordId <br>можно указать список идентификаторов, по которому будет фильтрациясписок всех слов можно получить в запросе '/languages/{lngId}/words' поле wordId <br>(описание запроса в Обработчике запросов по слову языка)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Язык без слов","originalRef":"Язык без слов"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"responsesObject":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Язык без слов","originalRef":"Язык без слов"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/languages/with-words":{"get":{"tags":["Обработчик запросов по языку"],"summary":"Получить список языков со словами","operationId":"languagesWithWordsUsingGET","produces":["*/*"],"parameters":[{"name":"lngIdFilterList","in":"query","description":"Фильтр по идентификатору языка, поле lngId <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех языков можно получить в запросе '/languages' поле lngId <br>(описание запроса в Обработчике запросов по языку)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"lngPrefixFilterList","in":"query","description":"Фильтр по языковому префиксу, поле lngPrefix <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех языковых префиксов можно получить в запросе '/languages' поле lngPrefix <br>(описание запроса в Обработчике запросов по языку)","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"wordIdFilterList","in":"query","description":"Фильтр по идентификатору слова, поле wordId <br>можно указать список идентификаторов, по которому будет фильтрациясписок всех слов можно получить в запросе '/languages/{lngId}/words' поле wordId <br>(описание запроса в Обработчике запросов по слову языка)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Язык","originalRef":"Язык"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"responsesObject":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Язык","originalRef":"Язык"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/languages/{lngId}":{"get":{"tags":["Обработчик запросов по языку"],"summary":"Получить язык","description":"Язык пользователя указал в поле lngId <br>(поле lngId можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"languageUsingGET","produces":["*/*"],"parameters":[{"name":"lngId","in":"path","description":"Идентификатор языка","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Язык без слов","originalRef":"Язык без слов"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>LNG_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Язык без слов","originalRef":"Язык без слов"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>LNG_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/languages/{lngId}/with-words":{"get":{"tags":["Обработчик запросов по языку"],"summary":"Получить язык со словами","description":"Язык пользователя указал в поле lngId <br>(поле lngId можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"languageWithWordsUsingGET","produces":["*/*"],"parameters":[{"name":"lngId","in":"path","description":"Идентификатор языка","required":true,"type":"integer","format":"int32"},{"name":"wordIdFilterList","in":"query","description":"Фильтр по идентификатору слова, поле wordId <br>можно указать список идентификаторов, по которому будет фильтрациясписок всех слов можно получить в запросе '/languages/{lngId}/words' поле wordId <br>(описание запроса в Обработчике запросов по слову языка)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Язык","originalRef":"Язык"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>LNG_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Язык","originalRef":"Язык"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>LNG_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/languages/{lngId}/words":{"get":{"tags":["Обработчик запросов по слову языка"],"summary":"Получить список слов","description":"Язык пользователя указал в поле lngId <br>(поле lngId можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"languageWordsUsingGET","produces":["*/*"],"parameters":[{"name":"lngId","in":"path","description":"Идентификатор языка","required":true,"type":"integer","format":"int32"},{"name":"wordIdFilterList","in":"query","description":"Фильтр по идентификатору слова, поле wordId <br>можно указать список идентификаторов, по которому будет фильтрациясписок всех слов можно получить в запросе '/languages/{lngId}/words' поле wordId <br>(описание запроса в Обработчике запросов по слову языка)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Слово языка","originalRef":"Слово языка"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>LNG_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Слово языка","originalRef":"Слово языка"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>LNG_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/languages/{lngId}/words/{wordId}":{"get":{"tags":["Обработчик запросов по слову языка"],"summary":"Получить слово","description":"Язык пользователя указал в поле lngId <br>(поле lngId можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"languageWordUsingGET","produces":["*/*"],"parameters":[{"name":"lngId","in":"path","description":"Идентификатор языка","required":true,"type":"integer","format":"int32"},{"name":"wordId","in":"path","description":"Идентификатор слова","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Слово языка","originalRef":"Слово языка"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>LNG_MODEL_NOT_FOUND <br>LNG_WORD_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Слово языка","originalRef":"Слово языка"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>LNG_MODEL_NOT_FOUND <br>LNG_WORD_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/limit-kinds":{"get":{"tags":["Обработчик запросов по типу лимита для кошелька"],"summary":"Получить список видов лимита для кошелька","operationId":"limitKindsUsingGET","produces":["*/*"],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Вид лимита для кошелька","originalRef":"Вид лимита для кошелька"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"responsesObject":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Вид лимита для кошелька","originalRef":"Вид лимита для кошелька"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/limit-kinds/{limitKindId}":{"get":{"tags":["Обработчик запросов по типу лимита для кошелька"],"summary":"Получить вид лимита для кошелька","operationId":"limitKindUsingGET","produces":["*/*"],"parameters":[{"name":"limitKindId","in":"path","description":"Идентификатор вида лимита для кошелька","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Вид лимита для кошелька","originalRef":"Вид лимита для кошелька"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>LIMIT_KIND_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Вид лимита для кошелька","originalRef":"Вид лимита для кошелька"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>LIMIT_KIND_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/limit-types":{"get":{"tags":["Обработчик запросов по вида лимита для кошелька"],"summary":"Получить список типов лимита для кошелька","operationId":"limitTypesUsingGET","produces":["*/*"],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Тип лимита для кошелька","originalRef":"Тип лимита для кошелька"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"responsesObject":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Тип лимита для кошелька","originalRef":"Тип лимита для кошелька"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/limit-types/{limitTypeId}":{"get":{"tags":["Обработчик запросов по вида лимита для кошелька"],"summary":"Получить тип лимита для кошелька","operationId":"limitTypeUsingGET","produces":["*/*"],"parameters":[{"name":"limitTypeId","in":"path","description":"Идентификатор типа лимита для кошелька","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Тип лимита для кошелька","originalRef":"Тип лимита для кошелька"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>LIMIT_TYPE_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Тип лимита для кошелька","originalRef":"Тип лимита для кошелька"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>LIMIT_TYPE_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/oil-requests":{"get":{"tags":["Обработчик запросов по заявке на ОИЛ"],"summary":"Получить страницу заявок на ОИЛ","description":"Доступ к заявке на ОИЛ дожен быть разблокирован, поле allowOilRequest = true <br>(поле allowOilRequest можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"oilRequestsUsingGET","produces":["*/*"],"parameters":[{"name":"beginDateFilter","in":"query","description":"Фильтр по дате начала выборки (Период с) <br>фильтруется по дате создания, поле dateOf","required":false,"type":"string","format":"date-time","x-example":"2022-01-01T00:00:00"},{"name":"cardNumberFilterList","in":"query","description":"Фильтр по номеру карты, поле cardNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех карт можно получить в запросе '/cards' поле cardNumber <br>(описание поля в Обработчике запросов по карте)","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"endDateFilter","in":"query","description":"Фильтр по дате конца выборки (Период с) <br>фильтруется по дате создания, поле dateOf","required":false,"type":"string","format":"date-time","x-example":"2022-01-31T23:59:59"},{"name":"page","in":"query","description":"Номер страницы в запросе (номер страницы ведется с нуля)","required":false,"type":"integer","format":"int32"},{"name":"rqStateIdFilterList","in":"query","description":"Фильтр по идентификатору состояния заявки, поле rqStateId <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех состояний заявки можно получить в запросе '/rq-states' поле rqStateId <br>(описание запроса в Обработчик запросов по состоянию заявки)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"sendOcFilter","in":"query","description":"Фильтр по подтверждению пользователем заявки <br>если sendOcFilter = false, то выведутся заявки, которые без подтреждения пользователем <br>если sendOcFilter = true, то выведутся заявки, которые подтреждены пользователем <br>подробное описание в поле canSendOcImm <br>(поле canSendOcImm, можно получить в запросе '/user-setting' <br>и описание в разделе Models > Пользовательские настройки)","required":false,"type":"boolean"},{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"size","in":"query","description":"Количество элементов на страницу в запросе","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Заявка на ОИЛ»","originalRef":"Страница«Заявка на ОИЛ»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>OIL_REQUEST_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Заявка на ОИЛ»","originalRef":"Страница«Заявка на ОИЛ»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>OIL_REQUEST_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]},"post":{"tags":["Обработчик запросов по заявке на ОИЛ"],"summary":"Создать заявку на ОИЛ","description":"Доступ к заявке на ОИЛ дожен быть разблокирован, поле allowOilRequest = true <br>(поле allowOilRequest можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"createOilRequestUsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"form","description":"form","required":true,"schema":{"$ref":"#/definitions/Форма создания заявки на ОИЛ","originalRef":"Форма создания заявки на ОИЛ"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Заявка на ОИЛ","originalRef":"Заявка на ОИЛ"}},"201":{"description":"Created"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br> <br>OIL_REQUEST_FORM_NOT_VALIDATED_BECAUSE_CARD_NUMBER_IS_EMPTY <br>OIL_REQUEST_FORM_NOT_VALIDATED_BECAUSE_SERVICE_ID_WEB_IS_EMPTY <br>OIL_REQUEST_FORM_NOT_VALIDATED_BECAUSE_AMOUNT_IS_EMPTY <br>OIL_REQUEST_FORM_NOT_VALIDATED_BECAUSE_DATE_BEGIN_IS_EMPTY <br>OIL_REQUEST_FORM_NOT_VALIDATED_BECAUSE_CARD_NUMBER_EXCEEDED_MAX_VALUE <br>OIL_REQUEST_FORM_NOT_VALIDATED_BECAUSE_AMOUNT_IS_NEGATIVE <br>OIL_REQUEST_FORM_NOT_VALIDATED_BECAUSE_DATE_BEGIN_IS_BEFORE_DATE_NOW <br>REQUEST_COULD_NOT_BE_CREATED_BECAUSE_CARD_STATE_IS_NOT_WORK <br>OIL_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_AMOUNT_IS_SAME_DOES_NOT_DIFFERENT_FROM_CURRENT_LIMIT <br>OIL_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_AMOUNT_GREATER_THAN_MAX_LIMIT <br>OIL_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_CARD_NUMBER_THERE_IS_AN_UNSENT_REQUEST_WITH_THIS_CARD_NUMBER <br>OIL_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_CARD_NUMBER_THERE_IS_AN_UNSENT_REQUEST_WITH_THIS_SERVICE_ID_WEB <br>OIL_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_THERE_IS_A_SENT_AND_UNCONFIRMED_REQUEST_WITH_THIS_CARD_NUMBER <br>OIL_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_THERE_IS_A_SENT_AND_UNCONFIRMED_REQUEST_WITH_THIS_SERVICE_ID_WEB <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>OIL_REQUEST_FORBIDDEN <br>CARD_NUMBER_FORBIDDEN <br>REQUEST_FORBIDDEN_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION_FOR_UNSENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN_FOR_USER_IS_CARD_HOLDER_OR_USER_IS_MOBILE_USER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND <br>PURSE_MODEL_NOT_FOUND <br>OIL_REQUEST_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Заявка на ОИЛ","originalRef":"Заявка на ОИЛ"}},"201":{"description":"Created"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br> <br>OIL_REQUEST_FORM_NOT_VALIDATED_BECAUSE_CARD_NUMBER_IS_EMPTY <br>OIL_REQUEST_FORM_NOT_VALIDATED_BECAUSE_SERVICE_ID_WEB_IS_EMPTY <br>OIL_REQUEST_FORM_NOT_VALIDATED_BECAUSE_AMOUNT_IS_EMPTY <br>OIL_REQUEST_FORM_NOT_VALIDATED_BECAUSE_DATE_BEGIN_IS_EMPTY <br>OIL_REQUEST_FORM_NOT_VALIDATED_BECAUSE_CARD_NUMBER_EXCEEDED_MAX_VALUE <br>OIL_REQUEST_FORM_NOT_VALIDATED_BECAUSE_AMOUNT_IS_NEGATIVE <br>OIL_REQUEST_FORM_NOT_VALIDATED_BECAUSE_DATE_BEGIN_IS_BEFORE_DATE_NOW <br>REQUEST_COULD_NOT_BE_CREATED_BECAUSE_CARD_STATE_IS_NOT_WORK <br>OIL_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_AMOUNT_IS_SAME_DOES_NOT_DIFFERENT_FROM_CURRENT_LIMIT <br>OIL_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_AMOUNT_GREATER_THAN_MAX_LIMIT <br>OIL_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_CARD_NUMBER_THERE_IS_AN_UNSENT_REQUEST_WITH_THIS_CARD_NUMBER <br>OIL_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_CARD_NUMBER_THERE_IS_AN_UNSENT_REQUEST_WITH_THIS_SERVICE_ID_WEB <br>OIL_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_THERE_IS_A_SENT_AND_UNCONFIRMED_REQUEST_WITH_THIS_CARD_NUMBER <br>OIL_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_THERE_IS_A_SENT_AND_UNCONFIRMED_REQUEST_WITH_THIS_SERVICE_ID_WEB <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>OIL_REQUEST_FORBIDDEN <br>CARD_NUMBER_FORBIDDEN <br>REQUEST_FORBIDDEN_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION_FOR_UNSENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN_FOR_USER_IS_CARD_HOLDER_OR_USER_IS_MOBILE_USER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND <br>PURSE_MODEL_NOT_FOUND <br>OIL_REQUEST_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/oil-requests/full":{"get":{"tags":["Обработчик запросов по заявке на ОИЛ"],"summary":"Получить страницу заявок на ОИЛ с полной информацией","description":"Доступ к заявке на ОИЛ дожен быть разблокирован, поле allowOilRequest = true <br>(поле allowOilRequest можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"oilRequestsFullUsingGET","produces":["*/*"],"parameters":[{"name":"beginDateFilter","in":"query","description":"Фильтр по дате начала выборки (Период с) <br>фильтруется по дате создания, поле dateOf","required":false,"type":"string","format":"date-time","x-example":"2022-01-01T00:00:00"},{"name":"cardNumberFilterList","in":"query","description":"Фильтр по номеру карты, поле cardNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех карт можно получить в запросе '/cards' поле cardNumber <br>(описание поля в Обработчике запросов по карте)","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"endDateFilter","in":"query","description":"Фильтр по дате конца выборки (Период с) <br>фильтруется по дате создания, поле dateOf","required":false,"type":"string","format":"date-time","x-example":"2022-01-31T23:59:59"},{"name":"page","in":"query","description":"Номер страницы в запросе (номер страницы ведется с нуля)","required":false,"type":"integer","format":"int32"},{"name":"rqStateIdFilterList","in":"query","description":"Фильтр по идентификатору состояния заявки, поле rqStateId <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех состояний заявки можно получить в запросе '/rq-states' поле rqStateId <br>(описание запроса в Обработчик запросов по состоянию заявки)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"sendOcFilter","in":"query","description":"Фильтр по подтверждению пользователем заявки <br>если sendOcFilter = false, то выведутся заявки, которые без подтреждения пользователем <br>если sendOcFilter = true, то выведутся заявки, которые подтреждены пользователем <br>подробное описание в поле canSendOcImm <br>(поле canSendOcImm, можно получить в запросе '/user-setting' <br>и описание в разделе Models > Пользовательские настройки)","required":false,"type":"boolean"},{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"size","in":"query","description":"Количество элементов на страницу в запросе","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Заявка на ОИЛ с полной информацией»","originalRef":"Страница«Заявка на ОИЛ с полной информацией»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>OIL_REQUEST_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>RQ_STATE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>CANCEL_CAUSE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Заявка на ОИЛ с полной информацией»","originalRef":"Страница«Заявка на ОИЛ с полной информацией»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>OIL_REQUEST_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>RQ_STATE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>CANCEL_CAUSE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/oil-requests/send":{"post":{"tags":["Обработчик запросов по заявке на ОИЛ"],"summary":"Отправить заявки на ОИЛ, которые не подтверждены пользователем (sendOc = false)","description":"Доступ к заявке на ОИЛ дожен быть разблокирован, поле allowOilRequest = true <br>и настройка работы создания и отображение заявки <br>не должно быть установлено Отправлять сразу после создания, поле canSendOcImm != 2(поля allowOilRequest и canSendOcImm можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки) <br>заявки на ОИЛ, которые можно отправить <br>(не подтверждены пользователем, поле sendOc = false) <br>можно получить в запросе '/oil-requests?sendOcFilter=false' <br>или в запросе '/oil-requests/full?sendOcFilter=false' ","operationId":"sendOilRequestsUsingPOST","consumes":["application/json"],"produces":["*/*"],"responses":{"200":{"description":"OK"},"201":{"description":"Created"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>OIL_REQUEST_FORBIDDEN <br>SEND_REQUESTS_FORBIDDEN_REQUESTS_COULD_NOT_BE_SENT_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK"},"201":{"description":"Created"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>OIL_REQUEST_FORBIDDEN <br>SEND_REQUESTS_FORBIDDEN_REQUESTS_COULD_NOT_BE_SENT_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/oil-requests/{requestId}":{"get":{"tags":["Обработчик запросов по заявке на ОИЛ"],"summary":"Получить заявку на ОИЛ","description":"Доступ к заявке на ОИЛ дожен быть разблокирован, поле allowOilRequest = true <br>(поле allowOilRequest можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"oilRequestUsingGET","produces":["*/*"],"parameters":[{"name":"requestId","in":"path","description":"Идентификатор заявки","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Заявка на ОИЛ","originalRef":"Заявка на ОИЛ"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>OIL_REQUEST_FORBIDDEN <br>REQUEST_FORBIDDEN_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION_FOR_UNSENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN_FOR_USER_IS_CARD_HOLDER_OR_USER_IS_MOBILE_USER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>OIL_REQUEST_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Заявка на ОИЛ","originalRef":"Заявка на ОИЛ"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>OIL_REQUEST_FORBIDDEN <br>REQUEST_FORBIDDEN_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION_FOR_UNSENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN_FOR_USER_IS_CARD_HOLDER_OR_USER_IS_MOBILE_USER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>OIL_REQUEST_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]},"delete":{"tags":["Обработчик запросов по заявке на ОИЛ"],"summary":"Удаление заявки на ОИЛ","description":"Доступ к заявке на ОИЛ дожен быть разблокирован, поле allowOilRequest = true <br>(поле allowOilRequest можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки) <br>заявки на ОИЛ, которые можно удалить <br>(не подтверждены пользователем, поле sendOc = false) <br>можно получить в запросе '/oil-requests?sendOcFilter=false' <br>или в запросе '/oil-requests/full?sendOcFilter=false' ","operationId":"deleteOilRequestUsingDELETE","produces":["*/*"],"parameters":[{"name":"requestId","in":"path","description":"Идентификатор заявки","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK"},"204":{"description":"No Content"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br>REQUEST_COULD_NOT_BE_DELETED_BECAUSE_REQUEST_SENT <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>OIL_REQUEST_FORBIDDEN <br>REQUEST_FORBIDDEN_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION_FOR_UNSENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN_FOR_USER_IS_CARD_HOLDER_OR_USER_IS_MOBILE_USER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>OIL_REQUEST_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK"},"204":{"description":"No Content"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br>REQUEST_COULD_NOT_BE_DELETED_BECAUSE_REQUEST_SENT <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>OIL_REQUEST_FORBIDDEN <br>REQUEST_FORBIDDEN_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION_FOR_UNSENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN_FOR_USER_IS_CARD_HOLDER_OR_USER_IS_MOBILE_USER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>OIL_REQUEST_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/oil-requests/{requestId}/full":{"get":{"tags":["Обработчик запросов по заявке на ОИЛ"],"summary":"Получить заявку на ОИЛ с полной информацией","description":"Доступ к заявке на ОИЛ дожен быть разблокирован, поле allowOilRequest = true <br>(поле allowOilRequest можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"oilRequestFullUsingGET","produces":["*/*"],"parameters":[{"name":"requestId","in":"path","description":"Идентификатор заявки","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Заявка на ОИЛ с полной информацией","originalRef":"Заявка на ОИЛ с полной информацией"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>OIL_REQUEST_FORBIDDEN <br>REQUEST_FORBIDDEN_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION_FOR_UNSENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN_FOR_USER_IS_CARD_HOLDER_OR_USER_IS_MOBILE_USER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>OIL_REQUEST_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>RQ_STATE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>CANCEL_CAUSE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Заявка на ОИЛ с полной информацией","originalRef":"Заявка на ОИЛ с полной информацией"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>OIL_REQUEST_FORBIDDEN <br>REQUEST_FORBIDDEN_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION_FOR_UNSENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN_FOR_USER_IS_CARD_HOLDER_OR_USER_IS_MOBILE_USER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>OIL_REQUEST_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>RQ_STATE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>CANCEL_CAUSE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/onl-card-types":{"get":{"tags":["Обработчик запросов по типу онлайн карты"],"summary":"Получить список типов онлайн карты","operationId":"onlCardTypesUsingGET","produces":["*/*"],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Тип онлайн карты","originalRef":"Тип онлайн карты"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"responsesObject":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Тип онлайн карты","originalRef":"Тип онлайн карты"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/onl-card-types/{onlCardTypeId}":{"get":{"tags":["Обработчик запросов по типу онлайн карты"],"summary":"Получить тип онлайн карты","operationId":"onlCardTypeUsingGET","produces":["*/*"],"parameters":[{"name":"onlCardTypeId","in":"path","description":"Идентификатор типа онлайн карты","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Тип онлайн карты","originalRef":"Тип онлайн карты"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>ONL_CARD_TYPE_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Тип онлайн карты","originalRef":"Тип онлайн карты"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>ONL_CARD_TYPE_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/onl-client-limit":{"get":{"tags":["Обработчик запросов по онлайн лимитам по клиенту"],"summary":"Получить онлайн лимиты по клиенту","description":"Доступ к онлайн лимитам по клиенту дожен быть разблокирован, поле allowOnlClientLimit = true <br>(поле allowOnlClientLimit можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"onlClientLimitUsingGET","produces":["*/*"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Онлайн лимиты по клиенту","originalRef":"Онлайн лимиты по клиенту"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>ONL_CLIENT_LIMIT_MODEL_NOT_FOUND - ошибка данных, повтороте запрос через некоторое время <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Онлайн лимиты по клиенту","originalRef":"Онлайн лимиты по клиенту"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>ONL_CLIENT_LIMIT_MODEL_NOT_FOUND - ошибка данных, повтороте запрос через некоторое время <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/onl-client-limit-services":{"get":{"tags":["Обработчик запросов по онлайн лимитам услуги по клиенту"],"summary":"Получить список онлайн лимитов услуг по клиенту","description":"Доступ к онлайн лимиту услуги по клиенту дожен быть разблокирован, <br>поле allowOnlClientLimitService = true <br>(поле allowOnlClientLimitService можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"onlClientLimitServicesUsingGET","produces":["*/*"],"parameters":[{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Онлайн лимиты по услуге по клиенту","originalRef":"Онлайн лимиты по услуге по клиенту"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Онлайн лимиты по услуге по клиенту","originalRef":"Онлайн лимиты по услуге по клиенту"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/onl-client-limit-services/full":{"get":{"tags":["Обработчик запросов по онлайн лимитам услуги по клиенту"],"summary":"Получить список онлайн лимитов услуг по клиенту с полной информацией","description":"Доступ к онлайн лимиту услуги по клиенту дожен быть разблокирован, <br>поле allowOnlClientLimitService = true <br>(поле allowOnlClientLimitService можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"onlClientLimitServicesFullUsingGET","produces":["*/*"],"parameters":[{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Онлайн лимиты по услуге по клиенту c полной информацией","originalRef":"Онлайн лимиты по услуге по клиенту c полной информацией"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Онлайн лимиты по услуге по клиенту c полной информацией","originalRef":"Онлайн лимиты по услуге по клиенту c полной информацией"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/onl-client-limit-services/{serviceIdWeb}":{"get":{"tags":["Обработчик запросов по онлайн лимитам услуги по клиенту"],"summary":"Получить онлайн лимиты услуги по клиенту","description":"Доступ к онлайн лимиту услуги по клиенту дожен быть разблокирован, <br>поле allowOnlClientLimitService = true <br>(поле allowOnlClientLimitService можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"onlClientLimitServiceUsingGET","produces":["*/*"],"parameters":[{"name":"serviceIdWeb","in":"path","description":"Идентификатор услуги","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Онлайн лимиты по услуге по клиенту","originalRef":"Онлайн лимиты по услуге по клиенту"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND <br>ONL_CLIENT_LIMIT_SERVICE_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Онлайн лимиты по услуге по клиенту","originalRef":"Онлайн лимиты по услуге по клиенту"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND <br>ONL_CLIENT_LIMIT_SERVICE_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/onl-client-limit-services/{serviceIdWeb}/full":{"get":{"tags":["Обработчик запросов по онлайн лимитам услуги по клиенту"],"summary":"Получить онлайн лимиты услуги по клиенту с полной информацией","description":"Доступ к онлайн лимиту услуги по клиенту дожен быть разблокирован, <br>поле allowOnlClientLimitService = true <br>(поле allowOnlClientLimitService можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"onlClientLimitServiceFullUsingGET","produces":["*/*"],"parameters":[{"name":"serviceIdWeb","in":"path","description":"Идентификатор услуги","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Онлайн лимиты по услуге по клиенту c полной информацией","originalRef":"Онлайн лимиты по услуге по клиенту c полной информацией"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND <br>ONL_CLIENT_LIMIT_SERVICE_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Онлайн лимиты по услуге по клиенту c полной информацией","originalRef":"Онлайн лимиты по услуге по клиенту c полной информацией"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND <br>ONL_CLIENT_LIMIT_SERVICE_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/onl-limit-card-requests":{"get":{"tags":["Обработчик запросов по заявке на изменение онлайн лимита для онлайн карты"],"summary":"Получить страницу заявок на изменение онлайн лимитов для онлайн карт","description":"Доступ к заявке на на изменение онлайн лимита для онлайн карты дожен быть разблокирован, <br>поле allowOnlLimitCardRequest = true <br>(поле allowOnlLimitCardRequest можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"onlLimitCardRequestsUsingGET","produces":["*/*"],"parameters":[{"name":"beginDateFilter","in":"query","description":"Фильтр по дате начала выборки (Период с) <br>фильтруется по дате создания, поле dateOf","required":false,"type":"string","format":"date-time","x-example":"2022-01-01T00:00:00"},{"name":"cardNumberFilterList","in":"query","description":"Фильтр по номеру карты, поле cardNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех карт можно получить в запросе '/cards' поле cardNumber <br>(описание поля в Обработчике запросов по карте)","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"endDateFilter","in":"query","description":"Фильтр по дате конца выборки (Период с) <br>фильтруется по дате создания, поле dateOf","required":false,"type":"string","format":"date-time","x-example":"2022-01-31T23:59:59"},{"name":"onlLimitTypeIdFilterList","in":"query","description":"Фильтр по идентификатору типа онлайн лимита для заявки, поле onlLimitTypeId <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех типов онлайн лимита можно получить в запросе '/onl-limit-types' поле onlLimitTypeId <br>(описание запроса в Обработчике запросов по типу онлайн лимита для заявки)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"page","in":"query","description":"Номер страницы в запросе (номер страницы ведется с нуля)","required":false,"type":"integer","format":"int32"},{"name":"rqStateIdFilterList","in":"query","description":"Фильтр по идентификатору состояния заявки, поле rqStateId <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех состояний заявки можно получить в запросе '/rq-states' поле rqStateId <br>(описание запроса в Обработчик запросов по состоянию заявки)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"sendOcFilter","in":"query","description":"Фильтр по подтверждению пользователем заявки <br>если sendOcFilter = false, то выведутся заявки, которые без подтреждения пользователем <br>если sendOcFilter = true, то выведутся заявки, которые подтреждены пользователем <br>подробное описание в поле canSendOcImm <br>(поле canSendOcImm, можно получить в запросе '/user-setting' <br>и описание в разделе Models > Пользовательские настройки)","required":false,"type":"boolean"},{"name":"size","in":"query","description":"Количество элементов на страницу в запросе","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Заявка на изменение онлайн лимита для онлайн карты»","originalRef":"Страница«Заявка на изменение онлайн лимита для онлайн карты»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>ONL_LIMIT_CARD_REQUEST_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Заявка на изменение онлайн лимита для онлайн карты»","originalRef":"Страница«Заявка на изменение онлайн лимита для онлайн карты»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>ONL_LIMIT_CARD_REQUEST_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]},"post":{"tags":["Обработчик запросов по заявке на изменение онлайн лимита для онлайн карты"],"summary":"Создать заявку на изменение онлайн лимита для онлайн карты","description":"Доступ к заявке на на изменение онлайн лимита для онлайн карты дожен быть разблокирован, <br>поле allowOnlLimitCardRequest = true <br>(поле allowOnlLimitCardRequest можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"createOnlLimitCardRequestUsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"form","description":"form","required":true,"schema":{"$ref":"#/definitions/Форма создания заявки на изменение онлайн лимита для онлайн карты","originalRef":"Форма создания заявки на изменение онлайн лимита для онлайн карты"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Заявка на изменение онлайн лимита для онлайн карты","originalRef":"Заявка на изменение онлайн лимита для онлайн карты"}},"201":{"description":"Created"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br>ONL_LIMIT_CARD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_ONL_LIMIT_TYPE_ID_IS_EMPTY <br>ONL_LIMIT_CARD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_CARD_NUMBER_IS_EMPTY <br>ONL_LIMIT_CARD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_DAILY_LIMIT_IS_EMPTY <br>ONL_LIMIT_CARD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_WEEKLY_LIMIT_IS_EMPTY <br>ONL_LIMIT_CARD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_MONTHLY_LIMIT_IS_EMPTY <br>ONL_LIMIT_CARD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_CARD_NUMBER_EXCEEDED_MAX_VALUE <br>ONL_LIMIT_CARD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_DAILY_LIMIT_IS_NEGATIVE <br>ONL_LIMIT_CARD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_WEEKLY_LIMIT_IS_NEGATIVE <br>ONL_LIMIT_CARD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_MONTHLY_LIMIT_IS_NEGATIVE <br>ONL_LIMIT_CARD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_DAILY_LIMIT_IS_NOT_INTEGER_VALUE <br>ONL_LIMIT_CARD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_WEEKLY_LIMIT_IS_NOT_INTEGER_VALUE <br>ONL_LIMIT_CARD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_MONTHLY_LIMIT_IS_NOT_INTEGER_VALUE <br>REQUEST_COULD_NOT_BE_CREATED_BECAUSE_CARD_STATE_IS_NOT_WORK <br>ONL_LIMIT_CARD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_ONL_CARD_TYPE_IS_A <br>ONL_LIMIT_CARD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_DAILY_LIMIT_IS_SAME_LIMITS_ARE_SAME <br>ONL_LIMIT_CARD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_WEEKLY_LIMIT_IS_SAME_LIMITS_ARE_SAME <br>ONL_LIMIT_CARD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_MONTHLY_LIMIT_IS_SAME_LIMITS_ARE_SAME <br>REQUEST_COULD_NOT_BE_CREATED_BECAUSE_CARD_HAS_NOT_PURSES <br>ONL_LIMIT_CARD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_SERVICE_ID_WEB_IS_EMPTY <br>ONL_LIMIT_CARD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_THERE_IS_AN_UNSENT_REQUEST_WITH_THIS_LIMIT_TYPE_ID <br>ONL_LIMIT_CARD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_THERE_IS_AN_UNSENT_REQUEST_WITH_THIS_CARD_NUMBER <br>ONL_LIMIT_CARD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_THERE_IS_AN_UNSENT_REQUEST_WITH_THIS_SERVICE_ID_WEB <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>ONL_LIMIT_CARD_REQUEST_FORBIDDEN <br>CARD_NUMBER_FORBIDDEN <br>REQUEST_FORBIDDEN_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION_FOR_UNSENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN_FOR_USER_IS_CARD_HOLDER_OR_USER_IS_MOBILE_USER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>ONL_LIMIT_TYPE_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>ONL_CARD_MODEL_NOT_FOUND <br>ONL_LIMIT_CARD_MODEL_NOT_FOUND - ошибка данных, повтороте запрос через некоторое время <br>SERVICE_MODEL_NOT_FOUND <br>ONL_LIMIT_CARD_SERVICE_MODEL_NOT_FOUND <br>ONL_LIMIT_CARD_REQUEST_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Заявка на изменение онлайн лимита для онлайн карты","originalRef":"Заявка на изменение онлайн лимита для онлайн карты"}},"201":{"description":"Created"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br>ONL_LIMIT_CARD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_ONL_LIMIT_TYPE_ID_IS_EMPTY <br>ONL_LIMIT_CARD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_CARD_NUMBER_IS_EMPTY <br>ONL_LIMIT_CARD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_DAILY_LIMIT_IS_EMPTY <br>ONL_LIMIT_CARD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_WEEKLY_LIMIT_IS_EMPTY <br>ONL_LIMIT_CARD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_MONTHLY_LIMIT_IS_EMPTY <br>ONL_LIMIT_CARD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_CARD_NUMBER_EXCEEDED_MAX_VALUE <br>ONL_LIMIT_CARD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_DAILY_LIMIT_IS_NEGATIVE <br>ONL_LIMIT_CARD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_WEEKLY_LIMIT_IS_NEGATIVE <br>ONL_LIMIT_CARD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_MONTHLY_LIMIT_IS_NEGATIVE <br>ONL_LIMIT_CARD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_DAILY_LIMIT_IS_NOT_INTEGER_VALUE <br>ONL_LIMIT_CARD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_WEEKLY_LIMIT_IS_NOT_INTEGER_VALUE <br>ONL_LIMIT_CARD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_MONTHLY_LIMIT_IS_NOT_INTEGER_VALUE <br>REQUEST_COULD_NOT_BE_CREATED_BECAUSE_CARD_STATE_IS_NOT_WORK <br>ONL_LIMIT_CARD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_ONL_CARD_TYPE_IS_A <br>ONL_LIMIT_CARD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_DAILY_LIMIT_IS_SAME_LIMITS_ARE_SAME <br>ONL_LIMIT_CARD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_WEEKLY_LIMIT_IS_SAME_LIMITS_ARE_SAME <br>ONL_LIMIT_CARD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_MONTHLY_LIMIT_IS_SAME_LIMITS_ARE_SAME <br>REQUEST_COULD_NOT_BE_CREATED_BECAUSE_CARD_HAS_NOT_PURSES <br>ONL_LIMIT_CARD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_SERVICE_ID_WEB_IS_EMPTY <br>ONL_LIMIT_CARD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_THERE_IS_AN_UNSENT_REQUEST_WITH_THIS_LIMIT_TYPE_ID <br>ONL_LIMIT_CARD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_THERE_IS_AN_UNSENT_REQUEST_WITH_THIS_CARD_NUMBER <br>ONL_LIMIT_CARD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_THERE_IS_AN_UNSENT_REQUEST_WITH_THIS_SERVICE_ID_WEB <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>ONL_LIMIT_CARD_REQUEST_FORBIDDEN <br>CARD_NUMBER_FORBIDDEN <br>REQUEST_FORBIDDEN_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION_FOR_UNSENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN_FOR_USER_IS_CARD_HOLDER_OR_USER_IS_MOBILE_USER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>ONL_LIMIT_TYPE_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>ONL_CARD_MODEL_NOT_FOUND <br>ONL_LIMIT_CARD_MODEL_NOT_FOUND - ошибка данных, повтороте запрос через некоторое время <br>SERVICE_MODEL_NOT_FOUND <br>ONL_LIMIT_CARD_SERVICE_MODEL_NOT_FOUND <br>ONL_LIMIT_CARD_REQUEST_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/onl-limit-card-requests/full":{"get":{"tags":["Обработчик запросов по заявке на изменение онлайн лимита для онлайн карты"],"summary":"Получить страницу заявок на изменение онлайн лимитов для онлайн карт с полной информацией","description":"Доступ к заявке на на изменение онлайн лимита для онлайн карты дожен быть разблокирован, <br>поле allowOnlLimitCardRequest = true <br>(поле allowOnlLimitCardRequest можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"onlLimitCardRequestsFullUsingGET","produces":["*/*"],"parameters":[{"name":"beginDateFilter","in":"query","description":"Фильтр по дате начала выборки (Период с) <br>фильтруется по дате создания, поле dateOf","required":false,"type":"string","format":"date-time","x-example":"2022-01-01T00:00:00"},{"name":"cardNumberFilterList","in":"query","description":"Фильтр по номеру карты, поле cardNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех карт можно получить в запросе '/cards' поле cardNumber <br>(описание поля в Обработчике запросов по карте)","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"endDateFilter","in":"query","description":"Фильтр по дате конца выборки (Период с) <br>фильтруется по дате создания, поле dateOf","required":false,"type":"string","format":"date-time","x-example":"2022-01-31T23:59:59"},{"name":"onlLimitTypeIdFilterList","in":"query","description":"Фильтр по идентификатору типа онлайн лимита для заявки, поле onlLimitTypeId <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех типов онлайн лимита можно получить в запросе '/onl-limit-types' поле onlLimitTypeId <br>(описание запроса в Обработчике запросов по типу онлайн лимита для заявки)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"page","in":"query","description":"Номер страницы в запросе (номер страницы ведется с нуля)","required":false,"type":"integer","format":"int32"},{"name":"rqStateIdFilterList","in":"query","description":"Фильтр по идентификатору состояния заявки, поле rqStateId <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех состояний заявки можно получить в запросе '/rq-states' поле rqStateId <br>(описание запроса в Обработчик запросов по состоянию заявки)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"sendOcFilter","in":"query","description":"Фильтр по подтверждению пользователем заявки <br>если sendOcFilter = false, то выведутся заявки, которые без подтреждения пользователем <br>если sendOcFilter = true, то выведутся заявки, которые подтреждены пользователем <br>подробное описание в поле canSendOcImm <br>(поле canSendOcImm, можно получить в запросе '/user-setting' <br>и описание в разделе Models > Пользовательские настройки)","required":false,"type":"boolean"},{"name":"size","in":"query","description":"Количество элементов на страницу в запросе","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Заявка на изменение онлайн лимита для онлайн карты с полной информацией»","originalRef":"Страница«Заявка на изменение онлайн лимита для онлайн карты с полной информацией»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>ONL_LIMIT_CARD_REQUEST_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_LIMIT_TYPE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>RQ_STATE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>CANCEL_CAUSE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Заявка на изменение онлайн лимита для онлайн карты с полной информацией»","originalRef":"Страница«Заявка на изменение онлайн лимита для онлайн карты с полной информацией»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>ONL_LIMIT_CARD_REQUEST_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_LIMIT_TYPE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>RQ_STATE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>CANCEL_CAUSE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/onl-limit-card-requests/send":{"post":{"tags":["Обработчик запросов по заявке на изменение онлайн лимита для онлайн карты"],"summary":"Отправить заявки на изменение онлайн лимитов для онлайн карт","description":"Доступ к заявке на изменение онлайн лимита для онлайн карты дожен быть разблокирован, <br>поле allowOnlLimitCardRequest = true <br>и настройка работы создания и отображение заявки <br>не должно быть установлено Отправлять сразу после создания, поле canSendOcImm != 2(поля allowOnlLimitCardRequest и canSendOcImm можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки) <br>заявки на изменение онлайн лимитов для онлайн карт, которые можно отправить <br>(не подтверждены пользователем, поле sendOc = false) <br>можно получить в запросе '/onl-limit-card-requests?sendOcFilter=false' <br>или в запросе '/onl-limit-card-requests/full?sendOcFilter=false' ","operationId":"sendOnlLimitCardRequestsUsingPOST","consumes":["application/json"],"produces":["*/*"],"responses":{"200":{"description":"OK"},"201":{"description":"Created"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>ONL_LIMIT_CARD_REQUEST_FORBIDDEN <br>SEND_REQUESTS_FORBIDDEN_REQUESTS_COULD_NOT_BE_SENT_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK"},"201":{"description":"Created"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>ONL_LIMIT_CARD_REQUEST_FORBIDDEN <br>SEND_REQUESTS_FORBIDDEN_REQUESTS_COULD_NOT_BE_SENT_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/onl-limit-card-requests/{requestId}":{"get":{"tags":["Обработчик запросов по заявке на изменение онлайн лимита для онлайн карты"],"summary":"Получить заявку на изменение онлайн лимита для онлайн карты","description":"Доступ к заявке на на изменение онлайн лимита для онлайн карты дожен быть разблокирован, <br>поле allowOnlLimitCardRequest = true <br>(поле allowOnlLimitCardRequest можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"onlLimitCardRequestUsingGET","produces":["*/*"],"parameters":[{"name":"requestId","in":"path","description":"Идентификатор заявки","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Заявка на изменение онлайн лимита для онлайн карты","originalRef":"Заявка на изменение онлайн лимита для онлайн карты"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>ONL_LIMIT_CARD_REQUEST_FORBIDDEN <br>REQUEST_FORBIDDEN_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION_FOR_UNSENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN_FOR_USER_IS_CARD_HOLDER_OR_USER_IS_MOBILE_USER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>ONL_LIMIT_CARD_REQUEST_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Заявка на изменение онлайн лимита для онлайн карты","originalRef":"Заявка на изменение онлайн лимита для онлайн карты"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>ONL_LIMIT_CARD_REQUEST_FORBIDDEN <br>REQUEST_FORBIDDEN_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION_FOR_UNSENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN_FOR_USER_IS_CARD_HOLDER_OR_USER_IS_MOBILE_USER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>ONL_LIMIT_CARD_REQUEST_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]},"delete":{"tags":["Обработчик запросов по заявке на изменение онлайн лимита для онлайн карты"],"summary":"Удалить заявку на изменение онлайн лимита для онлайн карты","description":"Доступ к заявке на на изменение онлайн лимита для онлайн карты дожен быть разблокирован, <br>поле allowOnlLimitCardRequest = true <br>(поле allowOnlLimitCardRequest можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки) <br>заявки на изменение онлайн лимитов для онлайн карт, которые можно удалить <br>(не подтверждены пользователем, поле sendOc = false) <br>можно получить в запросе '/onl-limit-card-requests?sendOcFilter=false' <br>или в запросе '/onl-limit-card-requests/full?sendOcFilter=false' ","operationId":"deleteOnlLimitCardRequestUsingDELETE","produces":["*/*"],"parameters":[{"name":"requestId","in":"path","description":"Идентификатор заявки","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK"},"204":{"description":"No Content"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br>REQUEST_COULD_NOT_BE_DELETED_BECAUSE_REQUEST_SENT <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>ONL_LIMIT_CARD_REQUEST_FORBIDDEN <br>REQUEST_FORBIDDEN_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION_FOR_UNSENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN_FOR_USER_IS_CARD_HOLDER_OR_USER_IS_MOBILE_USER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>ONL_LIMIT_CARD_REQUEST_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK"},"204":{"description":"No Content"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br>REQUEST_COULD_NOT_BE_DELETED_BECAUSE_REQUEST_SENT <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>ONL_LIMIT_CARD_REQUEST_FORBIDDEN <br>REQUEST_FORBIDDEN_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION_FOR_UNSENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN_FOR_USER_IS_CARD_HOLDER_OR_USER_IS_MOBILE_USER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>ONL_LIMIT_CARD_REQUEST_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/onl-limit-card-requests/{requestId}/full":{"get":{"tags":["Обработчик запросов по заявке на изменение онлайн лимита для онлайн карты"],"summary":"Получить заявку на изменение онлайн лимита для онлайн карты с полной информацией","description":"Доступ к заявке на на изменение онлайн лимита для онлайн карты дожен быть разблокирован, <br>поле allowOnlLimitCardRequest = true <br>(поле allowOnlLimitCardRequest можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"onlLimitCardRequestFullUsingGET","produces":["*/*"],"parameters":[{"name":"requestId","in":"path","description":"Идентификатор заявки","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Заявка на изменение онлайн лимита для онлайн карты с полной информацией","originalRef":"Заявка на изменение онлайн лимита для онлайн карты с полной информацией"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>ONL_LIMIT_CARD_REQUEST_FORBIDDEN <br>REQUEST_FORBIDDEN_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION_FOR_UNSENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN_FOR_USER_IS_CARD_HOLDER_OR_USER_IS_MOBILE_USER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>ONL_LIMIT_CARD_REQUEST_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_LIMIT_TYPE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>RQ_STATE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>CANCEL_CAUSE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Заявка на изменение онлайн лимита для онлайн карты с полной информацией","originalRef":"Заявка на изменение онлайн лимита для онлайн карты с полной информацией"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>ACCOUNT_FORBIDDEN <br>ONL_LIMIT_CARD_REQUEST_FORBIDDEN <br>REQUEST_FORBIDDEN_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION_FOR_UNSENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN_FOR_USER_IS_CARD_HOLDER_OR_USER_IS_MOBILE_USER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>ONL_LIMIT_CARD_REQUEST_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>ONL_LIMIT_TYPE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>RQ_STATE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>CANCEL_CAUSE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/onl-limit-kinds":{"get":{"tags":["Обработчик запросов по виду онлайн лимита для онлайн карты"],"summary":"Получить список видов онлайн лимита для онлайн карты","operationId":"onlLimitKindsUsingGET","produces":["*/*"],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Вид онлайн лимита для онлайн карты","originalRef":"Вид онлайн лимита для онлайн карты"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"responsesObject":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Вид онлайн лимита для онлайн карты","originalRef":"Вид онлайн лимита для онлайн карты"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/onl-limit-kinds/{onlLimitKindId}":{"get":{"tags":["Обработчик запросов по виду онлайн лимита для онлайн карты"],"summary":"Получить вид онлайн лимита для онлайн карты","operationId":"onlLimitKindUsingGET","produces":["*/*"],"parameters":[{"name":"onlLimitKindId","in":"path","description":"Идентификатор вида онлайн лимита для онлайн карты","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Вид онлайн лимита для онлайн карты","originalRef":"Вид онлайн лимита для онлайн карты"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>ONL_LIMIT_KIND_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Вид онлайн лимита для онлайн карты","originalRef":"Вид онлайн лимита для онлайн карты"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>ONL_LIMIT_KIND_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/onl-limit-types":{"get":{"tags":["Обработчик запросов по типу онлайн лимита для заявки"],"summary":"Получить список типов онлайн лимитов для заявки","operationId":"onlLimitTypesUsingGET","produces":["*/*"],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Тип онлайн лимита для заявки","originalRef":"Тип онлайн лимита для заявки"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"responsesObject":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Тип онлайн лимита для заявки","originalRef":"Тип онлайн лимита для заявки"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/onl-limit-types/{onlLimitTypeId}":{"get":{"tags":["Обработчик запросов по типу онлайн лимита для заявки"],"summary":"Получить тип онлайн лимита для заявки","operationId":"onlLimitTypeUsingGET","produces":["*/*"],"parameters":[{"name":"onlLimitTypeId","in":"path","description":"Идентификатор типа онлайн лимита для заявки","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Тип онлайн лимита для заявки","originalRef":"Тип онлайн лимита для заявки"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>ONL_LIMIT_TYPE_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Тип онлайн лимита для заявки","originalRef":"Тип онлайн лимита для заявки"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>ONL_LIMIT_TYPE_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/poses":{"get":{"tags":["Обработчик запросов по точке обслуживания"],"summary":"Получить страницу точек обслуживания без терминалов","operationId":"posesUsingGET","produces":["*/*"],"parameters":[{"name":"page","in":"query","description":"Номер страницы в запросе (номер страницы ведется с нуля)","required":false,"type":"integer","format":"int32"},{"name":"posAddressFilter","in":"query","description":"Фильтр по адресу точки обслуживания, поле posAddress <br>фильтр работает на наличие текста в адресе точки обслуживания, <br>в базе данных выберается точки обслуживания, в которых текст содержится в адресе точки обслуживания <br>список всех точек обслуживания можно получить в запросе '/poses' поле posAddress <br>(описание запросов в Обработчике запросов по точке обслуживания)","required":false,"type":"string"},{"name":"posAllFieldsFilter","in":"query","description":"Фильтр по всем полям точки обслуживания <br>а именно номеру эмитента точки обслуживания, номера филиала точки обслуживания, <br>номеру точки обслуживания разделенной запятой (,), <br> а также имени точки обслуживания, адресу точки обслуживания <br>(posNumber, posEmitentNumber, posFilialNumber, posName, posAddress). <br>Пример: 0001, 01, 00001 name address. <br>фильтр работает на наличие текста во всех полях точки обслуживания перечисленых выше, <br>в базе данных выберается точки обслуживания, в которых текст содержится в одном из всех полей <br>список всех точек обслуживания можно получить в запросе '/poses' поля <br>posNumber, posEmitentNumber, posFilialNumber, posName, posAddress","required":false,"type":"string"},{"name":"posEmitentNumberFilterList","in":"query","description":"Фильтр по номеру эмитента точки обслуживания, поле posEmitentNumber <br>список всех точек обслуживания можно получить в запросе '/poses' поле posEmitentNumber <br>или в запросе '/poses/without-address' поле posEmitentNumber <br>(описание запросов в Обработчике запросов по точке обслуживания)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"posFilialNumberFilterList","in":"query","description":"Фильтр по номеру филиала точки обслуживания, поле posFilialNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех точек обслуживания можно получить в запросе '/poses' поле posFilialNumber <br>или в запросе '/poses/without-address' поле posFilialNumber <br>(описание запросов в Обработчике запросов по точке обслуживания)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"posHasPricesFilter","in":"query","description":"Фильтр по наличию цен у точки обслуживания, поле posHasPrices <br>если posHasPricesFilter = false, то выведутся точки обслуживания, которые не имеют цен <br>если posHasPricesFilter = true, то выведутся точки обслуживания, которые имеют цены","required":false,"type":"boolean"},{"name":"posIsOwnFilter","in":"query","description":"Фильтр по признаку своей точки обслуживания, поле posIsOwn <br>если posIsOwnFilter = false, то выведутся не свои точки обслуживания <br>если posIsOwnFilter = true, то выведутся свои точки обслуживания","required":false,"type":"boolean"},{"name":"posNameFilter","in":"query","description":"Фильтр по имени точки обслуживания, поле posName <br>фильтр работает на наличие текста в имени точки обслуживания, <br>в базе данных выберается точки обслуживания, в которых текст содержится в имени точки обслуживания <br>список всех точек обслуживания можно получить в запросе '/poses' поле posName <br>или в запросе '/poses/without-address' поле posName <br>(описание запросов в Обработчике запросов по точке обслуживания)","required":false,"type":"string"},{"name":"posNumberFilterList","in":"query","description":"Фильтр по номеру точки обслуживания, поле posNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех точек обслуживания можно получить в запросе '/poses' поле posNumber <br>или в запросе '/poses/without-address' поле posNumber <br>(описание запросов в Обработчике запросов по точке обслуживания)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"posNumWebFilterList","in":"query","description":"Фильтр по идентификатору точки обслуживания, поле posNumWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех точек обслуживания можно получить в запросе '/poses' поле posNumWeb <br>или в запросе '/poses/without-address' поле posNumWeb <br>(описание запросов в Обработчике запросов по точке обслуживания)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"posTrmNumberFilterList","in":"query","description":"Фильтр по номеру терминала точки обслуживания, поле trmNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех терминалов можно получить <br>в запросе '/poses/{posNumWeb}/terminals' поле posFilialNumber <br>(описание запроса в Обработчике запросов по терминалу точки обслуживания)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"size","in":"query","description":"Количество элементов на страницу в запросе","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Точка обслуживания без терминалов»","originalRef":"Страница«Точка обслуживания без терминалов»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Точка обслуживания без терминалов»","originalRef":"Страница«Точка обслуживания без терминалов»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/poses/with-terminals":{"get":{"tags":["Обработчик запросов по точке обслуживания"],"summary":"Получить страницу точек обслуживания с терминалами","operationId":"posesWithTerminalsUsingGET","produces":["*/*"],"parameters":[{"name":"page","in":"query","description":"Номер страницы в запросе (номер страницы ведется с нуля)","required":false,"type":"integer","format":"int32"},{"name":"posAddressFilter","in":"query","description":"Фильтр по адресу точки обслуживания, поле posAddress <br>фильтр работает на наличие текста в адресе точки обслуживания, <br>в базе данных выберается точки обслуживания, в которых текст содержится в адресе точки обслуживания <br>список всех точек обслуживания можно получить в запросе '/poses' поле posAddress <br>(описание запросов в Обработчике запросов по точке обслуживания)","required":false,"type":"string"},{"name":"posAllFieldsFilter","in":"query","description":"Фильтр по всем полям точки обслуживания <br>а именно номеру эмитента точки обслуживания, номера филиала точки обслуживания, <br>номеру точки обслуживания разделенной запятой (,), <br> а также имени точки обслуживания, адресу точки обслуживания <br>(posNumber, posEmitentNumber, posFilialNumber, posName, posAddress). <br>Пример: 0001, 01, 00001 name address. <br>фильтр работает на наличие текста во всех полях точки обслуживания перечисленых выше, <br>в базе данных выберается точки обслуживания, в которых текст содержится в одном из всех полей <br>список всех точек обслуживания можно получить в запросе '/poses' поля <br>posNumber, posEmitentNumber, posFilialNumber, posName, posAddress","required":false,"type":"string"},{"name":"posEmitentNumberFilterList","in":"query","description":"Фильтр по номеру эмитента точки обслуживания, поле posEmitentNumber <br>список всех точек обслуживания можно получить в запросе '/poses' поле posEmitentNumber <br>или в запросе '/poses/without-address' поле posEmitentNumber <br>(описание запросов в Обработчике запросов по точке обслуживания)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"posFilialNumberFilterList","in":"query","description":"Фильтр по номеру филиала точки обслуживания, поле posFilialNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех точек обслуживания можно получить в запросе '/poses' поле posFilialNumber <br>или в запросе '/poses/without-address' поле posFilialNumber <br>(описание запросов в Обработчике запросов по точке обслуживания)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"posHasPricesFilter","in":"query","description":"Фильтр по наличию цен у точки обслуживания, поле posHasPrices <br>если posHasPricesFilter = false, то выведутся точки обслуживания, которые не имеют цен <br>если posHasPricesFilter = true, то выведутся точки обслуживания, которые имеют цены","required":false,"type":"boolean"},{"name":"posIsOwnFilter","in":"query","description":"Фильтр по признаку своей точки обслуживания, поле posIsOwn <br>если posIsOwnFilter = false, то выведутся не свои точки обслуживания <br>если posIsOwnFilter = true, то выведутся свои точки обслуживания","required":false,"type":"boolean"},{"name":"posNameFilter","in":"query","description":"Фильтр по имени точки обслуживания, поле posName <br>фильтр работает на наличие текста в имени точки обслуживания, <br>в базе данных выберается точки обслуживания, в которых текст содержится в имени точки обслуживания <br>список всех точек обслуживания можно получить в запросе '/poses' поле posName <br>или в запросе '/poses/without-address' поле posName <br>(описание запросов в Обработчике запросов по точке обслуживания)","required":false,"type":"string"},{"name":"posNumberFilterList","in":"query","description":"Фильтр по номеру точки обслуживания, поле posNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех точек обслуживания можно получить в запросе '/poses' поле posNumber <br>или в запросе '/poses/without-address' поле posNumber <br>(описание запросов в Обработчике запросов по точке обслуживания)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"posNumWebFilterList","in":"query","description":"Фильтр по идентификатору точки обслуживания, поле posNumWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех точек обслуживания можно получить в запросе '/poses' поле posNumWeb <br>или в запросе '/poses/without-address' поле posNumWeb <br>(описание запросов в Обработчике запросов по точке обслуживания)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"posTrmNumberFilterList","in":"query","description":"Фильтр по номеру терминала точки обслуживания, поле trmNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех терминалов можно получить <br>в запросе '/poses/{posNumWeb}/terminals' поле posFilialNumber <br>(описание запроса в Обработчике запросов по терминалу точки обслуживания)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"size","in":"query","description":"Количество элементов на страницу в запросе","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Точка обслуживания»","originalRef":"Страница«Точка обслуживания»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>POS_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Точка обслуживания»","originalRef":"Страница«Точка обслуживания»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>POS_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/poses/with-terminals-and-prices":{"get":{"tags":["Обработчик запросов по точке обслуживания"],"summary":"Получить страницу точек обслуживания с терминалами и ценами","operationId":"posesWithTerminalsWithPricesUsingGET","produces":["*/*"],"parameters":[{"name":"page","in":"query","description":"Номер страницы в запросе (номер страницы ведется с нуля)","required":false,"type":"integer","format":"int32"},{"name":"posAddressFilter","in":"query","description":"Фильтр по адресу точки обслуживания, поле posAddress <br>фильтр работает на наличие текста в адресе точки обслуживания, <br>в базе данных выберается точки обслуживания, в которых текст содержится в адресе точки обслуживания <br>список всех точек обслуживания можно получить в запросе '/poses' поле posAddress <br>(описание запросов в Обработчике запросов по точке обслуживания)","required":false,"type":"string"},{"name":"posAllFieldsFilter","in":"query","description":"Фильтр по всем полям точки обслуживания <br>а именно номеру эмитента точки обслуживания, номера филиала точки обслуживания, <br>номеру точки обслуживания разделенной запятой (,), <br> а также имени точки обслуживания, адресу точки обслуживания <br>(posNumber, posEmitentNumber, posFilialNumber, posName, posAddress). <br>Пример: 0001, 01, 00001 name address. <br>фильтр работает на наличие текста во всех полях точки обслуживания перечисленых выше, <br>в базе данных выберается точки обслуживания, в которых текст содержится в одном из всех полей <br>список всех точек обслуживания можно получить в запросе '/poses' поля <br>posNumber, posEmitentNumber, posFilialNumber, posName, posAddress","required":false,"type":"string"},{"name":"posEmitentNumberFilterList","in":"query","description":"Фильтр по номеру эмитента точки обслуживания, поле posEmitentNumber <br>список всех точек обслуживания можно получить в запросе '/poses' поле posEmitentNumber <br>или в запросе '/poses/without-address' поле posEmitentNumber <br>(описание запросов в Обработчике запросов по точке обслуживания)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"posFilialNumberFilterList","in":"query","description":"Фильтр по номеру филиала точки обслуживания, поле posFilialNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех точек обслуживания можно получить в запросе '/poses' поле posFilialNumber <br>или в запросе '/poses/without-address' поле posFilialNumber <br>(описание запросов в Обработчике запросов по точке обслуживания)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"posHasPricesFilter","in":"query","description":"Фильтр по наличию цен у точки обслуживания, поле posHasPrices <br>если posHasPricesFilter = false, то выведутся точки обслуживания, которые не имеют цен <br>если posHasPricesFilter = true, то выведутся точки обслуживания, которые имеют цены","required":false,"type":"boolean"},{"name":"posIsOwnFilter","in":"query","description":"Фильтр по признаку своей точки обслуживания, поле posIsOwn <br>если posIsOwnFilter = false, то выведутся не свои точки обслуживания <br>если posIsOwnFilter = true, то выведутся свои точки обслуживания","required":false,"type":"boolean"},{"name":"posNameFilter","in":"query","description":"Фильтр по имени точки обслуживания, поле posName <br>фильтр работает на наличие текста в имени точки обслуживания, <br>в базе данных выберается точки обслуживания, в которых текст содержится в имени точки обслуживания <br>список всех точек обслуживания можно получить в запросе '/poses' поле posName <br>или в запросе '/poses/without-address' поле posName <br>(описание запросов в Обработчике запросов по точке обслуживания)","required":false,"type":"string"},{"name":"posNumberFilterList","in":"query","description":"Фильтр по номеру точки обслуживания, поле posNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех точек обслуживания можно получить в запросе '/poses' поле posNumber <br>или в запросе '/poses/without-address' поле posNumber <br>(описание запросов в Обработчике запросов по точке обслуживания)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"posNumWebFilterList","in":"query","description":"Фильтр по идентификатору точки обслуживания, поле posNumWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех точек обслуживания можно получить в запросе '/poses' поле posNumWeb <br>или в запросе '/poses/without-address' поле posNumWeb <br>(описание запросов в Обработчике запросов по точке обслуживания)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"posTrmNumberFilterList","in":"query","description":"Фильтр по номеру терминала точки обслуживания, поле trmNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех терминалов можно получить <br>в запросе '/poses/{posNumWeb}/terminals' поле posFilialNumber <br>(описание запроса в Обработчике запросов по терминалу точки обслуживания)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"size","in":"query","description":"Количество элементов на страницу в запросе","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Точка обслуживания»","originalRef":"Страница«Точка обслуживания»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>POS_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>POS_TRM_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Точка обслуживания»","originalRef":"Страница«Точка обслуживания»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>POS_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>POS_TRM_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/poses/with-terminals-and-prices/full":{"get":{"tags":["Обработчик запросов по точке обслуживания"],"summary":"Получить страницу точек обслуживания с полной информацией и терминалами и ценами","operationId":"posesWithTerminalsWithPricesFullUsingGET","produces":["*/*"],"parameters":[{"name":"page","in":"query","description":"Номер страницы в запросе (номер страницы ведется с нуля)","required":false,"type":"integer","format":"int32"},{"name":"posAddressFilter","in":"query","description":"Фильтр по адресу точки обслуживания, поле posAddress <br>фильтр работает на наличие текста в адресе точки обслуживания, <br>в базе данных выберается точки обслуживания, в которых текст содержится в адресе точки обслуживания <br>список всех точек обслуживания можно получить в запросе '/poses' поле posAddress <br>(описание запросов в Обработчике запросов по точке обслуживания)","required":false,"type":"string"},{"name":"posAllFieldsFilter","in":"query","description":"Фильтр по всем полям точки обслуживания <br>а именно номеру эмитента точки обслуживания, номера филиала точки обслуживания, <br>номеру точки обслуживания разделенной запятой (,), <br> а также имени точки обслуживания, адресу точки обслуживания <br>(posNumber, posEmitentNumber, posFilialNumber, posName, posAddress). <br>Пример: 0001, 01, 00001 name address. <br>фильтр работает на наличие текста во всех полях точки обслуживания перечисленых выше, <br>в базе данных выберается точки обслуживания, в которых текст содержится в одном из всех полей <br>список всех точек обслуживания можно получить в запросе '/poses' поля <br>posNumber, posEmitentNumber, posFilialNumber, posName, posAddress","required":false,"type":"string"},{"name":"posEmitentNumberFilterList","in":"query","description":"Фильтр по номеру эмитента точки обслуживания, поле posEmitentNumber <br>список всех точек обслуживания можно получить в запросе '/poses' поле posEmitentNumber <br>или в запросе '/poses/without-address' поле posEmitentNumber <br>(описание запросов в Обработчике запросов по точке обслуживания)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"posFilialNumberFilterList","in":"query","description":"Фильтр по номеру филиала точки обслуживания, поле posFilialNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех точек обслуживания можно получить в запросе '/poses' поле posFilialNumber <br>или в запросе '/poses/without-address' поле posFilialNumber <br>(описание запросов в Обработчике запросов по точке обслуживания)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"posHasPricesFilter","in":"query","description":"Фильтр по наличию цен у точки обслуживания, поле posHasPrices <br>если posHasPricesFilter = false, то выведутся точки обслуживания, которые не имеют цен <br>если posHasPricesFilter = true, то выведутся точки обслуживания, которые имеют цены","required":false,"type":"boolean"},{"name":"posIsOwnFilter","in":"query","description":"Фильтр по признаку своей точки обслуживания, поле posIsOwn <br>если posIsOwnFilter = false, то выведутся не свои точки обслуживания <br>если posIsOwnFilter = true, то выведутся свои точки обслуживания","required":false,"type":"boolean"},{"name":"posNameFilter","in":"query","description":"Фильтр по имени точки обслуживания, поле posName <br>фильтр работает на наличие текста в имени точки обслуживания, <br>в базе данных выберается точки обслуживания, в которых текст содержится в имени точки обслуживания <br>список всех точек обслуживания можно получить в запросе '/poses' поле posName <br>или в запросе '/poses/without-address' поле posName <br>(описание запросов в Обработчике запросов по точке обслуживания)","required":false,"type":"string"},{"name":"posNumberFilterList","in":"query","description":"Фильтр по номеру точки обслуживания, поле posNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех точек обслуживания можно получить в запросе '/poses' поле posNumber <br>или в запросе '/poses/without-address' поле posNumber <br>(описание запросов в Обработчике запросов по точке обслуживания)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"posNumWebFilterList","in":"query","description":"Фильтр по идентификатору точки обслуживания, поле posNumWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех точек обслуживания можно получить в запросе '/poses' поле posNumWeb <br>или в запросе '/poses/without-address' поле posNumWeb <br>(описание запросов в Обработчике запросов по точке обслуживания)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"posTrmNumberFilterList","in":"query","description":"Фильтр по номеру терминала точки обслуживания, поле trmNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех терминалов можно получить <br>в запросе '/poses/{posNumWeb}/terminals' поле posFilialNumber <br>(описание запроса в Обработчике запросов по терминалу точки обслуживания)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"size","in":"query","description":"Количество элементов на страницу в запросе","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Точка обслуживания с полной информацией»","originalRef":"Страница«Точка обслуживания с полной информацией»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>POS_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>POS_TRM_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Точка обслуживания с полной информацией»","originalRef":"Страница«Точка обслуживания с полной информацией»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>POS_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>POS_TRM_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/poses/without-address":{"get":{"tags":["Обработчик запросов по точке обслуживания"],"summary":"Получить страницу точек обслуживания без адреса","operationId":"posesWithoutAddressUsingGET","produces":["*/*"],"parameters":[{"name":"page","in":"query","description":"Номер страницы в запросе (номер страницы ведется с нуля)","required":false,"type":"integer","format":"int32"},{"name":"posAddressFilter","in":"query","description":"Фильтр по адресу точки обслуживания, поле posAddress <br>фильтр работает на наличие текста в адресе точки обслуживания, <br>в базе данных выберается точки обслуживания, в которых текст содержится в адресе точки обслуживания <br>список всех точек обслуживания можно получить в запросе '/poses' поле posAddress <br>(описание запросов в Обработчике запросов по точке обслуживания)","required":false,"type":"string"},{"name":"posAllFieldsFilter","in":"query","description":"Фильтр по всем полям точки обслуживания <br>а именно номеру эмитента точки обслуживания, номера филиала точки обслуживания, <br>номеру точки обслуживания разделенной запятой (,), <br> а также имени точки обслуживания, адресу точки обслуживания <br>(posNumber, posEmitentNumber, posFilialNumber, posName, posAddress). <br>Пример: 0001, 01, 00001 name address. <br>фильтр работает на наличие текста во всех полях точки обслуживания перечисленых выше, <br>в базе данных выберается точки обслуживания, в которых текст содержится в одном из всех полей <br>список всех точек обслуживания можно получить в запросе '/poses' поля <br>posNumber, posEmitentNumber, posFilialNumber, posName, posAddress","required":false,"type":"string"},{"name":"posEmitentNumberFilterList","in":"query","description":"Фильтр по номеру эмитента точки обслуживания, поле posEmitentNumber <br>список всех точек обслуживания можно получить в запросе '/poses' поле posEmitentNumber <br>или в запросе '/poses/without-address' поле posEmitentNumber <br>(описание запросов в Обработчике запросов по точке обслуживания)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"posFilialNumberFilterList","in":"query","description":"Фильтр по номеру филиала точки обслуживания, поле posFilialNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех точек обслуживания можно получить в запросе '/poses' поле posFilialNumber <br>или в запросе '/poses/without-address' поле posFilialNumber <br>(описание запросов в Обработчике запросов по точке обслуживания)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"posHasPricesFilter","in":"query","description":"Фильтр по наличию цен у точки обслуживания, поле posHasPrices <br>если posHasPricesFilter = false, то выведутся точки обслуживания, которые не имеют цен <br>если posHasPricesFilter = true, то выведутся точки обслуживания, которые имеют цены","required":false,"type":"boolean"},{"name":"posIsOwnFilter","in":"query","description":"Фильтр по признаку своей точки обслуживания, поле posIsOwn <br>если posIsOwnFilter = false, то выведутся не свои точки обслуживания <br>если posIsOwnFilter = true, то выведутся свои точки обслуживания","required":false,"type":"boolean"},{"name":"posNameFilter","in":"query","description":"Фильтр по имени точки обслуживания, поле posName <br>фильтр работает на наличие текста в имени точки обслуживания, <br>в базе данных выберается точки обслуживания, в которых текст содержится в имени точки обслуживания <br>список всех точек обслуживания можно получить в запросе '/poses' поле posName <br>или в запросе '/poses/without-address' поле posName <br>(описание запросов в Обработчике запросов по точке обслуживания)","required":false,"type":"string"},{"name":"posNumberFilterList","in":"query","description":"Фильтр по номеру точки обслуживания, поле posNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех точек обслуживания можно получить в запросе '/poses' поле posNumber <br>или в запросе '/poses/without-address' поле posNumber <br>(описание запросов в Обработчике запросов по точке обслуживания)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"posNumWebFilterList","in":"query","description":"Фильтр по идентификатору точки обслуживания, поле posNumWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех точек обслуживания можно получить в запросе '/poses' поле posNumWeb <br>или в запросе '/poses/without-address' поле posNumWeb <br>(описание запросов в Обработчике запросов по точке обслуживания)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"posTrmNumberFilterList","in":"query","description":"Фильтр по номеру терминала точки обслуживания, поле trmNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех терминалов можно получить <br>в запросе '/poses/{posNumWeb}/terminals' поле posFilialNumber <br>(описание запроса в Обработчике запросов по терминалу точки обслуживания)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"size","in":"query","description":"Количество элементов на страницу в запросе","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Точка обслуживания без адреса»","originalRef":"Страница«Точка обслуживания без адреса»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Точка обслуживания без адреса»","originalRef":"Страница«Точка обслуживания без адреса»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/poses/{posNumWeb}":{"get":{"tags":["Обработчик запросов по точке обслуживания"],"summary":"Получить точку обслуживания без терминалов","operationId":"posUsingGET","produces":["*/*"],"parameters":[{"name":"posNumWeb","in":"path","description":"Идентификатор точки обслуживания","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Точка обслуживания без терминалов","originalRef":"Точка обслуживания без терминалов"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>POS_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Точка обслуживания без терминалов","originalRef":"Точка обслуживания без терминалов"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>POS_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/poses/{posNumWeb}/terminals":{"get":{"tags":["Обработчик запросов по терминалу точки обслуживания"],"summary":"Получить список терминалов точки обслуживания без цен","operationId":"terminalsUsingGET","produces":["*/*"],"parameters":[{"name":"posNumWeb","in":"path","description":"Идентификатор точки обслуживания","required":true,"type":"integer","format":"int32"},{"name":"posTrmNumberFilterList","in":"query","description":"Фильтр по номеру терминала точки обслуживания, поле trmNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех терминалов можно получить <br>в запросе '/poses/{posNumWeb}/terminals' поле posFilialNumber <br>(описание запроса в Обработчике запросов по терминалу точки обслуживания)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Терминал точки обслуживания без цен","originalRef":"Терминал точки обслуживания без цен"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>POS_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Терминал точки обслуживания без цен","originalRef":"Терминал точки обслуживания без цен"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>POS_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/poses/{posNumWeb}/terminals/with-prices":{"get":{"tags":["Обработчик запросов по терминалу точки обслуживания"],"summary":"Получить список терминалов точки обслуживания с ценами","operationId":"terminalsWithPricesUsingGET","produces":["*/*"],"parameters":[{"name":"posNumWeb","in":"path","description":"Идентификатор точки обслуживания","required":true,"type":"integer","format":"int32"},{"name":"posTrmNumberFilterList","in":"query","description":"Фильтр по номеру терминала точки обслуживания, поле trmNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех терминалов можно получить <br>в запросе '/poses/{posNumWeb}/terminals' поле posFilialNumber <br>(описание запроса в Обработчике запросов по терминалу точки обслуживания)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Терминал точки обслуживания","originalRef":"Терминал точки обслуживания"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>POS_MODEL_NOT_FOUND <br>POS_TRM_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Терминал точки обслуживания","originalRef":"Терминал точки обслуживания"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>POS_MODEL_NOT_FOUND <br>POS_TRM_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/poses/{posNumWeb}/terminals/with-prices/full":{"get":{"tags":["Обработчик запросов по терминалу точки обслуживания"],"summary":"Получить список терминалов точки обслуживания с полной информацией и ценами","operationId":"terminalsWithPricesFullUsingGET","produces":["*/*"],"parameters":[{"name":"posNumWeb","in":"path","description":"Идентификатор точки обслуживания","required":true,"type":"integer","format":"int32"},{"name":"posTrmNumberFilterList","in":"query","description":"Фильтр по номеру терминала точки обслуживания, поле trmNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех терминалов можно получить <br>в запросе '/poses/{posNumWeb}/terminals' поле posFilialNumber <br>(описание запроса в Обработчике запросов по терминалу точки обслуживания)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Терминал точки обслуживания с полной информацией","originalRef":"Терминал точки обслуживания с полной информацией"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>POS_MODEL_NOT_FOUND <br>POS_TRM_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Терминал точки обслуживания с полной информацией","originalRef":"Терминал точки обслуживания с полной информацией"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>POS_MODEL_NOT_FOUND <br>POS_TRM_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/poses/{posNumWeb}/terminals/{trmNumber}":{"get":{"tags":["Обработчик запросов по терминалу точки обслуживания"],"summary":"Получить терминал точки обслуживания без цен","operationId":"terminalUsingGET","produces":["*/*"],"parameters":[{"name":"posNumWeb","in":"path","description":"Идентификатор точки обслуживания","required":true,"type":"integer","format":"int32"},{"name":"trmNumber","in":"path","description":"Номер терминала точки обслуживания","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Терминал точки обслуживания без цен","originalRef":"Терминал точки обслуживания без цен"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>POS_MODEL_NOT_FOUND <br>POS_TRM_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Терминал точки обслуживания без цен","originalRef":"Терминал точки обслуживания без цен"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>POS_MODEL_NOT_FOUND <br>POS_TRM_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/poses/{posNumWeb}/terminals/{trmNumber}/prices":{"get":{"tags":["Обработчик запросов по цене на терминале точки облуживания"],"summary":"Получить список цен на терминале точки обслуживания","operationId":"terminalPricesUsingGET","produces":["*/*"],"parameters":[{"name":"posNumWeb","in":"path","description":"Идентификатор точки обслуживания","required":true,"type":"integer","format":"int32"},{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"trmNumber","in":"path","description":"Номер терминала точки обслуживания","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Цена на терминале точки облуживания","originalRef":"Цена на терминале точки облуживания"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>POS_MODEL_NOT_FOUND <br>POS_TRM_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Цена на терминале точки облуживания","originalRef":"Цена на терминале точки облуживания"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>POS_MODEL_NOT_FOUND <br>POS_TRM_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/poses/{posNumWeb}/terminals/{trmNumber}/prices/full":{"get":{"tags":["Обработчик запросов по цене на терминале точки облуживания"],"summary":"Получить список цен на терминале точки обслуживания с полной информацией","operationId":"terminalPricesFullUsingGET","produces":["*/*"],"parameters":[{"name":"posNumWeb","in":"path","description":"Идентификатор точки обслуживания","required":true,"type":"integer","format":"int32"},{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"trmNumber","in":"path","description":"Номер терминала точки обслуживания","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Цена на терминале точки облуживания с полной информацией","originalRef":"Цена на терминале точки облуживания с полной информацией"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>POS_MODEL_NOT_FOUND <br>POS_TRM_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Цена на терминале точки облуживания с полной информацией","originalRef":"Цена на терминале точки облуживания с полной информацией"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>POS_MODEL_NOT_FOUND <br>POS_TRM_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/poses/{posNumWeb}/terminals/{trmNumber}/prices/{serviceIdWeb}":{"get":{"tags":["Обработчик запросов по цене на терминале точки облуживания"],"summary":"Получить цену на терминале точки обслуживания","operationId":"terminalPriceUsingGET","produces":["*/*"],"parameters":[{"name":"posNumWeb","in":"path","description":"Идентификатор точки обслуживания","required":true,"type":"integer","format":"int32"},{"name":"serviceIdWeb","in":"path","description":"Идентификатор услуги","required":true,"type":"integer","format":"int32"},{"name":"trmNumber","in":"path","description":"Номер терминала точки обслуживания","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Цена на терминале точки облуживания","originalRef":"Цена на терминале точки облуживания"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>POS_MODEL_NOT_FOUND <br>POS_TRM_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND <br>POS_TRM_PRICE_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Цена на терминале точки облуживания","originalRef":"Цена на терминале точки облуживания"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>POS_MODEL_NOT_FOUND <br>POS_TRM_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND <br>POS_TRM_PRICE_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/poses/{posNumWeb}/terminals/{trmNumber}/prices/{serviceIdWeb}/full":{"get":{"tags":["Обработчик запросов по цене на терминале точки облуживания"],"summary":"Получить цену на терминале точки обслуживания с полной информацией","operationId":"terminalPriceFullUsingGET","produces":["*/*"],"parameters":[{"name":"posNumWeb","in":"path","description":"Идентификатор точки обслуживания","required":true,"type":"integer","format":"int32"},{"name":"serviceIdWeb","in":"path","description":"Идентификатор услуги","required":true,"type":"integer","format":"int32"},{"name":"trmNumber","in":"path","description":"Номер терминала точки обслуживания","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Цена на терминале точки облуживания с полной информацией","originalRef":"Цена на терминале точки облуживания с полной информацией"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>POS_MODEL_NOT_FOUND <br>POS_TRM_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND <br>POS_TRM_PRICE_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Цена на терминале точки облуживания с полной информацией","originalRef":"Цена на терминале точки облуживания с полной информацией"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>POS_MODEL_NOT_FOUND <br>POS_TRM_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND <br>POS_TRM_PRICE_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/poses/{posNumWeb}/terminals/{trmNumber}/with-prices":{"get":{"tags":["Обработчик запросов по терминалу точки обслуживания"],"summary":"Получить терминал точки обслуживания с ценами","operationId":"terminalWithPricesUsingGET","produces":["*/*"],"parameters":[{"name":"posNumWeb","in":"path","description":"Идентификатор точки обслуживания","required":true,"type":"integer","format":"int32"},{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"trmNumber","in":"path","description":"Номер терминала точки обслуживания","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Терминал точки обслуживания","originalRef":"Терминал точки обслуживания"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>POS_MODEL_NOT_FOUND <br>POS_TRM_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Терминал точки обслуживания","originalRef":"Терминал точки обслуживания"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>POS_MODEL_NOT_FOUND <br>POS_TRM_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/poses/{posNumWeb}/terminals/{trmNumber}/with-prices/full":{"get":{"tags":["Обработчик запросов по терминалу точки обслуживания"],"summary":"Получить терминал точки обслуживания с полной информацией и ценами","operationId":"terminalWithPricesFullUsingGET","produces":["*/*"],"parameters":[{"name":"posNumWeb","in":"path","description":"Идентификатор точки обслуживания","required":true,"type":"integer","format":"int32"},{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"trmNumber","in":"path","description":"Номер терминала точки обслуживания","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Терминал точки обслуживания с полной информацией","originalRef":"Терминал точки обслуживания с полной информацией"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>POS_MODEL_NOT_FOUND <br>POS_TRM_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Терминал точки обслуживания с полной информацией","originalRef":"Терминал точки обслуживания с полной информацией"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>POS_MODEL_NOT_FOUND <br>POS_TRM_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/poses/{posNumWeb}/with-terminals":{"get":{"tags":["Обработчик запросов по точке обслуживания"],"summary":"Получить точку обслуживания с терминалами","operationId":"posWithTerminalsUsingGET","produces":["*/*"],"parameters":[{"name":"posNumWeb","in":"path","description":"Идентификатор точки обслуживания","required":true,"type":"integer","format":"int32"},{"name":"posTrmNumberFilterList","in":"query","description":"Фильтр по номеру терминала точки обслуживания, поле trmNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех терминалов можно получить <br>в запросе '/poses/{posNumWeb}/terminals' поле posFilialNumber <br>(описание запроса в Обработчике запросов по терминалу точки обслуживания)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Точка обслуживания","originalRef":"Точка обслуживания"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>POS_MODEL_NOT_FOUND <br>POS_TRM_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Точка обслуживания","originalRef":"Точка обслуживания"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>POS_MODEL_NOT_FOUND <br>POS_TRM_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/poses/{posNumWeb}/with-terminals-and-prices":{"get":{"tags":["Обработчик запросов по точке обслуживания"],"summary":"Получить точку обслуживания с терминалами и ценами","operationId":"posWithTerminalsWithPricesUsingGET","produces":["*/*"],"parameters":[{"name":"posNumWeb","in":"path","description":"Идентификатор точки обслуживания","required":true,"type":"integer","format":"int32"},{"name":"posTrmNumberFilterList","in":"query","description":"Фильтр по номеру терминала точки обслуживания, поле trmNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех терминалов можно получить <br>в запросе '/poses/{posNumWeb}/terminals' поле posFilialNumber <br>(описание запроса в Обработчике запросов по терминалу точки обслуживания)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Точка обслуживания","originalRef":"Точка обслуживания"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>POS_MODEL_NOT_FOUND <br>POS_TRM_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Точка обслуживания","originalRef":"Точка обслуживания"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>POS_MODEL_NOT_FOUND <br>POS_TRM_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/poses/{posNumWeb}/with-terminals-and-prices/full":{"get":{"tags":["Обработчик запросов по точке обслуживания"],"summary":"Получить точку обслуживания с полной информацией и терминалами и ценами","operationId":"posWithTerminalsWithPricesFullUsingGET","produces":["*/*"],"parameters":[{"name":"posNumWeb","in":"path","description":"Идентификатор точки обслуживания","required":true,"type":"integer","format":"int32"},{"name":"posTrmNumberFilterList","in":"query","description":"Фильтр по номеру терминала точки обслуживания, поле trmNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех терминалов можно получить <br>в запросе '/poses/{posNumWeb}/terminals' поле posFilialNumber <br>(описание запроса в Обработчике запросов по терминалу точки обслуживания)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Точка обслуживания с полной информацией","originalRef":"Точка обслуживания с полной информацией"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>POS_MODEL_NOT_FOUND <br>POS_TRM_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Точка обслуживания с полной информацией","originalRef":"Точка обслуживания с полной информацией"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>POS_MODEL_NOT_FOUND <br>POS_TRM_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/report-card-balances":{"get":{"tags":["Обработчик запросов по отчету остатка на карте для электронного кошелька"],"summary":"Получить страницу отчетов остатка на картах для электронных кошельков","operationId":"reportCardBalancesUsingGET","produces":["*/*"],"parameters":[{"name":"beginDate","in":"query","description":"Дата начало периода (Период с) <br>если дата начала периода не указана, поле beginDate = null, то берется начало текущего месяца","required":false,"type":"string","format":"date-time"},{"name":"cardNumberFilterList","in":"query","description":"Фильтр по номеру карты, поле cardNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех карт можно получить в запросе '/cards' поле cardNumber <br>(описание поля в Обработчике запросов по карте)","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"endDate","in":"query","description":"Дата конца периода (Период до) <br>если дата конца периода не указана, поле endDate = null, то берется конец текущего месяца","required":false,"type":"string","format":"date-time"},{"name":"page","in":"query","description":"Номер страницы в запросе (номер страницы ведется с нуля)","required":false,"type":"integer","format":"int32"},{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"size","in":"query","description":"Количество элементов на страницу в запросе","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Отчет остатка на карте для электронного кошелька»","originalRef":"Страница«Отчет остатка на карте для электронного кошелька»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Отчет остатка на карте для электронного кошелька»","originalRef":"Страница«Отчет остатка на карте для электронного кошелька»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/report-card-balances/full":{"get":{"tags":["Обработчик запросов по отчету остатка на карте для электронного кошелька"],"summary":"Получить страницу отчетов остатка на картах для электронных кошельков с полной информацией","operationId":"reportCardBalancesFullUsingGET","produces":["*/*"],"parameters":[{"name":"beginDate","in":"query","description":"Дата начало периода (Период с) <br>если дата начала периода не указана, поле beginDate = null, то берется начало текущего месяца","required":false,"type":"string","format":"date-time"},{"name":"cardNumberFilterList","in":"query","description":"Фильтр по номеру карты, поле cardNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех карт можно получить в запросе '/cards' поле cardNumber <br>(описание поля в Обработчике запросов по карте)","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"endDate","in":"query","description":"Дата конца периода (Период до) <br>если дата конца периода не указана, поле endDate = null, то берется конец текущего месяца","required":false,"type":"string","format":"date-time"},{"name":"page","in":"query","description":"Номер страницы в запросе (номер страницы ведется с нуля)","required":false,"type":"integer","format":"int32"},{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"size","in":"query","description":"Количество элементов на страницу в запросе","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Отчет остатка на карте для электронного кошелька c полной информацией»","originalRef":"Страница«Отчет остатка на карте для электронного кошелька c полной информацией»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Отчет остатка на карте для электронного кошелька c полной информацией»","originalRef":"Страница«Отчет остатка на карте для электронного кошелька c полной информацией»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/report-card-balances/{cardNumber}/{serviceIdWeb}":{"get":{"tags":["Обработчик запросов по отчету остатка на карте для электронного кошелька"],"summary":"Получить отчет остатка на карте для электронного кошелька","description":"Схемы обслуживания на кошельке должны быть ЭК или ЭКФЦ или ЭКП, а именно поле schemaNumber = (1, 4, 6) <br> <br>Получить карты на которых есть электронные кошельки можно <br>в запросе '/cards?hasElectronicPursesFilter=true&schemaNumberFilterList=1,6,4' поле cardNumber <br>или в запросе '/cards/full?hasElectronicPursesFilter=true&schemaNumberFilterList=1,6,4' поле cardNumber <br>(описание запроса в Обработчике запросов по карте и в разделе Models > Карта) <br>Получить кошельки, которые электронные можно <br>в запросе '/cards/{cardNumber}/purses?schemaNumberFilterList=1,6,4' поле serviceIdWeb <br>или в запросе '/cards/{cardNumber}/purses/full?schemaNumberFilterList=1,6,4' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по кошельку и в разделе Models > Кошелек) <br>Получить карты с электронными кошельками можно <br>в запросе '/cards/with-purses?hasElectronicPursesFilter=true&schemaNumberFilterList=1,6,4' <br>поля cardNumber и serviceIdWeb <br>или в запросе '/cards/with-purses/full?hasElectronicPursesFilter=true&schemaNumberFilterList=1,6,4' <br>поля cardNumber и serviceIdWeb <br>(описание запроса в Обработчике запросов по карте и в разделе Models > Карта)","operationId":"reportCardBalanceUsingGET","produces":["*/*"],"parameters":[{"name":"beginDate","in":"query","description":"Дата начало периода (Период с) <br>если дата начала периода не указана, поле beginDate = null, то берется начало текущего месяца","required":false,"type":"string","format":"date-time"},{"name":"cardNumber","in":"path","description":"Номер карты","required":true,"type":"string"},{"name":"endDate","in":"query","description":"Дата конца периода (Период до) <br>если дата конца периода не указана, поле endDate = null, то берется конец текущего месяца","required":false,"type":"string","format":"date-time"},{"name":"serviceIdWeb","in":"path","description":"Идентификатор услуги","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Отчет остатка на карте для электронного кошелька","originalRef":"Отчет остатка на карте для электронного кошелька"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br>IN_REPORT_CARD_BALANCE_CARD_HAS_NOT_ELECTRONIC_PURSES <br>IN_REPORT_CARD_BALANCE_PURSE_IS_NOT_ELECTRONIC_PURSE_BECAUSE_SCHEMA_ARE_NOT_EP_EPC_EPFP <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>CARD_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND <br>REPORT_CARD_BALANCE_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Отчет остатка на карте для электронного кошелька","originalRef":"Отчет остатка на карте для электронного кошелька"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br>IN_REPORT_CARD_BALANCE_CARD_HAS_NOT_ELECTRONIC_PURSES <br>IN_REPORT_CARD_BALANCE_PURSE_IS_NOT_ELECTRONIC_PURSE_BECAUSE_SCHEMA_ARE_NOT_EP_EPC_EPFP <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>CARD_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND <br>REPORT_CARD_BALANCE_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/report-card-balances/{cardNumber}/{serviceIdWeb}/full":{"get":{"tags":["Обработчик запросов по отчету остатка на карте для электронного кошелька"],"summary":"Получить отчет остатка на карте для электронного кошелька с полной информацией","description":"Схемы обслуживания на кошельке должны быть ЭК или ЭКФЦ или ЭКП, а именно поле schemaNumber = (1, 4, 6) <br>Получить карты на которых есть электронные кошельки можно <br>в запросе '/cards?hasElectronicPursesFilter=true&schemaNumberFilterList=1,6,4' поле cardNumber <br>или в запросе '/cards/full?hasElectronicPursesFilter=true&schemaNumberFilterList=1,6,4' поле cardNumber <br>(описание запроса в Обработчике запросов по карте и в разделе Models > Карта) <br>Получить кошельки, которые электронные можно <br>в запросе '/cards/{cardNumber}/purses?schemaNumberFilterList=1,6,4' поле serviceIdWeb <br>или в запросе '/cards/{cardNumber}/purses/full?schemaNumberFilterList=1,6,4' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по кошельку и в разделе Models > Кошелек) <br>Получить карты с электронными кошельками можно <br>в запросе '/cards/with-purses?hasElectronicPursesFilter=true&schemaNumberFilterList=1,6,4' <br>поля cardNumber и serviceIdWeb <br>или в запросе '/cards/with-purses/full?hasElectronicPursesFilter=true&schemaNumberFilterList=1,6,4' <br>поля cardNumber и serviceIdWeb <br>(описание запроса в Обработчике запросов по карте и в разделе Models > Карта)","operationId":"reportCardBalanceFullUsingGET","produces":["*/*"],"parameters":[{"name":"beginDate","in":"query","description":"Дата начало периода (Период с) <br>если дата начала периода не указана, поле beginDate = null, то берется начало текущего месяца","required":false,"type":"string","format":"date-time"},{"name":"cardNumber","in":"path","description":"Номер карты","required":true,"type":"string"},{"name":"endDate","in":"query","description":"Дата конца периода (Период до) <br>если дата конца периода не указана, поле endDate = null, то берется конец текущего месяца","required":false,"type":"string","format":"date-time"},{"name":"serviceIdWeb","in":"path","description":"Идентификатор услуги","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Отчет остатка на карте для электронного кошелька c полной информацией","originalRef":"Отчет остатка на карте для электронного кошелька c полной информацией"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br>IN_REPORT_CARD_BALANCE_CARD_HAS_NOT_ELECTRONIC_PURSES <br>IN_REPORT_CARD_BALANCE_PURSE_IS_NOT_ELECTRONIC_PURSE_BECAUSE_SCHEMA_ARE_NOT_EP_EPC_EPFP <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>CARD_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND <br>REPORT_CARD_BALANCE_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Отчет остатка на карте для электронного кошелька c полной информацией","originalRef":"Отчет остатка на карте для электронного кошелька c полной информацией"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br>IN_REPORT_CARD_BALANCE_CARD_HAS_NOT_ELECTRONIC_PURSES <br>IN_REPORT_CARD_BALANCE_PURSE_IS_NOT_ELECTRONIC_PURSE_BECAUSE_SCHEMA_ARE_NOT_EP_EPC_EPFP <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>CARD_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND <br>REPORT_CARD_BALANCE_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/rq-states":{"get":{"tags":["Обработчик запросов по состоянию заявки"],"summary":"Получить список состояний заявки","operationId":"rqStatesUsingGET","produces":["*/*"],"parameters":[{"name":"rqStateIdFilterList","in":"query","description":"Фильтр по идентификатору состояния заявки, поле rqStateId <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех состояний заявки можно получить в запросе '/rq-states' поле rqStateId <br>(описание запроса в Обработчик запросов по состоянию заявки)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Состояния заявки","originalRef":"Состояния заявки"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"responsesObject":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Состояния заявки","originalRef":"Состояния заявки"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/rq-states/{rqStateId}":{"get":{"tags":["Обработчик запросов по состоянию заявки"],"summary":"Получить состояние заявки","operationId":"rqStateUsingGET","produces":["*/*"],"parameters":[{"name":"rqStateId","in":"path","description":"Идентификатор состояния заявки","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Состояния заявки","originalRef":"Состояния заявки"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>RQ_STATE_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Состояния заявки","originalRef":"Состояния заявки"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>RQ_STATE_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/schemas":{"get":{"tags":["Обработчик запросов по схеме обслуживания"],"summary":"Получить список схем обслуживания","operationId":"schemasUsingGET","produces":["*/*"],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Схема обслуживания","originalRef":"Схема обслуживания"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"responsesObject":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Схема обслуживания","originalRef":"Схема обслуживания"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/schemas/{schemaNumber}":{"get":{"tags":["Обработчик запросов по схеме обслуживания"],"summary":"Получить схему обслуживания","operationId":"schemaUsingGET","produces":["*/*"],"parameters":[{"name":"schemaNumber","in":"path","description":"Идентификатор схемы обслуживания","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Схема обслуживания","originalRef":"Схема обслуживания"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>SCHEMA_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Схема обслуживания","originalRef":"Схема обслуживания"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>SCHEMA_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/services":{"get":{"tags":["Обработчик запросов по услуге"],"summary":"Получить список услуг","operationId":"servicesUsingGET","produces":["*/*"],"parameters":[{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Услуга","originalRef":"Услуга"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"responsesObject":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Услуга","originalRef":"Услуга"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/services/{serviceIdWeb}":{"get":{"tags":["Обработчик запросов по услуге"],"summary":"Получить услугу","operationId":"serviceUsingGET","produces":["*/*"],"parameters":[{"name":"serviceIdWeb","in":"path","description":"Идентификатор услуги","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Услуга","originalRef":"Услуга"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>SERVICE_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Услуга","originalRef":"Услуга"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>SERVICE_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/transaction-types":{"get":{"tags":["Обработчик запросов по типу транзакции"],"summary":"Получить список типов транзакций","operationId":"transactionTypesUsingGET","produces":["*/*"],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Тип операции для транзакции","originalRef":"Тип операции для транзакции"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"responsesObject":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Тип операции для транзакции","originalRef":"Тип операции для транзакции"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/transaction-types/{trnTypeNumber}":{"get":{"tags":["Обработчик запросов по типу транзакции"],"summary":"Получить тип транзакции","operationId":"transactionTypeUsingGET","produces":["*/*"],"parameters":[{"name":"trnTypeNumber","in":"path","description":"Идентификатор типа транзакции","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Тип операции для транзакции","originalRef":"Тип операции для транзакции"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>TRN_TYPE_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Тип операции для транзакции","originalRef":"Тип операции для транзакции"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>TRN_TYPE_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/transactions":{"get":{"tags":["Обработчик запросов по транзакции"],"summary":"Получить страницу транзакций","operationId":"transactionsUsingGET","produces":["*/*"],"parameters":[{"name":"beginDateFilter","in":"query","description":"Фильтр по дате начала выборки (Период с) <br>фильтруется по дате создания, поле dateOf","required":false,"type":"string","format":"date-time","x-example":"2022-01-01T00:00:00"},{"name":"cardIsVcCardFilter","in":"query","description":"Фильтр по признаку карты для талона, поле cardIsVcCard <br>если cardIsVcCardFilter = false, то выведутся транзакции, которые не является транзакциями по талонам <br>если cardIsVcCardFilter = true, то выведутся точки обслуживания, которые является транзакциями по талонам","required":false,"type":"boolean"},{"name":"cardNumberFilterList","in":"query","description":"Фильтр по номеру карты, поле cardNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех карт можно получить в запросе '/cards' поле cardNumber <br>(описание поля в Обработчике запросов по карте)","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"currencyServiceIdWebFilterList","in":"query","description":"Фильтр по идентификатору кошелека/счета, поле currency.serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"endDateFilter","in":"query","description":"Фильтр по дате конца выборки (Период с) <br>фильтруется по дате создания, поле dateOf ","required":false,"type":"string","format":"date-time","x-example":"2022-01-31T23:59:59"},{"name":"page","in":"query","description":"Номер страницы в запросе (номер страницы ведется с нуля)","required":false,"type":"integer","format":"int32"},{"name":"posNumWebFilterList","in":"query","description":"Фильтр по идентификатору точки обслуживания, поле posNumWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех точек обслуживания можно получить в запросе '/poses' поле posNumWeb <br>или в запросе '/poses/without-address' поле posNumWeb <br>(описание запросов в Обработчике запросов по точке обслуживания)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"size","in":"query","description":"Количество элементов на страницу в запросе","required":false,"type":"integer","format":"int32"},{"name":"trnFromOcFilter","in":"query","description":"Фильтр по признаку транзакции выполненой в ОЦ, поле trnFromOc <br>если cardIsVcCardFilter = false, то выведутся транзакции, которые не является транзакциями выполнеными в ОЦ <br>если cardIsVcCardFilter = true, то выведутся точки обслуживания, которые является выполнеными в ОЦ","required":false,"type":"boolean"},{"name":"trnIsIbsFilter","in":"query","description":"Фильтр по признаку товарной транзакции, поле trnIsIbs <br>если trnIsIbsFilter = false, то выведутся транзакции, которые не является товарной транзакцией <br>если trnIsIbsFilter = true, то выведутся точки обслуживания, которые является товарной транзакцией","required":false,"type":"boolean"},{"name":"trnTypeFilterList","in":"query","description":"Фильтр по типу транзакции, поле trnTypeNumber <br>можно указать список идентификаторов, по которому будет фильтрациясписок всех типов транзакций можно получить в запросе '/transaction-types' поле trnTypeNumber <br>(описание поля в Обработчике запросов по типу транзакции)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Транзакция»","originalRef":"Страница«Транзакция»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Транзакция»","originalRef":"Страница«Транзакция»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/transactions/full":{"get":{"tags":["Обработчик запросов по транзакции"],"summary":"Получить страницу транзакций с полной информацией","operationId":"transactionsFullUsingGET","produces":["*/*"],"parameters":[{"name":"beginDateFilter","in":"query","description":"Фильтр по дате начала выборки (Период с) <br>фильтруется по дате создания, поле dateOf","required":false,"type":"string","format":"date-time","x-example":"2022-01-01T00:00:00"},{"name":"cardIsVcCardFilter","in":"query","description":"Фильтр по признаку карты для талона, поле cardIsVcCard <br>если cardIsVcCardFilter = false, то выведутся транзакции, которые не является транзакциями по талонам <br>если cardIsVcCardFilter = true, то выведутся точки обслуживания, которые является транзакциями по талонам","required":false,"type":"boolean"},{"name":"cardNumberFilterList","in":"query","description":"Фильтр по номеру карты, поле cardNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех карт можно получить в запросе '/cards' поле cardNumber <br>(описание поля в Обработчике запросов по карте)","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"currencyServiceIdWebFilterList","in":"query","description":"Фильтр по идентификатору кошелека/счета, поле currency.serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"endDateFilter","in":"query","description":"Фильтр по дате конца выборки (Период с) <br>фильтруется по дате создания, поле dateOf ","required":false,"type":"string","format":"date-time","x-example":"2022-01-31T23:59:59"},{"name":"page","in":"query","description":"Номер страницы в запросе (номер страницы ведется с нуля)","required":false,"type":"integer","format":"int32"},{"name":"posNumWebFilterList","in":"query","description":"Фильтр по идентификатору точки обслуживания, поле posNumWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех точек обслуживания можно получить в запросе '/poses' поле posNumWeb <br>или в запросе '/poses/without-address' поле posNumWeb <br>(описание запросов в Обработчике запросов по точке обслуживания)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"size","in":"query","description":"Количество элементов на страницу в запросе","required":false,"type":"integer","format":"int32"},{"name":"trnFromOcFilter","in":"query","description":"Фильтр по признаку транзакции выполненой в ОЦ, поле trnFromOc <br>если cardIsVcCardFilter = false, то выведутся транзакции, которые не является транзакциями выполнеными в ОЦ <br>если cardIsVcCardFilter = true, то выведутся точки обслуживания, которые является выполнеными в ОЦ","required":false,"type":"boolean"},{"name":"trnIsIbsFilter","in":"query","description":"Фильтр по признаку товарной транзакции, поле trnIsIbs <br>если trnIsIbsFilter = false, то выведутся транзакции, которые не является товарной транзакцией <br>если trnIsIbsFilter = true, то выведутся точки обслуживания, которые является товарной транзакцией","required":false,"type":"boolean"},{"name":"trnTypeFilterList","in":"query","description":"Фильтр по типу транзакции, поле trnTypeNumber <br>можно указать список идентификаторов, по которому будет фильтрациясписок всех типов транзакций можно получить в запросе '/transaction-types' поле trnTypeNumber <br>(описание поля в Обработчике запросов по типу транзакции)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Транзакция с полной информацией»","originalRef":"Страница«Транзакция с полной информацией»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>POS_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>TRN_TYPE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>SCHEMA_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Транзакция с полной информацией»","originalRef":"Страница«Транзакция с полной информацией»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>POS_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>TRN_TYPE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>SCHEMA_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/transactions/{trnGuid}":{"get":{"tags":["Обработчик запросов по транзакции"],"summary":"Получить транзакцию","operationId":"transactionUsingGET","produces":["*/*"],"parameters":[{"name":"trnGuid","in":"path","description":"Идентификатор транзакции","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Транзакция","originalRef":"Транзакция"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>TRANSACTION_FORBIDDEN_BECAUSE_ACCOUNT_FORBIDDEN <br>TRANSACTION_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>TRANSACTION_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Транзакция","originalRef":"Транзакция"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>TRANSACTION_FORBIDDEN_BECAUSE_ACCOUNT_FORBIDDEN <br>TRANSACTION_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>TRANSACTION_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/transactions/{trnGuid}/full":{"get":{"tags":["Обработчик запросов по транзакции"],"summary":"Получить транзакцию с полной информацией","operationId":"transactionFullUsingGET","produces":["*/*"],"parameters":[{"name":"trnGuid","in":"path","description":"Идентификатор транзакции","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Транзакция с полной информацией","originalRef":"Транзакция с полной информацией"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>TRANSACTION_FORBIDDEN_BECAUSE_ACCOUNT_FORBIDDEN <br>TRANSACTION_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>TRANSACTION_MODEL_NOT_FOUND <br>POS_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>TRN_TYPE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>SCHEMA_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Транзакция с полной информацией","originalRef":"Транзакция с полной информацией"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>TRANSACTION_FORBIDDEN_BECAUSE_ACCOUNT_FORBIDDEN <br>TRANSACTION_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>TRANSACTION_MODEL_NOT_FOUND <br>POS_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>TRN_TYPE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>SCHEMA_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/unblock-card-requests":{"get":{"tags":["Обработчик запросов по заявке на разблокировку карты"],"summary":"Получить страницу заявок на разблокировку карт","description":"Доступ к заявке на разблокировку карты дожен быть разблокирован, <br>поле allowUnblockCardRequest = true <br>(поле allowUnblockCardRequest можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"unblockCardRequestsUsingGET","produces":["*/*"],"parameters":[{"name":"beginDateFilter","in":"query","description":"Фильтр по дате начала выборки (Период с) <br>фильтруется по дате создания, поле dateOf","required":false,"type":"string","format":"date-time","x-example":"2022-01-01T00:00:00"},{"name":"cardNumberFilterList","in":"query","description":"Фильтр по номеру карты, поле cardNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех карт можно получить в запросе '/cards' поле cardNumber <br>(описание поля в Обработчике запросов по карте)","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"endDateFilter","in":"query","description":"Фильтр по дате конца выборки (Период с) <br>фильтруется по дате создания, поле dateOf","required":false,"type":"string","format":"date-time","x-example":"2022-01-31T23:59:59"},{"name":"page","in":"query","description":"Номер страницы в запросе (номер страницы ведется с нуля)","required":false,"type":"integer","format":"int32"},{"name":"rqStateIdFilterList","in":"query","description":"Фильтр по идентификатору состояния заявки, поле rqStateId <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех состояний заявки можно получить в запросе '/rq-states' поле rqStateId <br>(описание запроса в Обработчик запросов по состоянию заявки)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"sendOcFilter","in":"query","description":"Фильтр по подтверждению пользователем заявки <br>если sendOcFilter = false, то выведутся заявки, которые без подтреждения пользователем <br>если sendOcFilter = true, то выведутся заявки, которые подтреждены пользователем <br>подробное описание в поле canSendOcImm <br>(поле canSendOcImm, можно получить в запросе '/user-setting' <br>и описание в разделе Models > Пользовательские настройки)","required":false,"type":"boolean"},{"name":"size","in":"query","description":"Количество элементов на страницу в запросе","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Заявка на разблокировку карты»","originalRef":"Страница«Заявка на разблокировку карты»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>UNBLOCK_CARD_REQUEST_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Заявка на разблокировку карты»","originalRef":"Страница«Заявка на разблокировку карты»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>UNBLOCK_CARD_REQUEST_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]},"post":{"tags":["Обработчик запросов по заявке на разблокировку карты"],"summary":"Создать заявку на разблокировку карты","description":"Доступ к заявке на разблокировку карты дожен быть разблокирован, <br>поле allowUnblockCardRequest = true <br>(поле allowUnblockCardRequest можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"createUnblockCardRequestUsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"form","description":"form","required":true,"schema":{"$ref":"#/definitions/Форма создание заявки на разблокировку карты","originalRef":"Форма создание заявки на разблокировку карты"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Заявка на разблокировку карты","originalRef":"Заявка на разблокировку карты"}},"201":{"description":"Created"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br>UNBLOCK_CARD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_CARD_NUMBER_IS_EMPTY <br>UNBLOCK_CARD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_CARD_NUMBER_EXCEEDED_MAX_VALUE <br>UNBLOCK_CARD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_UNBLOCK_COMMENT_EXCEEDED_MAX_VALUE <br>UNBLOCK_CARD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_UNBLOCK_COMMENT_HAS_INVALID_CHARACTERS <br>REQUEST_COULD_NOT_BE_CREATED_BECAUSE_CARD_STATE_IS_NOT_IN_BLOCKED_BY_USER <br>UNBLOCK_CARD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_THERE_IS_AN_UNSENT_REQUEST_WITH_THIS_CARD_NUMBER <br>UNBLOCK_CARD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_THERE_IS_A_SENT_AND_UNCONFIRMED_REQUEST_WITH_THIS_CARD_NUMBER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>UNBLOCK_CARD_REQUEST_FORBIDDEN <br>CARD_NUMBER_FORBIDDEN <br>REQUEST_FORBIDDEN_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION_FOR_UNSENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN_FOR_USER_IS_CARD_HOLDER_OR_USER_IS_MOBILE_USER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>UNBLOCK_CARD_REQUEST_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Заявка на разблокировку карты","originalRef":"Заявка на разблокировку карты"}},"201":{"description":"Created"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br>UNBLOCK_CARD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_CARD_NUMBER_IS_EMPTY <br>UNBLOCK_CARD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_CARD_NUMBER_EXCEEDED_MAX_VALUE <br>UNBLOCK_CARD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_UNBLOCK_COMMENT_EXCEEDED_MAX_VALUE <br>UNBLOCK_CARD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_UNBLOCK_COMMENT_HAS_INVALID_CHARACTERS <br>REQUEST_COULD_NOT_BE_CREATED_BECAUSE_CARD_STATE_IS_NOT_IN_BLOCKED_BY_USER <br>UNBLOCK_CARD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_THERE_IS_AN_UNSENT_REQUEST_WITH_THIS_CARD_NUMBER <br>UNBLOCK_CARD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_THERE_IS_A_SENT_AND_UNCONFIRMED_REQUEST_WITH_THIS_CARD_NUMBER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>UNBLOCK_CARD_REQUEST_FORBIDDEN <br>CARD_NUMBER_FORBIDDEN <br>REQUEST_FORBIDDEN_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION_FOR_UNSENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN_FOR_USER_IS_CARD_HOLDER_OR_USER_IS_MOBILE_USER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>CARD_MODEL_NOT_FOUND <br>UNBLOCK_CARD_REQUEST_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/unblock-card-requests/full":{"get":{"tags":["Обработчик запросов по заявке на разблокировку карты"],"summary":"Получить страницу заявок на разблокировку карт с полной информацией","description":"Доступ к заявке на разблокировку карты дожен быть разблокирован, <br>поле allowUnblockCardRequest = true <br>(поле allowUnblockCardRequest можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"unblockCardRequestsFullUsingGET","produces":["*/*"],"parameters":[{"name":"beginDateFilter","in":"query","description":"Фильтр по дате начала выборки (Период с) <br>фильтруется по дате создания, поле dateOf","required":false,"type":"string","format":"date-time","x-example":"2022-01-01T00:00:00"},{"name":"cardNumberFilterList","in":"query","description":"Фильтр по номеру карты, поле cardNumber <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех карт можно получить в запросе '/cards' поле cardNumber <br>(описание поля в Обработчике запросов по карте)","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"endDateFilter","in":"query","description":"Фильтр по дате конца выборки (Период с) <br>фильтруется по дате создания, поле dateOf","required":false,"type":"string","format":"date-time","x-example":"2022-01-31T23:59:59"},{"name":"page","in":"query","description":"Номер страницы в запросе (номер страницы ведется с нуля)","required":false,"type":"integer","format":"int32"},{"name":"rqStateIdFilterList","in":"query","description":"Фильтр по идентификатору состояния заявки, поле rqStateId <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех состояний заявки можно получить в запросе '/rq-states' поле rqStateId <br>(описание запроса в Обработчик запросов по состоянию заявки)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"sendOcFilter","in":"query","description":"Фильтр по подтверждению пользователем заявки <br>если sendOcFilter = false, то выведутся заявки, которые без подтреждения пользователем <br>если sendOcFilter = true, то выведутся заявки, которые подтреждены пользователем <br>подробное описание в поле canSendOcImm <br>(поле canSendOcImm, можно получить в запросе '/user-setting' <br>и описание в разделе Models > Пользовательские настройки)","required":false,"type":"boolean"},{"name":"size","in":"query","description":"Количество элементов на страницу в запросе","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Заявка на разблокировку карты с полной информацией»","originalRef":"Страница«Заявка на разблокировку карты с полной информацией»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>UNBLOCK_CARD_REQUEST_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>RQ_STATE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Заявка на разблокировку карты с полной информацией»","originalRef":"Страница«Заявка на разблокировку карты с полной информацией»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>UNBLOCK_CARD_REQUEST_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>RQ_STATE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/unblock-card-requests/send":{"post":{"tags":["Обработчик запросов по заявке на разблокировку карты"],"summary":"Отправить заявки на разблокировку карт","description":"Доступ к заявке на разблокировку карты дожен быть разблокирован, <br>поле allowUnblockCardRequest = true <br>и настройка работы создания и отображение заявки <br>не должно быть установлено Отправлять сразу после создания, поле canSendOcImm != 2(поля allowUnblockCardRequest и canSendOcImm можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки) <br>заявки на разблокировку карт, которые можно отправить <br>(не подтверждены пользователем, поле sendOc = false) <br>можно получить в запросе '/unblock-card-requests?sendOcFilter=false' <br>или в запросе '/unblock-card-requests/full?sendOcFilter=false' ","operationId":"sendUnblockCardRequestsUsingPOST","consumes":["application/json"],"produces":["*/*"],"responses":{"200":{"description":"OK"},"201":{"description":"Created"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>UNBLOCK_CARD_REQUEST_FORBIDDEN <br>SEND_REQUESTS_FORBIDDEN_REQUESTS_COULD_NOT_BE_SENT_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK"},"201":{"description":"Created"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>UNBLOCK_CARD_REQUEST_FORBIDDEN <br>SEND_REQUESTS_FORBIDDEN_REQUESTS_COULD_NOT_BE_SENT_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/unblock-card-requests/{requestId}":{"get":{"tags":["Обработчик запросов по заявке на разблокировку карты"],"summary":"Получить заявку на разблокировку карты","description":"Доступ к заявке на разблокировку карты дожен быть разблокирован, <br>поле allowUnblockCardRequest = true <br>(поле allowUnblockCardRequest можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"unblockCardRequestUsingGET","produces":["*/*"],"parameters":[{"name":"requestId","in":"path","description":"Идентификатор заявки","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Заявка на разблокировку карты","originalRef":"Заявка на разблокировку карты"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>UNBLOCK_CARD_REQUEST_FORBIDDEN <br>REQUEST_FORBIDDEN_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION_FOR_UNSENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN_FOR_USER_IS_CARD_HOLDER_OR_USER_IS_MOBILE_USER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>UNBLOCK_CARD_REQUEST_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Заявка на разблокировку карты","originalRef":"Заявка на разблокировку карты"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>UNBLOCK_CARD_REQUEST_FORBIDDEN <br>REQUEST_FORBIDDEN_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION_FOR_UNSENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN_FOR_USER_IS_CARD_HOLDER_OR_USER_IS_MOBILE_USER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>UNBLOCK_CARD_REQUEST_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]},"delete":{"tags":["Обработчик запросов по заявке на разблокировку карты"],"summary":"Удаление заявки на разблокировку карты","description":"Доступ к заявке на разблокировку карты дожен быть разблокирован, <br>поле allowUnblockCardRequest = true <br>(поле allowUnblockCardRequest можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки) <br>заявки на разблокировку карт, которые можно удалить <br>(не подтверждены пользователем, поле sendOc = false) <br>можно получить в запросе '/unblock-card-requests?sendOcFilter=false' <br>или в запросе '/unblock-card-requests/full?sendOcFilter=false' ","operationId":"deleteUnblockCardRequestUsingDELETE","produces":["*/*"],"parameters":[{"name":"requestId","in":"path","description":"Идентификатор заявки","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK"},"204":{"description":"No Content"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br>REQUEST_COULD_NOT_BE_DELETED_BECAUSE_REQUEST_SENT <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>UNBLOCK_CARD_REQUEST_FORBIDDEN <br>REQUEST_FORBIDDEN_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION_FOR_UNSENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN_FOR_USER_IS_CARD_HOLDER_OR_USER_IS_MOBILE_USER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>UNBLOCK_CARD_REQUEST_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK"},"204":{"description":"No Content"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br>REQUEST_COULD_NOT_BE_DELETED_BECAUSE_REQUEST_SENT <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>UNBLOCK_CARD_REQUEST_FORBIDDEN <br>REQUEST_FORBIDDEN_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION_FOR_UNSENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN_FOR_USER_IS_CARD_HOLDER_OR_USER_IS_MOBILE_USER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>UNBLOCK_CARD_REQUEST_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/unblock-card-requests/{requestId}/full":{"get":{"tags":["Обработчик запросов по заявке на разблокировку карты"],"summary":"Получить заявку на разблокировку карты с полной информацией","description":"Доступ к заявке на разблокировку карты дожен быть разблокирован, <br>поле allowUnblockCardRequest = true <br>(поле allowUnblockCardRequest можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"unblockCardRequestFullUsingGET","produces":["*/*"],"parameters":[{"name":"requestId","in":"path","description":"Идентификатор заявки","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Заявка на разблокировку карты с полной информацией","originalRef":"Заявка на разблокировку карты с полной информацией"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>UNBLOCK_CARD_REQUEST_FORBIDDEN <br>REQUEST_FORBIDDEN_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION_FOR_UNSENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN_FOR_USER_IS_CARD_HOLDER_OR_USER_IS_MOBILE_USER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>UNBLOCK_CARD_REQUEST_MODEL_NOT_FOUND <br>RQ_STATE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Заявка на разблокировку карты с полной информацией","originalRef":"Заявка на разблокировку карты с полной информацией"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>UNBLOCK_CARD_REQUEST_FORBIDDEN <br>REQUEST_FORBIDDEN_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION_FOR_UNSENT_REQUEST <br>REQUEST_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN_FOR_USER_IS_CARD_HOLDER_OR_USER_IS_MOBILE_USER <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>UNBLOCK_CARD_REQUEST_MODEL_NOT_FOUND <br>RQ_STATE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/user-setting":{"get":{"tags":["Обработчик запросов по пользовательским настройкам"],"summary":"Получить пользовательские настройки","operationId":"userSettingUsingGET","produces":["*/*"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Пользовательские настройки","originalRef":"Пользовательские настройки"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Пользовательские настройки","originalRef":"Пользовательские настройки"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/user-setting/change-language":{"post":{"tags":["Обработчик запросов по пользовательским настройкам"],"summary":"Изменить язык у пользователя","operationId":"changeUserLanguageUsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"form","description":"form","required":true,"schema":{"$ref":"#/definitions/Форма изменения языка пользользателя","originalRef":"Форма изменения языка пользользателя"}}],"responses":{"200":{"description":"OK"},"201":{"description":"Created"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br>USER_LNG_FORM_NOT_VALIDATED_BECAUSE_LNG_ID_IS_EMPTY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>LNG_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK"},"201":{"description":"Created"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br>USER_LNG_FORM_NOT_VALIDATED_BECAUSE_LNG_ID_IS_EMPTY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>LNG_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/virtual-coupon-holders":{"get":{"tags":["Обработчик запросов по держателю талона"],"summary":"Получить страницу держателей талонов","description":"Доступ к талону должен быть разрешен, поле allowVc = true <br>(поле allowVc можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"vcHoldersUsingGET","produces":["*/*"],"parameters":[{"name":"page","in":"query","description":"Номер страницы в запросе (номер страницы ведется с нуля)","required":false,"type":"integer","format":"int32"},{"name":"size","in":"query","description":"Количество элементов на страницу в запросе","required":false,"type":"integer","format":"int32"},{"name":"vcHolderNameFilter","in":"query","description":"Фильтр по имени держателя талона, поле vcHolderName <br>фильтр работает от начала введенного текста, <br>в базе данных выберается держатели, в которых текст совпадает с началом имени","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Держатель талона»","originalRef":"Страница«Держатель талона»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Держатель талона»","originalRef":"Страница«Держатель талона»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]},"post":{"tags":["Обработчик запросов по держателю талона"],"summary":"Создать держателя талона","description":"Доступ к талону должен быть разрешен, поле allowVc = true <br>(поле allowVc можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"createVcHolderUsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"form","description":"form","required":true,"schema":{"$ref":"#/definitions/Форма для создания и обновления держателя талона","originalRef":"Форма для создания и обновления держателя талона"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Держатель талона","originalRef":"Держатель талона"}},"201":{"description":"Created"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br>VIRTUAL_COUPON_HOLDER_FORM_NOT_VALIDATED_BECAUSE_VC_HOLDER_NAME_IS_EMPTY <br>VIRTUAL_COUPON_HOLDER_FORM_NOT_VALIDATED_BECAUSE_VC_HOLDER_NAME_EXCEEDED_MAX_VALUE <br>VIRTUAL_COUPON_HOLDER_FORM_NOT_VALIDATED_BECAUSE_PHONE_NUMBER_NOT_ENTERED_PHONE_NUMBER_AND_EMAIL_ARE_NOT_ENTERED <br>VIRTUAL_COUPON_HOLDER_FORM_NOT_VALIDATED_BECAUSE_EMAIL_NOT_ENTERED_PHONE_NUMBER_AND_EMAIL_ARE_NOT_ENTERED <br>VIRTUAL_COUPON_HOLDER_FORM_NOT_VALIDATED_BECAUSE_PHONE_NUMBER_EXCEEDED_MAX_VALUE <br>VIRTUAL_COUPON_HOLDER_FORM_NOT_VALIDATED_BECAUSE_EMAIL_EXCEEDED_MAX_VALUE <br>VIRTUAL_COUPON_HOLDER_FORM_NOT_VALIDATED_BECAUSE_PHONE_NUMBER_INVALID_REGEX <br>VIRTUAL_COUPON_HOLDER_FORM_NOT_VALIDATED_BECAUSE_EMAIL_INVALID_REGEX <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>VIRTUAL_COUPON_HOLDER_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Держатель талона","originalRef":"Держатель талона"}},"201":{"description":"Created"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br>VIRTUAL_COUPON_HOLDER_FORM_NOT_VALIDATED_BECAUSE_VC_HOLDER_NAME_IS_EMPTY <br>VIRTUAL_COUPON_HOLDER_FORM_NOT_VALIDATED_BECAUSE_VC_HOLDER_NAME_EXCEEDED_MAX_VALUE <br>VIRTUAL_COUPON_HOLDER_FORM_NOT_VALIDATED_BECAUSE_PHONE_NUMBER_NOT_ENTERED_PHONE_NUMBER_AND_EMAIL_ARE_NOT_ENTERED <br>VIRTUAL_COUPON_HOLDER_FORM_NOT_VALIDATED_BECAUSE_EMAIL_NOT_ENTERED_PHONE_NUMBER_AND_EMAIL_ARE_NOT_ENTERED <br>VIRTUAL_COUPON_HOLDER_FORM_NOT_VALIDATED_BECAUSE_PHONE_NUMBER_EXCEEDED_MAX_VALUE <br>VIRTUAL_COUPON_HOLDER_FORM_NOT_VALIDATED_BECAUSE_EMAIL_EXCEEDED_MAX_VALUE <br>VIRTUAL_COUPON_HOLDER_FORM_NOT_VALIDATED_BECAUSE_PHONE_NUMBER_INVALID_REGEX <br>VIRTUAL_COUPON_HOLDER_FORM_NOT_VALIDATED_BECAUSE_EMAIL_INVALID_REGEX <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>VIRTUAL_COUPON_HOLDER_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/virtual-coupon-holders/{vcHolderId}":{"get":{"tags":["Обработчик запросов по держателю талона"],"summary":"Получить держателя талона","description":"Доступ к талону должен быть разрешен, поле allowVc = true <br>(поле allowVc можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"vcHolderUsingGET","produces":["*/*"],"parameters":[{"name":"vcHolderId","in":"path","description":"Идентификатор держателя талона","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Держатель талона","originalRef":"Держатель талона"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>VIRTUAL_COUPON_HOLDER_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Держатель талона","originalRef":"Держатель талона"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>VIRTUAL_COUPON_HOLDER_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]},"put":{"tags":["Обработчик запросов по держателю талона"],"summary":"Обновить держателя талона","description":"Доступ к талону должен быть разрешен, поле allowVc = true <br>(поле allowVc можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки) <br>список держателей можно получить в запросе '/virtual-coupon-holders' поле vcHolderId","operationId":"updateVcHolderUsingPUT","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"form","description":"form","required":true,"schema":{"$ref":"#/definitions/Форма для создания и обновления держателя талона","originalRef":"Форма для создания и обновления держателя талона"}},{"name":"vcHolderId","in":"path","description":"Идентификатор держателя талона","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Держатель талона","originalRef":"Держатель талона"}},"201":{"description":"Created"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br>VIRTUAL_COUPON_HOLDER_FORM_NOT_VALIDATED_BECAUSE_VC_HOLDER_NAME_IS_EMPTY <br>VIRTUAL_COUPON_HOLDER_FORM_NOT_VALIDATED_BECAUSE_VC_HOLDER_NAME_EXCEEDED_MAX_VALUE <br>VIRTUAL_COUPON_HOLDER_FORM_NOT_VALIDATED_BECAUSE_PHONE_NUMBER_NOT_ENTERED_PHONE_NUMBER_AND_EMAIL_ARE_NOT_ENTERED <br>VIRTUAL_COUPON_HOLDER_FORM_NOT_VALIDATED_BECAUSE_EMAIL_NOT_ENTERED_PHONE_NUMBER_AND_EMAIL_ARE_NOT_ENTERED <br>VIRTUAL_COUPON_HOLDER_FORM_NOT_VALIDATED_BECAUSE_PHONE_NUMBER_EXCEEDED_MAX_VALUE <br>VIRTUAL_COUPON_HOLDER_FORM_NOT_VALIDATED_BECAUSE_EMAIL_EXCEEDED_MAX_VALUE <br>VIRTUAL_COUPON_HOLDER_FORM_NOT_VALIDATED_BECAUSE_PHONE_NUMBER_INVALID_REGEX <br>VIRTUAL_COUPON_HOLDER_FORM_NOT_VALIDATED_BECAUSE_EMAIL_INVALID_REGEX <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>VIRTUAL_COUPON_HOLDER_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Держатель талона","originalRef":"Держатель талона"}},"201":{"description":"Created"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br>VIRTUAL_COUPON_HOLDER_FORM_NOT_VALIDATED_BECAUSE_VC_HOLDER_NAME_IS_EMPTY <br>VIRTUAL_COUPON_HOLDER_FORM_NOT_VALIDATED_BECAUSE_VC_HOLDER_NAME_EXCEEDED_MAX_VALUE <br>VIRTUAL_COUPON_HOLDER_FORM_NOT_VALIDATED_BECAUSE_PHONE_NUMBER_NOT_ENTERED_PHONE_NUMBER_AND_EMAIL_ARE_NOT_ENTERED <br>VIRTUAL_COUPON_HOLDER_FORM_NOT_VALIDATED_BECAUSE_EMAIL_NOT_ENTERED_PHONE_NUMBER_AND_EMAIL_ARE_NOT_ENTERED <br>VIRTUAL_COUPON_HOLDER_FORM_NOT_VALIDATED_BECAUSE_PHONE_NUMBER_EXCEEDED_MAX_VALUE <br>VIRTUAL_COUPON_HOLDER_FORM_NOT_VALIDATED_BECAUSE_EMAIL_EXCEEDED_MAX_VALUE <br>VIRTUAL_COUPON_HOLDER_FORM_NOT_VALIDATED_BECAUSE_PHONE_NUMBER_INVALID_REGEX <br>VIRTUAL_COUPON_HOLDER_FORM_NOT_VALIDATED_BECAUSE_EMAIL_INVALID_REGEX <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>VIRTUAL_COUPON_HOLDER_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/virtual-coupon-limit":{"get":{"tags":["Обработчик запросов по лимитам по талону"],"summary":"Получить лимиты по талону","description":"Доступ к талону должен быть разрешен, поле allowVc = true <br>(поле allowVc можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"vcLimitUsingGET","produces":["*/*"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Лимиты по талону","originalRef":"Лимиты по талону"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>VIRTUAL_COUPON_LIMIT_MODEL_NOT_FOUND - ошибка данных, повтороте запрос через некоторое время <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Лимиты по талону","originalRef":"Лимиты по талону"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>VIRTUAL_COUPON_LIMIT_MODEL_NOT_FOUND - ошибка данных, повтороте запрос через некоторое время <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/virtual-coupon-limit-types":{"get":{"tags":["Обработчик запросов по типу лимита талона"],"summary":"Получить список типов лимита талона","operationId":"vcLimitTypesUsingGET","produces":["*/*"],"parameters":[{"name":"allowFilter","in":"query","description":"Фильтр по разрешению типа лимита талона, поле allow <br>если allowFilter = false, то выведутся типы лимита талона, которые заблокированы <br>если allowFilter = true, то выведутся типы лимита талона, которые разблокированы","required":false,"type":"boolean"}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Тип лимита талона","originalRef":"Тип лимита талона"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"responsesObject":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Тип лимита талона","originalRef":"Тип лимита талона"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/virtual-coupon-limit-types/{vcLimitTypeId}":{"get":{"tags":["Обработчик запросов по типу лимита талона"],"summary":"Получить тип лимита талона","operationId":"vcLimitTypeUsingGET","produces":["*/*"],"parameters":[{"name":"vcLimitTypeId","in":"path","description":"Идентификатор типа лимита талона","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Тип лимита талона","originalRef":"Тип лимита талона"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>VIRTUAL_COUPON_LIMIT_TYPE_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Тип лимита талона","originalRef":"Тип лимита талона"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>VIRTUAL_COUPON_LIMIT_TYPE_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/virtual-coupon-requests":{"get":{"tags":["Обработчик запросов по заявке на талон"],"summary":"Получить страницу заявок на талоны","description":"Доступ к талону должен быть разрешен, поле allowVc = true <br>(поле allowVc можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"vcRequestsUsingGET","produces":["*/*"],"parameters":[{"name":"beginDateFilter","in":"query","description":"Фильтр по дате начала выборки (Период с) <br>фильтруется по дате создания, поле dateOf","required":false,"type":"string","format":"date-time","x-example":"2022-01-01T00:00:00"},{"name":"endDateFilter","in":"query","description":"Фильтр по дате конца выборки (Период с) <br>фильтруется по дате создания, поле dateOf","required":false,"type":"string","format":"date-time","x-example":"2022-01-31T23:59:59"},{"name":"isOrderedFilter","in":"query","description":"Фильтр по подтверждению пользователем заказа на талон <br>если isOrderedFilter = false, то выведутся заявки, которые без подтреждения пользователем заказа на талон <br>если isOrderedFilter = true, то выведутся заявки, которые подтреждены пользователем заказа на талон","required":false,"type":"boolean"},{"name":"page","in":"query","description":"Номер страницы в запросе (номер страницы ведется с нуля)","required":false,"type":"integer","format":"int32"},{"name":"rqStateIdFilterList","in":"query","description":"Фильтр по идентификатору состояния заявки, поле rqStateId <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех состояний заявки можно получить в запросе '/rq-states' поле rqStateId <br>(описание запроса в Обработчик запросов по состоянию заявки)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"size","in":"query","description":"Количество элементов на страницу в запросе","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Заявка на талон»","originalRef":"Страница«Заявка на талон»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Заявка на талон»","originalRef":"Страница«Заявка на талон»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]},"post":{"tags":["Обработчик запросов по заявке на талон"],"summary":"Создать заявку на талоны","description":"Доступ к талону должен быть разрешен, поле allowVc = true <br>должна быть виртуальная карта для талонов, поле existsVcCard = true <br>должен быть одни из доступов к заявке на талон по фиксированной цене или по цене терминала, <br>поле allowVcFixPrice = true или поле allowVcTerminalPrice = true <br>должна быть наличие валюты для заявки на талон, поле existsVcServiceIsCurrency = true <br>и должны быть услуги для талона, поле existsVcServicesNoCurrency = true <br>номер таблицы кодов для талона не должен равнятся нулю, поле vcCodeTableNum != 0 <br>и срок действия кодов для талона не должен быть просрочен, поле vcCodeExpirationDate > now <br>не должен быть заблокирован PIN3 для талона, поле vcPinStateIsBlock != true <br>и срок действия PIN3 для талона не должен быть просрочен, поле vcPinExpirationDate > now <br>также должны быть не заказанные заявки на талоны, <br>их можно получить в запросе '/virtual-coupon-requests?isOrderedFilter=false' <br>или в запросе '/virtual-coupon-requests/full?isOrderedFilter=false' <br>(поля allowVc, <br>existsVcCard, allowVcFixPrice, allowVcTerminalPrice, existsVcServiceIsCurrency, existsVcServicesNoCurrency <br>vcCodeTableNum, vcCodeExpirationDate, vcPinStateIsBlock, vcPinExpirationDate <br>можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"createVcRequestUsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"form","description":"form","required":true,"schema":{"$ref":"#/definitions/Форма создания заявки на талоны","originalRef":"Форма создания заявки на талоны"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Заявка на талон","originalRef":"Заявка на талон"}},"201":{"description":"Created"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br>VIRTUAL_COUPON_REQUEST_FORM_NOT_VALIDATED_BECAUSE_VC_LIMIT_TYPE_ID_IS_EMPTY <br>VIRTUAL_COUPON_REQUEST_FORM_NOT_VALIDATED_BECAUSE_SERVICE_ID_WEB_IS_EMPTY <br>VIRTUAL_COUPON_REQUEST_FORM_NOT_VALIDATED_BECAUSE_NOMINAL_IS_EMPTY <br>VIRTUAL_COUPON_REQUEST_FORM_NOT_VALIDATED_BECAUSE_LIFETIME_IS_EMPTY <br>VIRTUAL_COUPON_REQUEST_FORM_NOT_VALIDATED_BECAUSE_DECLARED_AMOUNT_IS_EMPTY <br>VIRTUAL_COUPON_REQUEST_FORM_NOT_VALIDATED_BECAUSE_VC_HOLDER_NAME_IS_EMPTY <br>VIRTUAL_COUPON_REQUEST_FORM_NOT_VALIDATED_BECAUSE_VC_HOLDER_NAME_EXCEEDED_MAX_VALUE <br>VIRTUAL_COUPON_REQUEST_FORM_NOT_VALIDATED_BECAUSE_SEND_TO_PHONE_NUMBER_IS_EMPTY <br>VIRTUAL_COUPON_REQUEST_FORM_NOT_VALIDATED_BECAUSE_SEND_TO_EMAIL_IS_EMPTY <br>VIRTUAL_COUPON_REQUEST_FORM_NOT_VALIDATED_BECAUSE_SEND_TO_PHONE_NUMBER_DELIVERY_METHOD_NOT_SPECIFIED <br>VIRTUAL_COUPON_REQUEST_FORM_NOT_VALIDATED_BECAUSE_SEND_TO_EMAIL_DELIVERY_METHOD_NOT_SPECIFIED <br>VIRTUAL_COUPON_REQUEST_FORM_NOT_VALIDATED_BECAUSE_PHONE_NUMBER_IS_EMPTY <br>VIRTUAL_COUPON_REQUEST_FORM_NOT_VALIDATED_BECAUSE_EMAIL_IS_EMPTY <br>VIRTUAL_COUPON_REQUEST_FORM_NOT_VALIDATED_BECAUSE_PHONE_NUMBER_EXCEEDED_MAX_VALUE <br>VIRTUAL_COUPON_REQUEST_FORM_NOT_VALIDATED_BECAUSE_EMAIL_EXCEEDED_MAX_VALUE <br>VIRTUAL_COUPON_REQUEST_FORM_NOT_VALIDATED_BECAUSE_PHONE_NUMBER_INVALID_REGEX <br>VIRTUAL_COUPON_REQUEST_FORM_NOT_VALIDATED_BECAUSE_EMAIL_INVALID_REGEX <br>VIRTUAL_COUPON_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_NOT_ALLOW_VC_TERMINAL_PRICE <br>VIRTUAL_COUPON_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_NOT_ALLOW_VC_FIX_PRICE_PRICE <br>VIRTUAL_COUPON_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_SERVICE_ID_WEB_IS_CURRENCY <br>VIRTUAL_COUPON_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_SERVICE_ID_WEB_HAS_NOT_PRICE <br>VIRTUAL_COUPON_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_NOMINAL_GREATER_THAN_VC_MAX_ONE_COUPON_SUM <br>VIRTUAL_COUPON_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_NOMINAL_GREATER_THAN_VC_MAX_ONE_COUPON_VALUE <br>VIRTUAL_COUPON_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_LIFE_TIME_GREATER_THAN_VC_MAX_VALIDITY_DAYS <br>VIRTUAL_COUPON_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_DECLARED_AMOUNT_GREATER_THAN_VC_MAX_SMS_SEND_COUNT <br>VIRTUAL_COUPON_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_DECLARED_AMOUNT_GREATER_THAN_VC_MAX_EMAIL_SEND_COUNT <br>VIRTUAL_COUPON_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_DECLARED_AMOUNT_GREATER_THAN_VC_LIMIT_MONTHLY_AVAILABLE_COUNT_FOR_REQUEST <br>VIRTUAL_COUPON_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_DECLARED_AMOUNT_GREATER_THAN_VC_LIMIT_WEEKLY_AVAILABLE_COUNT_FOR_REQUEST <br>VIRTUAL_COUPON_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_DECLARED_AMOUNT_GREATER_THAN_VC_LIMIT_DAILY_AVAILABLE_COUNT_FOR_REQUEST <br>VIRTUAL_COUPON_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_SUM_GREATER_THAN_VC_LIMIT_MONTHLY_AVAILABLE_SUM_FOR_REQUEST <br>VIRTUAL_COUPON_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_SUM_GREATER_THAN_VC_LIMIT_WEEKLY_AVAILABLE_SUM_FOR_REQUEST <br>VIRTUAL_COUPON_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_SUM_GREATER_THAN_VC_LIMIT_DAILY_AVAILABLE_SUM_FOR_REQUEST <br>VIRTUAL_COUPON_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_SUM_GREATER_THAN_BALANCE_OF_CURRENCY_FOR_VC_REQUEST <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br>VIRTUAL_COUPON_REQUEST_FORBIDDEN_BECAUSE_NOT_EXISTS_VIRTUAL_COUPON_CARD <br>VIRTUAL_COUPON_REQUEST_FORBIDDEN_BECAUSE_VIRTUAL_COUPON_FIX_AND_TERMINAL_PRICE_FORBIDDEN <br>VIRTUAL_COUPON_REQUEST_FORBIDDEN_BECAUSE_NOT_EXISTS_VIRTUAL_COUPON_SERVICES_NO_CURRENCY <br>VIRTUAL_COUPON_REQUEST_FORBIDDEN_BECAUSE_NOT_EXISTS_VIRTUAL_COUPON_SERVICE_IS_CURRENCY <br>FORBIDDEN_BECAUSE_VIRTUAL_COUPON_CODE_TABLE_NUM_IS_ZERO <br>FORBIDDEN_BECAUSE_VIRTUAL_COUPON_CODE_EXPIRATION_DATE_HAS_PASSED <br>FORBIDDEN_BECAUSE_VIRTUAL_COUPON_HAS_NOT_FREE_CODE <br>FORBIDDEN_BECAUSE_VIRTUAL_COUPON_PIN_STATE_IS_BLOCK <br>FORBIDDEN_BECAUSE_VIRTUAL_COUPON_PIN_EXPIRATION_DATE_HAS_PASSED <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>VIRTUAL_COUPON_LIMIT_TYPE_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND <br>VIRTUAL_COUPON_SERVICE_MODEL_NOT_FOUND <br>VIRTUAL_COUPON_LIMIT_MODEL_NOT_FOUND <br>VIRTUAL_COUPON_REQUEST_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Заявка на талон","originalRef":"Заявка на талон"}},"201":{"description":"Created"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br>VIRTUAL_COUPON_REQUEST_FORM_NOT_VALIDATED_BECAUSE_VC_LIMIT_TYPE_ID_IS_EMPTY <br>VIRTUAL_COUPON_REQUEST_FORM_NOT_VALIDATED_BECAUSE_SERVICE_ID_WEB_IS_EMPTY <br>VIRTUAL_COUPON_REQUEST_FORM_NOT_VALIDATED_BECAUSE_NOMINAL_IS_EMPTY <br>VIRTUAL_COUPON_REQUEST_FORM_NOT_VALIDATED_BECAUSE_LIFETIME_IS_EMPTY <br>VIRTUAL_COUPON_REQUEST_FORM_NOT_VALIDATED_BECAUSE_DECLARED_AMOUNT_IS_EMPTY <br>VIRTUAL_COUPON_REQUEST_FORM_NOT_VALIDATED_BECAUSE_VC_HOLDER_NAME_IS_EMPTY <br>VIRTUAL_COUPON_REQUEST_FORM_NOT_VALIDATED_BECAUSE_VC_HOLDER_NAME_EXCEEDED_MAX_VALUE <br>VIRTUAL_COUPON_REQUEST_FORM_NOT_VALIDATED_BECAUSE_SEND_TO_PHONE_NUMBER_IS_EMPTY <br>VIRTUAL_COUPON_REQUEST_FORM_NOT_VALIDATED_BECAUSE_SEND_TO_EMAIL_IS_EMPTY <br>VIRTUAL_COUPON_REQUEST_FORM_NOT_VALIDATED_BECAUSE_SEND_TO_PHONE_NUMBER_DELIVERY_METHOD_NOT_SPECIFIED <br>VIRTUAL_COUPON_REQUEST_FORM_NOT_VALIDATED_BECAUSE_SEND_TO_EMAIL_DELIVERY_METHOD_NOT_SPECIFIED <br>VIRTUAL_COUPON_REQUEST_FORM_NOT_VALIDATED_BECAUSE_PHONE_NUMBER_IS_EMPTY <br>VIRTUAL_COUPON_REQUEST_FORM_NOT_VALIDATED_BECAUSE_EMAIL_IS_EMPTY <br>VIRTUAL_COUPON_REQUEST_FORM_NOT_VALIDATED_BECAUSE_PHONE_NUMBER_EXCEEDED_MAX_VALUE <br>VIRTUAL_COUPON_REQUEST_FORM_NOT_VALIDATED_BECAUSE_EMAIL_EXCEEDED_MAX_VALUE <br>VIRTUAL_COUPON_REQUEST_FORM_NOT_VALIDATED_BECAUSE_PHONE_NUMBER_INVALID_REGEX <br>VIRTUAL_COUPON_REQUEST_FORM_NOT_VALIDATED_BECAUSE_EMAIL_INVALID_REGEX <br>VIRTUAL_COUPON_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_NOT_ALLOW_VC_TERMINAL_PRICE <br>VIRTUAL_COUPON_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_NOT_ALLOW_VC_FIX_PRICE_PRICE <br>VIRTUAL_COUPON_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_SERVICE_ID_WEB_IS_CURRENCY <br>VIRTUAL_COUPON_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_SERVICE_ID_WEB_HAS_NOT_PRICE <br>VIRTUAL_COUPON_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_NOMINAL_GREATER_THAN_VC_MAX_ONE_COUPON_SUM <br>VIRTUAL_COUPON_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_NOMINAL_GREATER_THAN_VC_MAX_ONE_COUPON_VALUE <br>VIRTUAL_COUPON_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_LIFE_TIME_GREATER_THAN_VC_MAX_VALIDITY_DAYS <br>VIRTUAL_COUPON_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_DECLARED_AMOUNT_GREATER_THAN_VC_MAX_SMS_SEND_COUNT <br>VIRTUAL_COUPON_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_DECLARED_AMOUNT_GREATER_THAN_VC_MAX_EMAIL_SEND_COUNT <br>VIRTUAL_COUPON_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_DECLARED_AMOUNT_GREATER_THAN_VC_LIMIT_MONTHLY_AVAILABLE_COUNT_FOR_REQUEST <br>VIRTUAL_COUPON_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_DECLARED_AMOUNT_GREATER_THAN_VC_LIMIT_WEEKLY_AVAILABLE_COUNT_FOR_REQUEST <br>VIRTUAL_COUPON_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_DECLARED_AMOUNT_GREATER_THAN_VC_LIMIT_DAILY_AVAILABLE_COUNT_FOR_REQUEST <br>VIRTUAL_COUPON_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_SUM_GREATER_THAN_VC_LIMIT_MONTHLY_AVAILABLE_SUM_FOR_REQUEST <br>VIRTUAL_COUPON_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_SUM_GREATER_THAN_VC_LIMIT_WEEKLY_AVAILABLE_SUM_FOR_REQUEST <br>VIRTUAL_COUPON_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_SUM_GREATER_THAN_VC_LIMIT_DAILY_AVAILABLE_SUM_FOR_REQUEST <br>VIRTUAL_COUPON_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_SUM_GREATER_THAN_BALANCE_OF_CURRENCY_FOR_VC_REQUEST <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br>VIRTUAL_COUPON_REQUEST_FORBIDDEN_BECAUSE_NOT_EXISTS_VIRTUAL_COUPON_CARD <br>VIRTUAL_COUPON_REQUEST_FORBIDDEN_BECAUSE_VIRTUAL_COUPON_FIX_AND_TERMINAL_PRICE_FORBIDDEN <br>VIRTUAL_COUPON_REQUEST_FORBIDDEN_BECAUSE_NOT_EXISTS_VIRTUAL_COUPON_SERVICES_NO_CURRENCY <br>VIRTUAL_COUPON_REQUEST_FORBIDDEN_BECAUSE_NOT_EXISTS_VIRTUAL_COUPON_SERVICE_IS_CURRENCY <br>FORBIDDEN_BECAUSE_VIRTUAL_COUPON_CODE_TABLE_NUM_IS_ZERO <br>FORBIDDEN_BECAUSE_VIRTUAL_COUPON_CODE_EXPIRATION_DATE_HAS_PASSED <br>FORBIDDEN_BECAUSE_VIRTUAL_COUPON_HAS_NOT_FREE_CODE <br>FORBIDDEN_BECAUSE_VIRTUAL_COUPON_PIN_STATE_IS_BLOCK <br>FORBIDDEN_BECAUSE_VIRTUAL_COUPON_PIN_EXPIRATION_DATE_HAS_PASSED <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>VIRTUAL_COUPON_LIMIT_TYPE_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND <br>VIRTUAL_COUPON_SERVICE_MODEL_NOT_FOUND <br>VIRTUAL_COUPON_LIMIT_MODEL_NOT_FOUND <br>VIRTUAL_COUPON_REQUEST_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/virtual-coupon-requests/block-group-coupons":{"post":{"tags":["Обработчик запросов по заявке на талон"],"summary":"Блокировать группу талонов","description":"Доступ к талону должен быть разрешен, поле allowVc = true <br>(поле allowVc можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"blockGroupCouponsUsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"form","description":"form","required":true,"schema":{"$ref":"#/definitions/Форма создание заявки на блокировку гуппы талонов","originalRef":"Форма создание заявки на блокировку гуппы талонов"}}],"responses":{"200":{"description":"OK"},"201":{"description":"Created"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br>BLOCK_GROUP_COUPONS_FORM_NOT_VALIDATED_BECAUSE_GROUP_COUPONS_ID_IS_EMPTY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br>BLOCK_GROUP_COUPONS_FORBIDDEN_BECAUSE_NOT_EXISTS_VIRTUAL_COUPON_REQUESTS_GEN_AND_NOT_REJECTED <br>BLOCK_GROUP_COUPONS_FORBIDDEN_BECAUSE_EXISTS_REQUEST_FOR_BLOCKING <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>GROUP_COUPONS_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK"},"201":{"description":"Created"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br>BLOCK_GROUP_COUPONS_FORM_NOT_VALIDATED_BECAUSE_GROUP_COUPONS_ID_IS_EMPTY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br>BLOCK_GROUP_COUPONS_FORBIDDEN_BECAUSE_NOT_EXISTS_VIRTUAL_COUPON_REQUESTS_GEN_AND_NOT_REJECTED <br>BLOCK_GROUP_COUPONS_FORBIDDEN_BECAUSE_EXISTS_REQUEST_FOR_BLOCKING <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>GROUP_COUPONS_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/virtual-coupon-requests/block-virtual-coupon":{"post":{"tags":["Обработчик запросов по заявке на талон"],"summary":"Блокировать талон","description":"Доступ к талону должен быть разрешен, поле allowVc = true <br>(поле allowVc можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"blockVirtualCouponUsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"form","description":"form","required":true,"schema":{"$ref":"#/definitions/Форма создание заявки на блокировку талона","originalRef":"Форма создание заявки на блокировку талона"}}],"responses":{"200":{"description":"OK"},"201":{"description":"Created"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br>BLOCK_VIRTUAL_COUPON_FORM_NOT_VALIDATED_BECAUSE_VC_GUID_IS_EMPTY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br>BLOCK_VIRTUAL_COUPON_FORBIDDEN_BECAUSE_VIRTUAL_COUPON_STATE_IS_NOT_WORK <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>VIRTUAL_COUPON_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK"},"201":{"description":"Created"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br>BLOCK_VIRTUAL_COUPON_FORM_NOT_VALIDATED_BECAUSE_VC_GUID_IS_EMPTY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br>BLOCK_VIRTUAL_COUPON_FORBIDDEN_BECAUSE_VIRTUAL_COUPON_STATE_IS_NOT_WORK <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>VIRTUAL_COUPON_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/virtual-coupon-requests/full":{"get":{"tags":["Обработчик запросов по заявке на талон"],"summary":"Получить страницу заявок на талоны с полной информацией","description":"Доступ к талону должен быть разрешен, поле allowVc = true <br>(поле allowVc можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"vcRequestsFullUsingGET","produces":["*/*"],"parameters":[{"name":"beginDateFilter","in":"query","description":"Фильтр по дате начала выборки (Период с) <br>фильтруется по дате создания, поле dateOf","required":false,"type":"string","format":"date-time","x-example":"2022-01-01T00:00:00"},{"name":"endDateFilter","in":"query","description":"Фильтр по дате конца выборки (Период с) <br>фильтруется по дате создания, поле dateOf","required":false,"type":"string","format":"date-time","x-example":"2022-01-31T23:59:59"},{"name":"isOrderedFilter","in":"query","description":"Фильтр по подтверждению пользователем заказа на талон <br>если isOrderedFilter = false, то выведутся заявки, которые без подтреждения пользователем заказа на талон <br>если isOrderedFilter = true, то выведутся заявки, которые подтреждены пользователем заказа на талон","required":false,"type":"boolean"},{"name":"page","in":"query","description":"Номер страницы в запросе (номер страницы ведется с нуля)","required":false,"type":"integer","format":"int32"},{"name":"rqStateIdFilterList","in":"query","description":"Фильтр по идентификатору состояния заявки, поле rqStateId <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех состояний заявки можно получить в запросе '/rq-states' поле rqStateId <br>(описание запроса в Обработчик запросов по состоянию заявки)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"size","in":"query","description":"Количество элементов на страницу в запросе","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Заявка на талон с полной информацией»","originalRef":"Страница«Заявка на талон с полной информацией»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>RQ_STATE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>GROUP_COUPONS_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>VIRTUAL_COUPON_LIMIT_TYPE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Заявка на талон с полной информацией»","originalRef":"Страница«Заявка на талон с полной информацией»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>RQ_STATE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>GROUP_COUPONS_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>VIRTUAL_COUPON_LIMIT_TYPE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/virtual-coupon-requests/resends-group-coupons":{"post":{"tags":["Обработчик запросов по заявке на талон"],"summary":"Отправить заявку на отправку повторно группы талонов","description":"Доступ к талону должен быть разрешен, поле allowVc = true <br>номер таблицы кодов для талона не должен равнятся нулю, поле vcCodeTableNum != 0 <br>и срок действия кодов для талона не должен быть просрочен, поле vcCodeExpirationDate > now <br>не должен быть заблокирован PIN3 для талона, поле vcPinStateIsBlock != true <br>и срок действия PIN3 для талона не должен быть просрочен, поле vcPinExpirationDate > now <br>(поля allowVc, vcCodeTableNum, vcCodeExpirationDate, vcPinStateIsBlock, vcPinExpirationDate <br>можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"resendsGroupCouponsUsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"form","description":"form","required":true,"schema":{"$ref":"#/definitions/Форма создание заявки на отправку повторно группы талонов","originalRef":"Форма создание заявки на отправку повторно группы талонов"}}],"responses":{"200":{"description":"OK"},"201":{"description":"Created"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br>RESENDS_GROUP_COUPONS_FORM_NOT_VALIDATED_BECAUSE_GROUP_COUPONS_ID_IS_EMPTY <br>RESENDS_GROUP_COUPONS_FORM_NOT_VALIDATED_BECAUSE_CODE_NUMBER_ID_IS_EMPTY <br>RESENDS_GROUP_COUPONS_FORM_NOT_VALIDATED_BECAUSE_SECURITY_CODE_ID_IS_EMPTY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br>FORBIDDEN_BECAUSE_VIRTUAL_COUPON_CODE_TABLE_NUM_IS_ZERO <br>FORBIDDEN_BECAUSE_VIRTUAL_COUPON_CODE_EXPIRATION_DATE_HAS_PASSED <br>FORBIDDEN_BECAUSE_VIRTUAL_COUPON_PIN_STATE_IS_BLOCK <br>FORBIDDEN_BECAUSE_VIRTUAL_COUPON_PIN_EXPIRATION_DATE_HAS_PASSED <br>RESENDS_GROUP_COUPONS_FORBIDDEN_BECAUSE_NOT_EXISTS_VIRTUAL_COUPON_REQUEST_GENERATION_AND_ACCEPTED <br>FORBIDDEN_BECAUSE_NOT_EXISTS_VIRTUAL_COUPON_RESERVE_CODE_NUMBER <br>FORBIDDEN_BECAUSE_CODE_NUMBER_DOES_NOT_MATCH_RESERVED_CODE_NUMBER_OR_CODE_NUMBER_EXPIRED <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>GROUP_COUPONS_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK"},"201":{"description":"Created"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br>RESENDS_GROUP_COUPONS_FORM_NOT_VALIDATED_BECAUSE_GROUP_COUPONS_ID_IS_EMPTY <br>RESENDS_GROUP_COUPONS_FORM_NOT_VALIDATED_BECAUSE_CODE_NUMBER_ID_IS_EMPTY <br>RESENDS_GROUP_COUPONS_FORM_NOT_VALIDATED_BECAUSE_SECURITY_CODE_ID_IS_EMPTY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br>FORBIDDEN_BECAUSE_VIRTUAL_COUPON_CODE_TABLE_NUM_IS_ZERO <br>FORBIDDEN_BECAUSE_VIRTUAL_COUPON_CODE_EXPIRATION_DATE_HAS_PASSED <br>FORBIDDEN_BECAUSE_VIRTUAL_COUPON_PIN_STATE_IS_BLOCK <br>FORBIDDEN_BECAUSE_VIRTUAL_COUPON_PIN_EXPIRATION_DATE_HAS_PASSED <br>RESENDS_GROUP_COUPONS_FORBIDDEN_BECAUSE_NOT_EXISTS_VIRTUAL_COUPON_REQUEST_GENERATION_AND_ACCEPTED <br>FORBIDDEN_BECAUSE_NOT_EXISTS_VIRTUAL_COUPON_RESERVE_CODE_NUMBER <br>FORBIDDEN_BECAUSE_CODE_NUMBER_DOES_NOT_MATCH_RESERVED_CODE_NUMBER_OR_CODE_NUMBER_EXPIRED <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>GROUP_COUPONS_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/virtual-coupon-requests/resends-virtual-coupon":{"post":{"tags":["Обработчик запросов по заявке на талон"],"summary":"Отправить заявку на отправку повторно талона","description":"Доступ к талону должен быть разрешен, поле allowVc = true <br>номер таблицы кодов для талона не должен равнятся нулю, поле vcCodeTableNum != 0 <br>и срок действия кодов для талона не должен быть просрочен, поле vcCodeExpirationDate > now <br>не должен быть заблокирован PIN3 для талона, поле vcPinStateIsBlock != true <br>и срок действия PIN3 для талона не должен быть просрочен, поле vcPinExpirationDate > now <br>(поля allowVc, vcCodeTableNum, vcCodeExpirationDate, vcPinStateIsBlock, vcPinExpirationDate <br>можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"resendsVirtualCouponUsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"form","description":"form","required":true,"schema":{"$ref":"#/definitions/Форма создание заявки на отправку повторно талона","originalRef":"Форма создание заявки на отправку повторно талона"}}],"responses":{"200":{"description":"OK"},"201":{"description":"Created"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br>RESENDS_VIRTUAL_COUPON_FORM_NOT_VALIDATED_BECAUSE_VC_GUID_IS_EMPTY <br>RESENDS_VIRTUAL_COUPON_FORM_NOT_VALIDATED_BECAUSE_CODE_NUMBER_ID_IS_EMPTY <br>RESENDS_VIRTUAL_COUPON_FORM_NOT_VALIDATED_BECAUSE_SECURITY_CODE_ID_IS_EMPTY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br>FORBIDDEN_BECAUSE_VIRTUAL_COUPON_CODE_TABLE_NUM_IS_ZERO <br>FORBIDDEN_BECAUSE_VIRTUAL_COUPON_CODE_EXPIRATION_DATE_HAS_PASSED <br>FORBIDDEN_BECAUSE_VIRTUAL_COUPON_PIN_STATE_IS_BLOCK <br>FORBIDDEN_BECAUSE_VIRTUAL_COUPON_PIN_EXPIRATION_DATE_HAS_PASSED <br>RESENDS_VIRTUAL_COUPON_FORBIDDEN_BECAUSE_VIRTUAL_COUPON_STATE_IS_NOT_WORK <br>FORBIDDEN_BECAUSE_NOT_EXISTS_VIRTUAL_COUPON_RESERVE_CODE_NUMBER <br>FORBIDDEN_BECAUSE_CODE_NUMBER_DOES_NOT_MATCH_RESERVED_CODE_NUMBER_OR_CODE_NUMBER_EXPIRED <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>VIRTUAL_COUPON_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK"},"201":{"description":"Created"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br>RESENDS_VIRTUAL_COUPON_FORM_NOT_VALIDATED_BECAUSE_VC_GUID_IS_EMPTY <br>RESENDS_VIRTUAL_COUPON_FORM_NOT_VALIDATED_BECAUSE_CODE_NUMBER_ID_IS_EMPTY <br>RESENDS_VIRTUAL_COUPON_FORM_NOT_VALIDATED_BECAUSE_SECURITY_CODE_ID_IS_EMPTY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br>FORBIDDEN_BECAUSE_VIRTUAL_COUPON_CODE_TABLE_NUM_IS_ZERO <br>FORBIDDEN_BECAUSE_VIRTUAL_COUPON_CODE_EXPIRATION_DATE_HAS_PASSED <br>FORBIDDEN_BECAUSE_VIRTUAL_COUPON_PIN_STATE_IS_BLOCK <br>FORBIDDEN_BECAUSE_VIRTUAL_COUPON_PIN_EXPIRATION_DATE_HAS_PASSED <br>RESENDS_VIRTUAL_COUPON_FORBIDDEN_BECAUSE_VIRTUAL_COUPON_STATE_IS_NOT_WORK <br>FORBIDDEN_BECAUSE_NOT_EXISTS_VIRTUAL_COUPON_RESERVE_CODE_NUMBER <br>FORBIDDEN_BECAUSE_CODE_NUMBER_DOES_NOT_MATCH_RESERVED_CODE_NUMBER_OR_CODE_NUMBER_EXPIRED <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>VIRTUAL_COUPON_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/virtual-coupon-requests/send":{"post":{"tags":["Обработчик запросов по заявке на талон"],"summary":"Отправить заявки на талоны","description":"Доступ к талону должен быть разрешен, поле allowVc = true <br>номер таблицы кодов для талона не должен равнятся нулю, поле vcCodeTableNum != 0 <br>и срок действия кодов для талона не должен быть просрочен, поле vcCodeExpirationDate > now <br>не должен быть заблокирован PIN3 для талона, поле vcPinStateIsBlock != true <br>и срок действия PIN3 для талона не должен быть просрочен, поле vcPinExpirationDate > now <br>также должны быть не заказанные заявки на талоны, <br>их можно получить в запросе '/virtual-coupon-requests?isOrderedFilter=false' <br>или в запросе '/virtual-coupon-requests/full?isOrderedFilter=false' <br>(поля allowVc, vcCodeTableNum, vcCodeExpirationDate, vcPinStateIsBlock, vcPinExpirationDate <br>можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"sendVcRequestsUsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"form","description":"form","required":true,"schema":{"$ref":"#/definitions/Форма отправки заявок на талоны","originalRef":"Форма отправки заявок на талоны"}}],"responses":{"200":{"description":"OK"},"201":{"description":"Created"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br>SEND_VIRTUAL_COUPON_REQUESTS_FORM_NOT_VALIDATED_BECAUSE_CODE_NUMBER_IS_EMPTY <br>SEND_VIRTUAL_COUPON_REQUESTS_FORM_NOT_VALIDATED_BECAUSE_SECURITY_CODE_IS_EMPTY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br>FORBIDDEN_BECAUSE_VIRTUAL_COUPON_CODE_TABLE_NUM_IS_ZERO <br>FORBIDDEN_BECAUSE_VIRTUAL_COUPON_CODE_EXPIRATION_DATE_HAS_PASSED <br>FORBIDDEN_BECAUSE_VIRTUAL_COUPON_PIN_STATE_IS_BLOCK <br>FORBIDDEN_BECAUSE_VIRTUAL_COUPON_PIN_EXPIRATION_DATE_HAS_PASSED <br>SEND_VIRTUAL_COUPON_REQUEST_FORBIDDEN_BECAUSE_NOT_EXISTS_VIRTUAL_COUPON_REQUESTS_IS_NOT_ORDERED <br>FORBIDDEN_BECAUSE_NOT_EXISTS_VIRTUAL_COUPON_RESERVE_CODE_NUMBER <br>FORBIDDEN_BECAUSE_CODE_NUMBER_DOES_NOT_MATCH_RESERVED_CODE_NUMBER_OR_CODE_NUMBER_EXPIRED <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK"},"201":{"description":"Created"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br>SEND_VIRTUAL_COUPON_REQUESTS_FORM_NOT_VALIDATED_BECAUSE_CODE_NUMBER_IS_EMPTY <br>SEND_VIRTUAL_COUPON_REQUESTS_FORM_NOT_VALIDATED_BECAUSE_SECURITY_CODE_IS_EMPTY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br>FORBIDDEN_BECAUSE_VIRTUAL_COUPON_CODE_TABLE_NUM_IS_ZERO <br>FORBIDDEN_BECAUSE_VIRTUAL_COUPON_CODE_EXPIRATION_DATE_HAS_PASSED <br>FORBIDDEN_BECAUSE_VIRTUAL_COUPON_PIN_STATE_IS_BLOCK <br>FORBIDDEN_BECAUSE_VIRTUAL_COUPON_PIN_EXPIRATION_DATE_HAS_PASSED <br>SEND_VIRTUAL_COUPON_REQUEST_FORBIDDEN_BECAUSE_NOT_EXISTS_VIRTUAL_COUPON_REQUESTS_IS_NOT_ORDERED <br>FORBIDDEN_BECAUSE_NOT_EXISTS_VIRTUAL_COUPON_RESERVE_CODE_NUMBER <br>FORBIDDEN_BECAUSE_CODE_NUMBER_DOES_NOT_MATCH_RESERVED_CODE_NUMBER_OR_CODE_NUMBER_EXPIRED <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/virtual-coupon-requests/{requestId}":{"get":{"tags":["Обработчик запросов по заявке на талон"],"summary":"Получить заявку на талон","description":"Доступ к талону должен быть разрешен, поле allowVc = true <br>(поле allowVc можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"vcRequestUsingGET","produces":["*/*"],"parameters":[{"name":"requestId","in":"path","description":"Идентификатор заявки","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Заявка на талон","originalRef":"Заявка на талон"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>VIRTUAL_COUPON_REQUEST_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Заявка на талон","originalRef":"Заявка на талон"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>VIRTUAL_COUPON_REQUEST_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]},"delete":{"tags":["Обработчик запросов по заявке на талон"],"summary":"Удалить заявку на талон","description":"Доступ к талону должен быть разрешен, поле allowVc = true <br>(поле allowVc можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки) <br>заявки на талоны, которые можно удалить <br>(не подтвержден пользователем заказ на талоны, поле isOrdered = false) <br>можно получить в запросе '/virtual-coupon-requests?isOrderedFilter=false' <br>или в запросе '/virtual-coupon-requests/full?isOrderedFilter=false' ","operationId":"deleteVcRequestUsingDELETE","produces":["*/*"],"parameters":[{"name":"requestId","in":"path","description":"requestId","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK"},"204":{"description":"No Content"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br>VIRTUAL_COUPON_REQUEST_COULD_NOT_BE_DELETED_BECAUSE_REQUEST_IS_ORDERED <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>VIRTUAL_COUPON_REQUEST_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK"},"204":{"description":"No Content"},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br>VIRTUAL_COUPON_REQUEST_COULD_NOT_BE_DELETED_BECAUSE_REQUEST_IS_ORDERED <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>VIRTUAL_COUPON_REQUEST_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/virtual-coupon-requests/{requestId}/full":{"get":{"tags":["Обработчик запросов по заявке на талон"],"summary":"Получить заявку на талон с полной информацией","description":"Доступ к талону должен быть разрешен, поле allowVc = true <br>(поле allowVc можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"vcRequestFullUsingGET","produces":["*/*"],"parameters":[{"name":"requestId","in":"path","description":"Идентификатор заявки","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Заявка на талон с полной информацией","originalRef":"Заявка на талон с полной информацией"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>VIRTUAL_COUPON_REQUEST_MODEL_NOT_FOUND <br>RQ_STATE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>GROUP_COUPONS_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>VIRTUAL_COUPON_LIMIT_TYPE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Заявка на талон с полной информацией","originalRef":"Заявка на талон с полной информацией"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>VIRTUAL_COUPON_REQUEST_MODEL_NOT_FOUND <br>RQ_STATE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>GROUP_COUPONS_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>VIRTUAL_COUPON_LIMIT_TYPE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/virtual-coupon-reserve-code-number":{"get":{"tags":["Обработчик запросов по номеру кода для отправки заявок на талоны"],"summary":"Получить зарезервированый номер кода для отправки заявок на талоны","description":"Номер кода можно использовать один раз <br>Доступ к талону должен быть разрешен, поле allowVc = true <br>(поле allowVc можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"reserveCodeNumberUsingGET","produces":["*/*"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Модель номера кода для отправки заявок на талоны","originalRef":"Модель номера кода для отправки заявок на талоны"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br>FORBIDDEN_BECAUSE_VIRTUAL_COUPON_CODE_TABLE_NUM_IS_ZERO <br>FORBIDDEN_BECAUSE_VIRTUAL_COUPON_CODE_EXPIRATION_DATE_HAS_PASSED <br>FORBIDDEN_BECAUSE_VIRTUAL_COUPON_HAS_NOT_FREE_CODE <br>FORBIDDEN_BECAUSE_VIRTUAL_COUPON_PIN_STATE_IS_BLOCK <br>FORBIDDEN_BECAUSE_VIRTUAL_COUPON_PIN_EXPIRATION_DATE_HAS_PASSED <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Модель номера кода для отправки заявок на талоны","originalRef":"Модель номера кода для отправки заявок на талоны"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br>FORBIDDEN_BECAUSE_VIRTUAL_COUPON_CODE_TABLE_NUM_IS_ZERO <br>FORBIDDEN_BECAUSE_VIRTUAL_COUPON_CODE_EXPIRATION_DATE_HAS_PASSED <br>FORBIDDEN_BECAUSE_VIRTUAL_COUPON_HAS_NOT_FREE_CODE <br>FORBIDDEN_BECAUSE_VIRTUAL_COUPON_PIN_STATE_IS_BLOCK <br>FORBIDDEN_BECAUSE_VIRTUAL_COUPON_PIN_EXPIRATION_DATE_HAS_PASSED <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/virtual-coupon-services":{"get":{"tags":["Обработчик запросов по услуге талона"],"summary":"Получить список услуг талона","description":"Доступ к талону должен быть разрешен, поле allowVc = true <br>(поле allowVc можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"vcServicesUsingGET","produces":["*/*"],"parameters":[{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"serviceIsCurrencyFilter","in":"query","description":"Фильтр по признаку валюты у услуги <br>если serviceIsCurrencyFilter = false, то услуга не является валютой <br>если serviceIsCurrencyFilter = true, то услуга является валютой","required":false,"type":"boolean"}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Услуга талона","originalRef":"Услуга талона"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Услуга талона","originalRef":"Услуга талона"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/virtual-coupon-services/full":{"get":{"tags":["Обработчик запросов по услуге талона"],"summary":"Получить список услуг талона с полнной информацией","description":"Доступ к талону должен быть разрешен, поле allowVc = true <br>(поле allowVc можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"vcServicesFullUsingGET","produces":["*/*"],"parameters":[{"name":"serviceIdWebFilterList","in":"query","description":"Фильтр по идентификатору услуги, поле serviceIdWeb <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех услуг можно получить в запросе '/services' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"serviceIsCurrencyFilter","in":"query","description":"Фильтр по признаку валюты у услуги <br>если serviceIsCurrencyFilter = false, то услуга не является валютой <br>если serviceIsCurrencyFilter = true, то услуга является валютой","required":false,"type":"boolean"}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Услуга талона с полной информацией","originalRef":"Услуга талона с полной информацией"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Услуга талона с полной информацией","originalRef":"Услуга талона с полной информацией"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/virtual-coupon-services/{serviceIdWeb}":{"get":{"tags":["Обработчик запросов по услуге талона"],"summary":"Получить услугу талона","description":"Доступ к талону должен быть разрешен, поле allowVc = true <br>(поле allowVc можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"vcServiceUsingGET","produces":["*/*"],"parameters":[{"name":"serviceIdWeb","in":"path","description":"Идентификатор услуги","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Услуга талона","originalRef":"Услуга талона"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND <br>VIRTUAL_COUPON_SERVICE_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Услуга талона","originalRef":"Услуга талона"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND <br>VIRTUAL_COUPON_SERVICE_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/virtual-coupon-services/{serviceIdWeb}/full":{"get":{"tags":["Обработчик запросов по услуге талона"],"summary":"Получить услугу талона с полнной информацией","description":"Доступ к талону должен быть разрешен, поле allowVc = true <br>(поле allowVc можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"vcServiceFullUsingGET","produces":["*/*"],"parameters":[{"name":"serviceIdWeb","in":"path","description":"Идентификатор услуги","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Услуга талона с полной информацией","originalRef":"Услуга талона с полной информацией"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND <br>VIRTUAL_COUPON_SERVICE_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Услуга талона с полной информацией","originalRef":"Услуга талона с полной информацией"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>SERVICE_MODEL_NOT_FOUND <br>VIRTUAL_COUPON_SERVICE_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/virtual-coupon-states":{"get":{"tags":["Обработчик запросов по состоянию талона"],"summary":"Получить список состояний талона","operationId":"vcStatesUsingGET","produces":["*/*"],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Состояния талона","originalRef":"Состояния талона"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"responsesObject":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Состояния талона","originalRef":"Состояния талона"}}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/virtual-coupon-states/{vcStateId}":{"get":{"tags":["Обработчик запросов по состоянию талона"],"summary":"Получить состояние талона","operationId":"vcStateUsingGET","produces":["*/*"],"parameters":[{"name":"vcStateId","in":"path","description":"Идентификатор состояния талона","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Состояния талона","originalRef":"Состояния талона"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>VIRTUAL_COUPON_STATE_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Состояния талона","originalRef":"Состояния талона"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Forbidden"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>VIRTUAL_COUPON_STATE_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/virtual-coupons":{"get":{"tags":["Обработчик запросов по талону"],"summary":"Получить страницу талонов","description":"Доступ к талону должен быть разрешен, поле allowVc = true <br>(поле allowVc можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"virtualCouponsUsingGET","produces":["*/*"],"parameters":[{"name":"groupCouponsIdFilter","in":"query","description":"Фильтр по идентификатору группы талона, поле groupCouponsId","required":false,"type":"string"},{"name":"page","in":"query","description":"Номер страницы в запросе (номер страницы ведется с нуля)","required":false,"type":"integer","format":"int32"},{"name":"size","in":"query","description":"Количество элементов на страницу в запросе","required":false,"type":"integer","format":"int32"},{"name":"vcStateIdFilterList","in":"query","description":"Фильтр по идентификатору состояния талона, поле vcStateId <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех состояний талона можно получить в запросе '/virtual-coupon-states' поле vcStateId <br>(описание запроса в Обработчике запросов по состоянию талона)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Талон»","originalRef":"Страница«Талон»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Талон»","originalRef":"Страница«Талон»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/virtual-coupons/full":{"get":{"tags":["Обработчик запросов по талону"],"summary":"Получить страницу талонов с полной информацией","description":"Доступ к талону должен быть разрешен, поле allowVc = true <br>(поле allowVc можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"virtualCouponsFullUsingGET","produces":["*/*"],"parameters":[{"name":"groupCouponsIdFilter","in":"query","description":"Фильтр по идентификатору группы талона, поле groupCouponsId","required":false,"type":"string"},{"name":"page","in":"query","description":"Номер страницы в запросе (номер страницы ведется с нуля)","required":false,"type":"integer","format":"int32"},{"name":"size","in":"query","description":"Количество элементов на страницу в запросе","required":false,"type":"integer","format":"int32"},{"name":"vcStateIdFilterList","in":"query","description":"Фильтр по идентификатору состояния талона, поле vcStateId <br>можно указать список идентификаторов, по которому будет фильтрация <br>список всех состояний талона можно получить в запросе '/virtual-coupon-states' поле vcStateId <br>(описание запроса в Обработчике запросов по состоянию талона)","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Талон с полной информацией»","originalRef":"Страница«Талон с полной информацией»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>VIRTUAL_COUPON_STATE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>GROUP_COUPONS_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>VIRTUAL_COUPON_LIMIT_TYPE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Страница«Талон с полной информацией»","originalRef":"Страница«Талон с полной информацией»"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>VIRTUAL_COUPON_STATE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>GROUP_COUPONS_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>VIRTUAL_COUPON_LIMIT_TYPE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/virtual-coupons/{vcGuid}":{"get":{"tags":["Обработчик запросов по талону"],"summary":"Получить талон","description":"Доступ к талону должен быть разрешен, поле allowVc = true <br>(поле allowVc можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"virtualCouponUsingGET","produces":["*/*"],"parameters":[{"name":"vcGuid","in":"path","description":"Идентификатор талона","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Талон","originalRef":"Талон"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>VIRTUAL_COUPON_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Талон","originalRef":"Талон"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>VIRTUAL_COUPON_MODEL_NOT_FOUND <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}},"/virtual-coupons/{vcGuid}/full":{"get":{"tags":["Обработчик запросов по талону"],"summary":"Получить талон с полной информацией","description":"Доступ к талону должен быть разрешен, поле allowVc = true <br>(поле allowVc можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)","operationId":"virtualCouponFullUsingGET","produces":["*/*"],"parameters":[{"name":"vcGuid","in":"path","description":"Идентификатор талона","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Талон с полной информацией","originalRef":"Талон с полной информацией"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>VIRTUAL_COUPON_MODEL_NOT_FOUND <br>VIRTUAL_COUPON_STATE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>GROUP_COUPONS_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>VIRTUAL_COUPON_LIMIT_TYPE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"responsesObject":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Талон с полной информацией","originalRef":"Талон с полной информацией"}},"400":{"description":"Плохой запрос (Bad Request (400)) <br>Список кодов API ошибок: <br><br>NO_ACCESS_TOKEN_HEADER_KEY <br>VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"401":{"description":"Неавторизованный (Unauthorized (401)) <br>Список кодов API ошибок: <br><br>ACCESS_TOKEN_INVALID <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"403":{"description":"Запрещенный (Forbidden (403)) <br>Список кодов API ошибок: <br><br>FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER <br>FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER <br>VIRTUAL_COUPON_FORBIDDEN <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"},"404":{"description":"Не найден (Not Found (404)) <br>Список кодов API ошибок: <br><br>USER_SETTING_MODEL_NOT_FOUND <br>VIRTUAL_COUPON_MODEL_NOT_FOUND <br>VIRTUAL_COUPON_STATE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>GROUP_COUPONS_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>SERVICE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br>VIRTUAL_COUPON_LIMIT_TYPE_MODEL_NOT_FOUND - ошибка присоединения блока данных, повтороте запрос <br><br>(получить API ошибку можно в запросе '/api-errors/{apiErrorCode}' <br>описание в Обработчике запросов по API ошибке <br>и в разделе Models > Тело ошибок для ответа)"}},"security":[{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":["global"]}]}}},"securityDefinitions":{"Токен доступа, получить в запросе '/auth/login' или в запросе '/auth/refresh' поле accessToken (описание в Обработчике запросов по авторизации и в разделе Models > Токены авторизации)":{"type":"apiKey","name":"accessToken","in":"header"}},"definitions":{"LocalTime":{"type":"object","properties":{"hour":{"type":"integer","format":"int32"},"minute":{"type":"integer","format":"int32"},"nano":{"type":"integer","format":"int32"},"second":{"type":"integer","format":"int32"}},"title":"LocalTime"},"Вид лимита для кошелька":{"type":"object","properties":{"limitKindId":{"type":"integer","format":"int32","description":"Идентификатор вида лимита для кошелька"},"limitKindName":{"type":"string","description":"Название вида лимита для кошелька"},"limitKindShortName":{"type":"string","description":"Короткое название вида лимита для кошелька"},"limitKindShortWordId":{"type":"integer","format":"int32","description":"Идентификатор короткого названия вида лимита для кошелька"},"limitKindWordId":{"type":"integer","format":"int32","description":"Идентификатор названия вида лимита для кошелька"}},"title":"Вид лимита для кошелька"},"Вид онлайн лимита для онлайн карты":{"type":"object","properties":{"onlLimitKindId":{"type":"integer","format":"int32","description":"Идентификатор вида онлайн лимита для онлайн карты"},"onlLimitKindName":{"type":"string","description":"Название вида онлайн лимита для онлайн карты"},"onlLimitKindShortName":{"type":"string","description":"Короткое название вида онлайн лимита для онлайн карты"},"onlLimitKindShortWordId":{"type":"integer","format":"int32","description":"Идентификатор короткого названия вида онлайн лимита для онлайн карты"},"onlLimitKindWordId":{"type":"integer","format":"int32","description":"Идентификатор названия вида онлайн лимита для онлайн карты"}},"title":"Вид онлайн лимита для онлайн карты"},"Группа талонов":{"type":"object","properties":{"dateExpiration":{"type":"string","format":"date-time","description":"Срок использования"},"dateOrder":{"type":"string","format":"date-time","description":"Дата заказа"},"declaredAmount":{"type":"integer","format":"int32","description":"Количество талонов"},"email":{"type":"string","description":"Адрес электронной почты <br>если не получать сообщения на адрес электронной почты (sendToEmail = false), <br>то адрес электронной почты будет пустой (email = null)"},"existsCreatedAndAcceptedRequest":{"type":"boolean","description":"Существует созданная и принятая заявка (для отправки повторно группы талонов) <br>если existsCreatedAndAcceptedRequest = false, <br>то нет созданной и принятой заявки (для отправки повторно группы талонов) <br>если existsCreatedAndAcceptedRequest = true, <br>то есть созданная и принятая заявка (для отправки повторно группы талонов)"},"existsCreatedAndNotRejectedRequest":{"type":"boolean","description":"Существует созданная и не отклоненная заявка (для блокировки группы талонов) <br>если existsCreatedAndNotRejectedRequest = false, <br>то нет созданной и не отклоненной заявки (для блокировки группы талонов) <br>если existsCreatedAndNotRejectedRequest = true, <br>то есть созданная и не отклоненная заявка (для блокировки группы талонов)"},"existsRequestForBlocking":{"type":"boolean","description":"Существует заявка на блокировку данной группы талонов <br>если existsRequestForBlocking = false, то нет заявок на блокировку данной группы талонов<br>если existsRequestForBlocking = true, то есть заявка на блокировку данной группы талонов"},"fixPrice":{"type":"number","description":"Фиксированная цена"},"groupCouponsId":{"type":"string","description":"Идентификатор группы талонов"},"nominal":{"type":"integer","format":"int32","description":"Номинал талона"},"phoneNumber":{"type":"string","description":"Номер мобильного телефона <br>если не получать на мобильный телефон (sendToPhone = false), <br>то мобильный телефон будет пустой (phoneNumber = null)"},"sendToEmail":{"type":"boolean","description":"Получить сообщение на адрес электронной почты <br>если sendToPhone = false, то не получать сообщения на адрес электронной почты <br>если sendToPhone = true, то получать сообщения на адрес электронной почты"},"sendToPhone":{"type":"boolean","description":"Получить сообщение на мобильный телефон <br>если sendToPhone = false, то не получать на мобильный телефон сообщение <br>если sendToPhone = true, то получать на мобильный телефон сообщение"},"service":{"description":"Услуга","$ref":"#/definitions/Обьект идентификатора услуги","originalRef":"Обьект идентификатора услуги"},"vcHolderName":{"type":"string","description":"Имя держателя талона"},"vcLimitType":{"description":"Тип лимита талона","$ref":"#/definitions/Обьект идентификатора типа лимита талона","originalRef":"Обьект идентификатора типа лимита талона"}},"title":"Группа талонов"},"Группа талонов с полной информацией":{"type":"object","properties":{"dateExpiration":{"type":"string","format":"date-time","description":"Срок использования"},"dateOrder":{"type":"string","format":"date-time","description":"Дата заказа"},"declaredAmount":{"type":"integer","format":"int32","description":"Количество талонов"},"email":{"type":"string","description":"Адрес электронной почты <br>если не получать сообщения на адрес электронной почты (sendToEmail = false), <br>то адрес электронной почты будет пустой (email = null)"},"existsCreatedAndAcceptedRequest":{"type":"boolean","description":"Существует созданная и принятая заявка (для отправки повторно группы талонов) <br>если existsCreatedAndAcceptedRequest = false, <br>то нет созданной и принятой заявки (для отправки повторно группы талонов) <br>если existsCreatedAndAcceptedRequest = true, <br>то есть созданная и принятая заявка (для отправки повторно группы талонов)"},"existsCreatedAndNotRejectedRequest":{"type":"boolean","description":"Существует созданная и не отклоненная заявка (для блокировки группы талонов) <br>если existsCreatedAndNotRejectedRequest = false, <br>то нет созданной и не отклоненной заявки (для блокировки группы талонов) <br>если existsCreatedAndNotRejectedRequest = true, <br>то есть созданная и не отклоненная заявка (для блокировки группы талонов)"},"existsRequestForBlocking":{"type":"boolean","description":"Существует заявка на блокировку данной группы талонов <br>если existsRequestForBlocking = false, то нет заявок на блокировку данной группы талонов<br>если existsRequestForBlocking = true, то есть заявка на блокировку данной группы талонов"},"fixPrice":{"type":"number","description":"Фиксированная цена"},"groupCouponsId":{"type":"string","description":"Идентификатор группы талонов"},"nominal":{"type":"integer","format":"int32","description":"Номинал талона"},"phoneNumber":{"type":"string","description":"Номер мобильного телефона <br>если не получать на мобильный телефон (sendToPhone = false), <br>то мобильный телефон будет пустой (phoneNumber = null)"},"sendToEmail":{"type":"boolean","description":"Получить сообщение на адрес электронной почты <br>если sendToPhone = false, то не получать сообщения на адрес электронной почты <br>если sendToPhone = true, то получать сообщения на адрес электронной почты"},"sendToPhone":{"type":"boolean","description":"Получить сообщение на мобильный телефон <br>если sendToPhone = false, то не получать на мобильный телефон сообщение <br>если sendToPhone = true, то получать на мобильный телефон сообщение"},"service":{"description":"Услуга","$ref":"#/definitions/Услуга","originalRef":"Услуга"},"vcHolderName":{"type":"string","description":"Имя держателя талона"},"vcLimitType":{"description":"Тип лимита талона","$ref":"#/definitions/Тип лимита талона","originalRef":"Тип лимита талона"}},"title":"Группа талонов с полной информацией"},"День расписания для онлайн карты":{"type":"object","properties":{"allow":{"type":"boolean","description":"Разрешение на обслуживание в данные день <br>если allow = false, то обслуживание в данный день заблокировано <br>если allow = true, то обслуживание в данный день разблокировано"},"dayId":{"type":"integer","format":"int32","description":"Идентификатор дня (1, 2, 3, 4, 5, 6, 7)"},"dayName":{"type":"string","description":"Название дня"},"dayWordId":{"type":"integer","format":"int32","description":"Идентификатор названия дня"}},"title":"День расписания для онлайн карты"},"Держатель талона":{"type":"object","properties":{"email":{"type":"string","description":"Адрес электронной почты"},"phoneNumber":{"type":"string","description":"Номер мобильного телефона"},"vcHolderId":{"type":"integer","format":"int32","description":"Идентификатор держателя талона"},"vcHolderName":{"type":"string","description":"Имя держателя талона"}},"title":"Держатель талона"},"Запрос страницы":{"type":"object","properties":{"page":{"type":"integer","format":"int32","description":"Номер страницы в запросе (номер страницы ведется с нуля)"},"size":{"type":"integer","format":"int32","description":"Количество элементов на страницу в запросе"}},"title":"Запрос страницы"},"Заявка на ОИ (ОП и ОС)":{"type":"object","properties":{"amount":{"type":"number","description":"Количество"},"cancelCause":{"description":"Причина отказа","$ref":"#/definitions/Обьект идентификатора причины отказа заявки","originalRef":"Обьект идентификатора причины отказа заявки"},"cardHolderName":{"type":"string","description":"Имя держателя карты"},"cardNumber":{"type":"string","description":"Номер карты"},"creatorLogin":{"type":"string","description":"Создатель ОИ"},"dateBegin":{"type":"string","format":"date","description":"Дата начала"},"dateEnd":{"type":"string","format":"date","description":"Дата окончание"},"dateOf":{"type":"string","format":"date-time","description":"Дата создания заявки"},"dateOfAnswer":{"type":"string","format":"date-time","description":"Дата ответа заявки"},"drDdType":{"description":"Тип ОИ (ОП и ОС)","$ref":"#/definitions/Обьект идентификатора типа заявки на ОИ (ОП и ОС)","originalRef":"Обьект идентификатора типа заявки на ОИ (ОП и ОС)"},"groupId":{"type":"integer","format":"int32","description":"Идентификатор группы ОИ (ОП и ОС)"},"idInGroup":{"type":"integer","format":"int32","description":"Идентификатор ОИ (ОП и ОС) в группы"},"requestId":{"type":"integer","format":"int32","description":"Идентификатор заявки"},"rqState":{"description":"Состояние заявки","$ref":"#/definitions/Обьект идентификатора состояния заявки","originalRef":"Обьект идентификатора состояния заявки"},"sendOc":{"type":"boolean","description":"Подтверждение пользователем заявки <br>описание поля sendOc описано в поле canSendOcImm <br>(описание поля canSendOcImm, можно получить в разделе Models > Пользовательские настройки)"},"service":{"description":"Услуга","$ref":"#/definitions/Обьект идентификатора услуги","originalRef":"Обьект идентификатора услуги"}},"title":"Заявка на ОИ (ОП и ОС)"},"Заявка на ОИ (ОП и ОС) с полной информацией":{"type":"object","properties":{"amount":{"type":"number","description":"Количество"},"cancelCause":{"description":"Причина отказа","$ref":"#/definitions/Причина отказа заявки","originalRef":"Причина отказа заявки"},"cardHolderName":{"type":"string","description":"Имя держателя карты"},"cardNumber":{"type":"string","description":"Номер карты"},"creatorLogin":{"type":"string","description":"Создатель ОИ (ОП и ОС)"},"dateBegin":{"type":"string","format":"date","description":"Дата начала"},"dateEnd":{"type":"string","format":"date","description":"Дата окончание"},"dateOf":{"type":"string","format":"date-time","description":"Дата создания заявки"},"dateOfAnswer":{"type":"string","format":"date-time","description":"Дата ответа заявки"},"drDdType":{"description":"Тип ОИ (ОП и ОС)","$ref":"#/definitions/Тип заявки на ОИ (ОП и ОС)","originalRef":"Тип заявки на ОИ (ОП и ОС)"},"groupId":{"type":"integer","format":"int32","description":"Идентификатор группы ОИ (ОП и ОС)"},"idInGroup":{"type":"integer","format":"int32","description":"Идентификатор ОИ (ОП и ОС) в группы"},"requestId":{"type":"integer","format":"int32","description":"Идентификатор заявки"},"rqState":{"description":"Состояние заявки","$ref":"#/definitions/Состояния заявки","originalRef":"Состояния заявки"},"sendOc":{"type":"boolean","description":"Подтверждение пользователем заявки <br>описание поля sendOc описано в поле canSendOcImm <br>(описание поля canSendOcImm, можно получить в разделе Models > Пользовательские настройки)"},"service":{"description":"Услуга","$ref":"#/definitions/Услуга","originalRef":"Услуга"}},"title":"Заявка на ОИ (ОП и ОС) с полной информацией"},"Заявка на ОИЛ":{"type":"object","properties":{"amount":{"type":"integer","format":"int32","description":"Количество (Новый лимит)"},"cancelCause":{"description":"Причина отказа","$ref":"#/definitions/Обьект идентификатора причины отказа заявки","originalRef":"Обьект идентификатора причины отказа заявки"},"cardHolderName":{"type":"string","description":"Имя держателя карты"},"cardNumber":{"type":"string","description":"Номер карты"},"dateBegin":{"type":"string","format":"date","description":"Дата начала"},"dateEnd":{"type":"string","format":"date","description":"Дата окончания"},"dateOf":{"type":"string","format":"date-time","description":"Дата создания заявки"},"dateOfAnswer":{"type":"string","format":"date-time","description":"Дата ответа заявки"},"requestId":{"type":"integer","format":"int32","description":"Идентификатор заявки"},"rqState":{"description":"Состояние заявки","$ref":"#/definitions/Обьект идентификатора состояния заявки","originalRef":"Обьект идентификатора состояния заявки"},"sendOc":{"type":"boolean","description":"Подтверждение пользователем заявки <br>описание поля sendOc описано в поле canSendOcImm <br>(описание поля canSendOcImm, можно получить в разделе Models > Пользовательские настройки)"},"service":{"description":"Услуга","$ref":"#/definitions/Обьект идентификатора услуги","originalRef":"Обьект идентификатора услуги"}},"title":"Заявка на ОИЛ"},"Заявка на ОИЛ с полной информацией":{"type":"object","properties":{"amount":{"type":"integer","format":"int32","description":"Количество (Новый лимит)"},"cancelCause":{"description":"Причина отказа","$ref":"#/definitions/Причина отказа заявки","originalRef":"Причина отказа заявки"},"cardHolderName":{"type":"string","description":"Имя держателя карты"},"cardNumber":{"type":"string","description":"Номер карты"},"dateBegin":{"type":"string","format":"date","description":"Дата начала"},"dateEnd":{"type":"string","format":"date","description":"Дата окончания"},"dateOf":{"type":"string","format":"date-time","description":"Дата создания заявки"},"dateOfAnswer":{"type":"string","format":"date-time","description":"Дата ответа заявки"},"requestId":{"type":"integer","format":"int32","description":"Идентификатор заявки"},"rqState":{"description":"Состояние заявки","$ref":"#/definitions/Состояния заявки","originalRef":"Состояния заявки"},"sendOc":{"type":"boolean","description":"Подтверждение пользователем заявки <br>описание поля sendOc описано в поле canSendOcImm <br>(описание поля canSendOcImm, можно получить в разделе Models > Пользовательские настройки)"},"service":{"description":"Услуга","$ref":"#/definitions/Услуга","originalRef":"Услуга"}},"title":"Заявка на ОИЛ с полной информацией"},"Заявка на блокировку карты":{"type":"object","properties":{"blockComment":{"type":"string","description":"Комментарий заявка на блокировку карты"},"cardNumber":{"type":"string","description":"Номер карты"},"dateOf":{"type":"string","format":"date-time","description":"Дата создания заявки"},"requestId":{"type":"integer","format":"int32","description":"Идентификатор заявки"},"rqState":{"description":"Состояние заявки","$ref":"#/definitions/Обьект идентификатора состояния заявки","originalRef":"Обьект идентификатора состояния заявки"},"sendOc":{"type":"boolean","description":"Подтверждение пользователем заявки <br>описание поля sendOc описано в поле canSendOcImm <br>(описание поля canSendOcImm, можно получить в разделе Models > Пользовательские настройки)"}},"title":"Заявка на блокировку карты"},"Заявка на блокировку карты с полной информацией":{"type":"object","properties":{"blockComment":{"type":"string","description":"Комментарий заявка на блокировку карты"},"cardNumber":{"type":"string","description":"Номер карты"},"dateOf":{"type":"string","format":"date-time","description":"Дата создания заявки"},"requestId":{"type":"integer","format":"int32","description":"Идентификатор заявки"},"rqState":{"description":"Состояние заявки","$ref":"#/definitions/Состояния заявки","originalRef":"Состояния заявки"},"sendOc":{"type":"boolean","description":"Подтверждение пользователем заявки <br>описание поля sendOc описано в поле canSendOcImm <br>(описание поля canSendOcImm, можно получить в разделе Models > Пользовательские настройки)"}},"title":"Заявка на блокировку карты с полной информацией"},"Заявка на изменение держателя карты":{"type":"object","properties":{"cardHolderName":{"type":"string","description":"Новое имя держателя карты"},"cardNumber":{"type":"string","description":"Номер карты"},"dateOf":{"type":"string","format":"date-time","description":"Дата создания заявки"},"oldCardHolderName":{"type":"string","description":"Предыдущее имя держателя карты"},"requestId":{"type":"integer","format":"int32","description":"Идентификатор заявки"},"rqState":{"description":"Состояние заявки","$ref":"#/definitions/Обьект идентификатора состояния заявки","originalRef":"Обьект идентификатора состояния заявки"},"sendOc":{"type":"boolean","description":"Подтверждение пользователем заявки <br>описание поля sendOc описано в поле canSendOcImm <br>(описание поля canSendOcImm, можно получить в разделе Models > Пользовательские настройки)"}},"title":"Заявка на изменение держателя карты"},"Заявка на изменение держателя карты с полной информацией":{"type":"object","properties":{"cardHolderName":{"type":"string","description":"Новое имя держателя карты"},"cardNumber":{"type":"string","description":"Номер карты"},"dateOf":{"type":"string","format":"date-time","description":"Дата создания заявки"},"oldCardHolderName":{"type":"string","description":"Предыдущее имя держателя карты"},"requestId":{"type":"integer","format":"int32","description":"Идентификатор заявки"},"rqState":{"description":"Состояние заявки","$ref":"#/definitions/Состояния заявки","originalRef":"Состояния заявки"},"sendOc":{"type":"boolean","description":"Подтверждение пользователем заявки <br>описание поля sendOc описано в поле canSendOcImm <br>(описание поля canSendOcImm, можно получить в разделе Models > Пользовательские настройки)"}},"title":"Заявка на изменение держателя карты с полной информацией"},"Заявка на изменение онлайн лимита для онлайн карты":{"type":"object","properties":{"cancelCause":{"description":"Причина отказа","$ref":"#/definitions/Обьект идентификатора причины отказа заявки","originalRef":"Обьект идентификатора причины отказа заявки"},"cardNumber":{"type":"string","description":"Номер карты"},"dailyLimit":{"type":"number","description":"Суточный лимит"},"dateOf":{"type":"string","format":"date-time","description":"Дата создания заявки"},"dateOfAnswer":{"type":"string","format":"date-time","description":"Дата ответа заявки"},"monthlyLimit":{"type":"number","description":"Месячный лимит"},"onlLimitType":{"description":"Тип онлайн лимита","$ref":"#/definitions/Обьект идентификатора типа онлайн лимита для заявки","originalRef":"Обьект идентификатора типа онлайн лимита для заявки"},"requestId":{"type":"integer","format":"int32","description":"Идентификатор заявки"},"rqState":{"description":"Состояние заявки","$ref":"#/definitions/Обьект идентификатора состояния заявки","originalRef":"Обьект идентификатора состояния заявки"},"sendOc":{"type":"boolean","description":"Подтверждение пользователем заявки <br>описание поля sendOc описано в поле canSendOcImm <br>(описание поля canSendOcImm, можно получить в разделе Models > Пользовательские настройки)"},"service":{"description":"Услуга","$ref":"#/definitions/Обьект идентификатора услуги","originalRef":"Обьект идентификатора услуги"},"weeklyLimit":{"type":"number","description":"Недельный лимит"}},"title":"Заявка на изменение онлайн лимита для онлайн карты"},"Заявка на изменение онлайн лимита для онлайн карты с полной информацией":{"type":"object","properties":{"cancelCause":{"description":"Причина отказа","$ref":"#/definitions/Причина отказа заявки","originalRef":"Причина отказа заявки"},"cardNumber":{"type":"string","description":"Номер карты"},"dailyLimit":{"type":"number","description":"Суточный лимит"},"dateOf":{"type":"string","format":"date-time","description":"Дата создания заявки"},"dateOfAnswer":{"type":"string","format":"date-time","description":"Дата ответа заявки"},"monthlyLimit":{"type":"number","description":"Месячный лимит"},"onlLimitType":{"description":"Тип онлайн лимита","$ref":"#/definitions/Тип онлайн лимита для заявки","originalRef":"Тип онлайн лимита для заявки"},"requestId":{"type":"integer","format":"int32","description":"Идентификатор заявки"},"rqState":{"description":"Состояние заявки","$ref":"#/definitions/Состояния заявки","originalRef":"Состояния заявки"},"sendOc":{"type":"boolean","description":"Подтверждение пользователем заявки <br>описание поля sendOc описано в поле canSendOcImm <br>(описание поля canSendOcImm, можно получить в разделе Models > Пользовательские настройки)"},"service":{"description":"Услуга","$ref":"#/definitions/Услуга","originalRef":"Услуга"},"weeklyLimit":{"type":"number","description":"Недельный лимит"}},"title":"Заявка на изменение онлайн лимита для онлайн карты с полной информацией"},"Заявка на разблокировку карты":{"type":"object","properties":{"cardNumber":{"type":"string","description":"Номер карты"},"dateOf":{"type":"string","format":"date-time","description":"Дата создания заявки"},"requestId":{"type":"integer","format":"int32","description":"Идентификатор заявки"},"rqState":{"description":"Состояние заявки","$ref":"#/definitions/Обьект идентификатора состояния заявки","originalRef":"Обьект идентификатора состояния заявки"},"sendOc":{"type":"boolean","description":"Подтверждение пользователем заявки"},"unblockComment":{"type":"string","description":"Подтверждение пользователем заявки <br>описание поля sendOc описано в поле canSendOcImm <br>(описание поля canSendOcImm, можно получить в разделе Models > Пользовательские настройки)"}},"title":"Заявка на разблокировку карты"},"Заявка на разблокировку карты с полной информацией":{"type":"object","properties":{"cardNumber":{"type":"string","description":"Номер карты"},"dateOf":{"type":"string","format":"date-time","description":"Дата создания заявки"},"requestId":{"type":"integer","format":"int32","description":"Идентификатор заявки"},"rqState":{"description":"Состояние заявки","$ref":"#/definitions/Состояния заявки","originalRef":"Состояния заявки"},"sendOc":{"type":"boolean","description":"Подтверждение пользователем заявки"},"unblockComment":{"type":"string","description":"Подтверждение пользователем заявки <br>описание поля sendOc описано в поле canSendOcImm <br>(описание поля canSendOcImm, можно получить в разделе Models > Пользовательские настройки)"}},"title":"Заявка на разблокировку карты с полной информацией"},"Заявка на талон":{"type":"object","properties":{"dateOf":{"type":"string","format":"date-time","description":"Дата создания заявки"},"dateOfAnswer":{"type":"string","format":"date-time","description":"Дата ответа заявки"},"groupCoupons":{"description":"Группа талонов","$ref":"#/definitions/Обьект идентификатора группы талонов","originalRef":"Обьект идентификатора группы талонов"},"isOrdered":{"type":"boolean","description":"Подтверждение пользователем заказа на талон <br>если isOrdered = false, то заказ на талон не отправлен <br>если isOrdered = true, то заканна талон отправлен"},"requestId":{"type":"integer","format":"int32","description":"Идентификатор заявки"},"rqState":{"description":"Состояние заявки","$ref":"#/definitions/Обьект идентификатора состояния заявки","originalRef":"Обьект идентификатора состояния заявки"}},"title":"Заявка на талон"},"Заявка на талон с полной информацией":{"type":"object","properties":{"dateOf":{"type":"string","format":"date-time","description":"Дата создания заявки"},"dateOfAnswer":{"type":"string","format":"date-time","description":"Дата ответа заявки"},"groupCoupons":{"description":"Группа талонов","$ref":"#/definitions/Группа талонов с полной информацией","originalRef":"Группа талонов с полной информацией"},"isOrdered":{"type":"boolean","description":"Подтверждение пользователем заказа на талон <br>если isOrdered = false, то заказ на талон не отправлен <br>если isOrdered = true, то заканна талон отправлен"},"requestId":{"type":"integer","format":"int32","description":"Идентификатор заявки"},"rqState":{"description":"Состояние заявки","$ref":"#/definitions/Состояния заявки","originalRef":"Состояния заявки"}},"title":"Заявка на талон с полной информацией"},"Карта":{"type":"object","properties":{"cardHolderName":{"type":"string","description":"Имя держателя карты"},"cardNumber":{"type":"string","description":"Номер карты"},"cardState":{"description":"Состояние карты","$ref":"#/definitions/Обьект идентификатора состояния карты","originalRef":"Обьект идентификатора состояния карты"},"hasElectronicPurses":{"type":"boolean","description":"Признак наличия электронных кошельков <br>если hasElectronicPurses = false, то нет электронных кошельков на карте <br>если hasElectronicPurses = true, то есть электронные кошельки на карте"},"hasPurses":{"type":"boolean","description":"Признак наличия кошельков <br>если hasPurses = false, то нет кошельков на карте <br>если hasPurses = true, то есть кошельки на карте"},"isOnlCard":{"type":"boolean","description":"Признак онлайн карты <br>если isOnlCard = false, то карта не является онлайн картой <br>если isOnlCard = true, то карта является онлайн картой"},"maxConsumption":{"type":"number","description":"Максимальный расход"},"onlCard":{"description":"Онлайн карта","$ref":"#/definitions/Онлайн карта","originalRef":"Онлайн карта"},"petrolTank":{"type":"number","description":"Объем бака ТС"},"purses":{"type":"array","description":"Кошельки","items":{"$ref":"#/definitions/Кошелек","originalRef":"Кошелек"}}},"title":"Карта"},"Карта c полной информацией без онлайн карты и кошельков":{"type":"object","properties":{"cardHolderName":{"type":"string","description":"Имя держателя карты"},"cardNumber":{"type":"string","description":"Номер карты"},"cardState":{"description":"Состояние карты","$ref":"#/definitions/Состояние карты","originalRef":"Состояние карты"},"hasElectronicPurses":{"type":"boolean","description":"Признак наличия электронных кошельков <br>если hasElectronicPurses = false, то нет электронных кошельков на карте <br>если hasElectronicPurses = true, то есть электронные кошельки на карте"},"hasPurses":{"type":"boolean","description":"Признак наличия кошельков <br>если hasPurses = false, то нет кошельков на карте <br>если hasPurses = true, то есть кошельки на карте"},"isOnlCard":{"type":"boolean","description":"Признак онлайн карты <br>если isOnlCard = false, то карта не является онлайн картой <br>если isOnlCard = true, то карта является онлайн картой"},"maxConsumption":{"type":"number","description":"Максимальный расход"},"petrolTank":{"type":"number","description":"Объем бака ТС"}},"title":"Карта c полной информацией без онлайн карты и кошельков"},"Карта без онлайн карты и кошельков":{"type":"object","properties":{"cardHolderName":{"type":"string","description":"Имя держателя карты"},"cardNumber":{"type":"string","description":"Номер карты"},"cardState":{"description":"Состояние карты","$ref":"#/definitions/Обьект идентификатора состояния карты","originalRef":"Обьект идентификатора состояния карты"},"hasElectronicPurses":{"type":"boolean","description":"Признак наличия электронных кошельков <br>если hasElectronicPurses = false, то нет электронных кошельков на карте <br>если hasElectronicPurses = true, то есть электронные кошельки на карте"},"hasPurses":{"type":"boolean","description":"Признак наличия кошельков <br>если hasPurses = false, то нет кошельков на карте <br>если hasPurses = true, то есть кошельки на карте"},"isOnlCard":{"type":"boolean","description":"Признак онлайн карты <br>если isOnlCard = false, то карта не является онлайн картой <br>если isOnlCard = true, то карта является онлайн картой"},"maxConsumption":{"type":"number","description":"Максимальный расход"},"petrolTank":{"type":"number","description":"Объем бака ТС"}},"title":"Карта без онлайн карты и кошельков"},"Карта с кошельками":{"type":"object","properties":{"cardHolderName":{"type":"string","description":"Имя держателя карты"},"cardNumber":{"type":"string","description":"Номер карты"},"cardState":{"description":"Состояние карты","$ref":"#/definitions/Обьект идентификатора состояния карты","originalRef":"Обьект идентификатора состояния карты"},"hasElectronicPurses":{"type":"boolean","description":"Признак наличия электронных кошельков <br>если hasElectronicPurses = false, то нет электронных кошельков на карте <br>если hasElectronicPurses = true, то есть электронные кошельки на карте"},"hasPurses":{"type":"boolean","description":"Признак наличия кошельков <br>если hasPurses = false, то нет кошельков на карте <br>если hasPurses = true, то есть кошельки на карте"},"isOnlCard":{"type":"boolean","description":"Признак онлайн карты <br>если isOnlCard = false, то карта не является онлайн картой <br>если isOnlCard = true, то карта является онлайн картой"},"maxConsumption":{"type":"number","description":"Максимальный расход"},"petrolTank":{"type":"number","description":"Объем бака ТС"},"purses":{"type":"array","description":"Кошельки","items":{"$ref":"#/definitions/Кошелек","originalRef":"Кошелек"}}},"title":"Карта с кошельками"},"Карта с онлайн картой и онлайн лимитами и расписанием":{"type":"object","properties":{"cardHolderName":{"type":"string","description":"Имя держателя карты"},"cardNumber":{"type":"string","description":"Номер карты"},"cardState":{"description":"Состояние карты","$ref":"#/definitions/Обьект идентификатора состояния карты","originalRef":"Обьект идентификатора состояния карты"},"hasElectronicPurses":{"type":"boolean","description":"Признак наличия электронных кошельков <br>если hasElectronicPurses = false, то нет электронных кошельков на карте <br>если hasElectronicPurses = true, то есть электронные кошельки на карте"},"hasPurses":{"type":"boolean","description":"Признак наличия кошельков <br>если hasPurses = false, то нет кошельков на карте <br>если hasPurses = true, то есть кошельки на карте"},"isOnlCard":{"type":"boolean","description":"Признак онлайн карты <br>если isOnlCard = false, то карта не является онлайн картой <br>если isOnlCard = true, то карта является онлайн картой"},"maxConsumption":{"type":"number","description":"Максимальный расход"},"onlCard":{"description":"Онлайн карта","$ref":"#/definitions/Онлайн карта","originalRef":"Онлайн карта"},"petrolTank":{"type":"number","description":"Объем бака ТС"}},"title":"Карта с онлайн картой и онлайн лимитами и расписанием"},"Карта с полной информацией":{"type":"object","properties":{"cardHolderName":{"type":"string","description":"Имя держателя карты"},"cardNumber":{"type":"string","description":"Номер карты"},"cardState":{"description":"Состояние карты","$ref":"#/definitions/Состояние карты","originalRef":"Состояние карты"},"hasElectronicPurses":{"type":"boolean","description":"Признак наличия электронных кошельков <br>если hasElectronicPurses = false, то нет электронных кошельков на карте <br>если hasElectronicPurses = true, то есть электронные кошельки на карте"},"hasPurses":{"type":"boolean","description":"Признак наличия кошельков <br>если hasPurses = false, то нет кошельков на карте <br>если hasPurses = true, то есть кошельки на карте"},"isOnlCard":{"type":"boolean","description":"Признак онлайн карты <br>если isOnlCard = false, то карта не является онлайн картой <br>если isOnlCard = true, то карта является онлайн картой"},"maxConsumption":{"type":"number","description":"Максимальный расход"},"onlCard":{"description":"Онлайн карта","$ref":"#/definitions/Онлайн карта c полной информацией","originalRef":"Онлайн карта c полной информацией"},"petrolTank":{"type":"number","description":"Объем бака ТС"},"purses":{"type":"array","description":"Кошельки","items":{"$ref":"#/definitions/Кошелек с полной информацией","originalRef":"Кошелек с полной информацией"}}},"title":"Карта с полной информацией"},"Карта с полной информацией и кошельками":{"type":"object","properties":{"cardHolderName":{"type":"string","description":"Имя держателя карты"},"cardNumber":{"type":"string","description":"Номер карты"},"cardState":{"description":"Состояние карты","$ref":"#/definitions/Состояние карты","originalRef":"Состояние карты"},"hasElectronicPurses":{"type":"boolean","description":"Признак наличия электронных кошельков <br>если hasElectronicPurses = false, то нет электронных кошельков на карте <br>если hasElectronicPurses = true, то есть электронные кошельки на карте"},"hasPurses":{"type":"boolean","description":"Признак наличия кошельков <br>если hasPurses = false, то нет кошельков на карте <br>если hasPurses = true, то есть кошельки на карте"},"isOnlCard":{"type":"boolean","description":"Признак онлайн карты <br>если isOnlCard = false, то карта не является онлайн картой <br>если isOnlCard = true, то карта является онлайн картой"},"maxConsumption":{"type":"number","description":"Максимальный расход"},"petrolTank":{"type":"number","description":"Объем бака ТС"},"purses":{"type":"array","description":"Кошельки","items":{"$ref":"#/definitions/Кошелек с полной информацией","originalRef":"Кошелек с полной информацией"}}},"title":"Карта с полной информацией и кошельками"},"Карта с полной информацией и онлайн картой и онлайн лимитами и расписанием":{"type":"object","properties":{"cardHolderName":{"type":"string","description":"Имя держателя карты"},"cardNumber":{"type":"string","description":"Номер карты"},"cardState":{"description":"Состояние карты","$ref":"#/definitions/Состояние карты","originalRef":"Состояние карты"},"hasElectronicPurses":{"type":"boolean","description":"Признак наличия электронных кошельков <br>если hasElectronicPurses = false, то нет электронных кошельков на карте <br>если hasElectronicPurses = true, то есть электронные кошельки на карте"},"hasPurses":{"type":"boolean","description":"Признак наличия кошельков <br>если hasPurses = false, то нет кошельков на карте <br>если hasPurses = true, то есть кошельки на карте"},"isOnlCard":{"type":"boolean","description":"Признак онлайн карты <br>если isOnlCard = false, то карта не является онлайн картой <br>если isOnlCard = true, то карта является онлайн картой"},"maxConsumption":{"type":"number","description":"Максимальный расход"},"onlCard":{"description":"Онлайн карта","$ref":"#/definitions/Онлайн карта c полной информацией","originalRef":"Онлайн карта c полной информацией"},"petrolTank":{"type":"number","description":"Объем бака ТС"}},"title":"Карта с полной информацией и онлайн картой и онлайн лимитами и расписанием"},"Кошелек":{"type":"object","properties":{"balance":{"type":"number","description":"Остаток"},"balanceForDdRequest":{"type":"number","description":"Остаток для заявки ОС"},"limit":{"type":"number","description":"Лимит"},"limitKind":{"description":"Вид лимита","$ref":"#/definitions/Обьект идентификатора вида лимита для кошелька","originalRef":"Обьект идентификатора вида лимита для кошелька"},"limitType":{"description":"Тип лимита","$ref":"#/definitions/Обьект идентификатора типа лимита для кошелька","originalRef":"Обьект идентификатора типа лимита для кошелька"},"maxLimitForOilRequest":{"type":"number","description":"Максимальное значение лимита для заявки на ОИЛ"},"overdraft":{"type":"integer","format":"int32","description":"Овердрафт"},"schema":{"description":"Схема","$ref":"#/definitions/Обьект идентификатора схемы обслуживания","originalRef":"Обьект идентификатора схемы обслуживания"},"service":{"description":"Услуга","$ref":"#/definitions/Обьект идентификатора услуги","originalRef":"Обьект идентификатора услуги"}},"title":"Кошелек"},"Кошелек с полной информацией":{"type":"object","properties":{"balance":{"type":"number","description":"Остаток"},"balanceForDdRequest":{"type":"number","description":"Остаток для заявки ОС"},"limit":{"type":"number","description":"Лимит"},"limitKind":{"description":"Вид лимита","$ref":"#/definitions/Вид лимита для кошелька","originalRef":"Вид лимита для кошелька"},"limitType":{"description":"Тип лимита","$ref":"#/definitions/Тип лимита для кошелька","originalRef":"Тип лимита для кошелька"},"maxLimitForOilRequest":{"type":"number","description":"Максимальное значение лимита для заявки на ОИЛ"},"overdraft":{"type":"integer","format":"int32","description":"Овердрафт"},"schema":{"description":"Схема","$ref":"#/definitions/Схема обслуживания","originalRef":"Схема обслуживания"},"service":{"description":"Услуга","$ref":"#/definitions/Услуга","originalRef":"Услуга"}},"title":"Кошелек с полной информацией"},"Лимиты по талону":{"type":"object","properties":{"dailyAvailableCountForReq":{"type":"integer","format":"int64","description":"Доступный суточный лимит по количеству обслуживаний"},"dailyAvailableSumForReq":{"type":"number","description":"Доступный суточный лимит по сумме обслуживаний"},"dailyCurrentCount":{"type":"integer","format":"int64","description":"Текущий израсходованный суточный лимит по количеству обслуживаний"},"dailyCurrentSum":{"type":"number","description":"Текущий израсходованный суточный лимит по сумме обслуживаний"},"dailyLimitCount":{"type":"integer","format":"int64","description":"Суточный лимит по количеству обслуживаний"},"dailyLimitSum":{"type":"number","description":"Суточный лимит по сумме обслуживаний"},"monthlyAvailableCountForReq":{"type":"integer","format":"int64","description":"Доступный месячный лимит по количеству обслуживаний"},"monthlyAvailableSumForReq":{"type":"number","description":"Доступный месячный лимит по сумме обслуживаний"},"monthlyCurrentCount":{"type":"integer","format":"int64","description":"Текущий израсходованный месячный лимит по количеству обслуживаний"},"monthlyCurrentSum":{"type":"number","description":"Текущий израсходованный месячный лимит по сумме обслуживаний"},"monthlyLimitCount":{"type":"integer","format":"int64","description":"Месячный лимит по количеству обслуживаний"},"monthlyLimitSum":{"type":"number","description":"Месячный лимит по сумме обслуживаний"},"weeklyAvailableCountForReq":{"type":"integer","format":"int64","description":"Доступный недельный лимит по количеству обслуживаний"},"weeklyAvailableSumForReq":{"type":"number","description":"Доступный недельный лимит по сумме обслуживаний"},"weeklyCurrentCount":{"type":"integer","format":"int64","description":"Текущий израсходованный недельный лимит по количеству обслуживаний"},"weeklyCurrentSum":{"type":"number","description":"Текущий израсходованный недельный лимит по сумме обслуживаний"},"weeklyLimitCount":{"type":"integer","format":"int64","description":"Недельный лимит по количеству обслуживаний"},"weeklyLimitSum":{"type":"number","description":"Недельный лимит по сумме обслуживаний"}},"title":"Лимиты по талону"},"Модель номера кода для отправки заявок на талоны":{"type":"object","properties":{"codeNumber":{"type":"integer","format":"int32","description":"Номер кода"},"lifetimeOfSeconds":{"type":"integer","format":"int32","description":"Продолжительность жизни номера кода в секундах"}},"title":"Модель номера кода для отправки заявок на талоны"},"Общая API ошибка":{"type":"object","properties":{"arguments":{"type":"array","description":"Аргументы API ошибки","items":{"type":"object"}},"code":{"type":"string","description":"Код API ошибки","enum":["ACCESS_TOKEN_INVALID","ACCOUNT_FORBIDDEN","ACCOUNT_MODEL_NOT_FOUND","AUTH_ERROR","BLOCK_CARD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_THERE_IS_AN_UNSENT_REQUEST_WITH_THIS_CARD_NUMBER","BLOCK_CARD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_THERE_IS_A_SENT_AND_UNCONFIRMED_REQUEST_WITH_THIS_CARD_NUMBER","BLOCK_CARD_REQUEST_FORBIDDEN","BLOCK_CARD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_BLOCK_COMMENT_EXCEEDED_MAX_VALUE","BLOCK_CARD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_BLOCK_COMMENT_HAS_INVALID_CHARACTERS","BLOCK_CARD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_CARD_NUMBER_EXCEEDED_MAX_VALUE","BLOCK_CARD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_CARD_NUMBER_IS_EMPTY","BLOCK_CARD_REQUEST_MODEL_NOT_FOUND","BLOCK_GROUP_COUPONS_FORBIDDEN_BECAUSE_EXISTS_REQUEST_FOR_BLOCKING","BLOCK_GROUP_COUPONS_FORBIDDEN_BECAUSE_NOT_EXISTS_VIRTUAL_COUPON_REQUESTS_GEN_AND_NOT_REJECTED","BLOCK_GROUP_COUPONS_FORM_NOT_VALIDATED_BECAUSE_GROUP_COUPONS_ID_IS_EMPTY","BLOCK_VIRTUAL_COUPON_FORBIDDEN_BECAUSE_VIRTUAL_COUPON_STATE_IS_NOT_WORK","BLOCK_VIRTUAL_COUPON_FORM_NOT_VALIDATED_BECAUSE_VC_GUID_IS_EMPTY","CANCEL_CAUSE_MODEL_NOT_FOUND","CARD_MODEL_NOT_FOUND","CARD_NUMBER_FORBIDDEN","CARD_STATE_MODEL_NOT_FOUND","CHANGE_HOLDER_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_THERE_IS_AN_UNSENT_REQUEST_WITH_THIS_CARD_NUMBER","CHANGE_HOLDER_REQUEST_FORBIDDEN","CHANGE_HOLDER_REQUEST_FORM_NOT_VALIDATED_BECAUSE_CARD_NUMBER_EXCEEDED_MAX_VALUE","CHANGE_HOLDER_REQUEST_FORM_NOT_VALIDATED_BECAUSE_CARD_NUMBER_IS_EMPTY","CHANGE_HOLDER_REQUEST_FORM_NOT_VALIDATED_BECAUSE_NEW_CARD_HOLDER_NAME_EXCEEDED_MAX_VALUE","CHANGE_HOLDER_REQUEST_FORM_NOT_VALIDATED_BECAUSE_NEW_CARD_HOLDER_NAME_HAS_INVALID_CHARACTERS","CHANGE_HOLDER_REQUEST_MODEL_NOT_FOUND","CREATE_DR_AND_DD_REQUEST_FORBIDDEN_BECAUSE_DD_REQUEST_FORBIDDEN","CREATE_DR_AND_DD_REQUEST_FORBIDDEN_BECAUSE_DR_REQUEST_FORBIDDEN","DR_AND_DD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_AMOUNT_GREATER_THAN_ACCOUNT_BALANCE_FOR_DR_REQUEST","DR_AND_DD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_AMOUNT_GREATER_THAN_MAX_SERVICE_CURRENCY_VALUE","DR_AND_DD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_AMOUNT_GREATER_THAN_MAX_SERVICE_VALUE","DR_AND_DD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_AMOUNT_GREATER_THAN_PURSE_BALANCE_FOR_DD_REQUEST","DR_AND_DD_REQUEST_FORBIDDEN","DR_AND_DD_REQUEST_FORBIDDEN_BECAUSE_DD_REQUEST_FORBIDDEN_FOR_SENT_REQUEST","DR_AND_DD_REQUEST_FORBIDDEN_BECAUSE_DR_REQUEST_FORBIDDEN_FOR_SENT_REQUEST","DR_AND_DD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_AMOUNT_IS_EMPTY","DR_AND_DD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_AMOUNT_IS_NEGATIVE","DR_AND_DD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_CARD_NUMBER_EXCEEDED_MAX_VALUE","DR_AND_DD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_CARD_NUMBER_IS_EMPTY","DR_AND_DD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_DR_DD_TYPE_ID_IS_EMPTY","DR_AND_DD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_SERVICE_ID_WEB_IS_EMPTY","DR_AND_DD_REQUEST_MODEL_NOT_FOUND","DR_DD_TYPE_MODEL_NOT_FOUND","FORBIDDEN_BECAUSE_CODE_NUMBER_DOES_NOT_MATCH_RESERVED_CODE_NUMBER_OR_CODE_NUMBER_EXPIRED","FORBIDDEN_BECAUSE_NOT_EXISTS_VIRTUAL_COUPON_RESERVE_CODE_NUMBER","FORBIDDEN_BECAUSE_USER_IS_CARD_HOLDER","FORBIDDEN_BECAUSE_USER_IS_MOBILE_USER","FORBIDDEN_BECAUSE_VIRTUAL_COUPON_CODE_EXPIRATION_DATE_HAS_PASSED","FORBIDDEN_BECAUSE_VIRTUAL_COUPON_CODE_TABLE_NUM_IS_ZERO","FORBIDDEN_BECAUSE_VIRTUAL_COUPON_HAS_NOT_FREE_CODE","FORBIDDEN_BECAUSE_VIRTUAL_COUPON_PIN_EXPIRATION_DATE_HAS_PASSED","FORBIDDEN_BECAUSE_VIRTUAL_COUPON_PIN_STATE_IS_BLOCK","GROUP_COUPONS_MODEL_NOT_FOUND","IN_REPORT_CARD_BALANCE_CARD_HAS_NOT_ELECTRONIC_PURSES","IN_REPORT_CARD_BALANCE_PURSE_IS_NOT_ELECTRONIC_PURSE_BECAUSE_SCHEMA_ARE_NOT_EP_EPC_EPFP","LIMIT_KIND_MODEL_NOT_FOUND","LIMIT_TYPE_MODEL_NOT_FOUND","LNG_MODEL_NOT_FOUND","LNG_WORD_MODEL_NOT_FOUND","LOGIN_FORM_NOT_VALIDATED_BECAUSE_LOGIN_HAS_INVALID_CHARACTERS","LOGIN_FORM_NOT_VALIDATED_BECAUSE_LOGIN_IS_EMPTY","LOGIN_FORM_NOT_VALIDATED_BECAUSE_PASSWORD_IS_EMPTY","LOGIN_OR_PASSWORD_INCORRECT","NO_ACCESS_TOKEN_HEADER_KEY","OIL_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_AMOUNT_GREATER_THAN_MAX_LIMIT","OIL_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_AMOUNT_IS_SAME_DOES_NOT_DIFFERENT_FROM_CURRENT_LIMIT","OIL_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_CARD_NUMBER_THERE_IS_AN_UNSENT_REQUEST_WITH_THIS_CARD_NUMBER","OIL_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_CARD_NUMBER_THERE_IS_AN_UNSENT_REQUEST_WITH_THIS_SERVICE_ID_WEB","OIL_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_THERE_IS_A_SENT_AND_UNCONFIRMED_REQUEST_WITH_THIS_CARD_NUMBER","OIL_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_THERE_IS_A_SENT_AND_UNCONFIRMED_REQUEST_WITH_THIS_SERVICE_ID_WEB","OIL_REQUEST_FORBIDDEN","OIL_REQUEST_FORM_NOT_VALIDATED_BECAUSE_AMOUNT_IS_EMPTY","OIL_REQUEST_FORM_NOT_VALIDATED_BECAUSE_AMOUNT_IS_NEGATIVE","OIL_REQUEST_FORM_NOT_VALIDATED_BECAUSE_CARD_NUMBER_EXCEEDED_MAX_VALUE","OIL_REQUEST_FORM_NOT_VALIDATED_BECAUSE_CARD_NUMBER_IS_EMPTY","OIL_REQUEST_FORM_NOT_VALIDATED_BECAUSE_DATE_BEGIN_IS_BEFORE_DATE_NOW","OIL_REQUEST_FORM_NOT_VALIDATED_BECAUSE_DATE_BEGIN_IS_EMPTY","OIL_REQUEST_FORM_NOT_VALIDATED_BECAUSE_SERVICE_ID_WEB_IS_EMPTY","OIL_REQUEST_MODEL_NOT_FOUND","ONL_CARD_DAY_SCHEDULE_MODEL_NOT_FOUND","ONL_CARD_MODEL_NOT_FOUND","ONL_CARD_TYPE_MODEL_NOT_FOUND","ONL_CLIENT_LIMIT_MODEL_NOT_FOUND","ONL_CLIENT_LIMIT_SERVICE_MODEL_NOT_FOUND","ONL_LIMIT_CARD_MODEL_NOT_FOUND","ONL_LIMIT_CARD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_DAILY_LIMIT_IS_NOT_INTEGER_VALUE","ONL_LIMIT_CARD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_DAILY_LIMIT_IS_SAME_LIMITS_ARE_SAME","ONL_LIMIT_CARD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_MONTHLY_LIMIT_IS_NOT_INTEGER_VALUE","ONL_LIMIT_CARD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_MONTHLY_LIMIT_IS_SAME_LIMITS_ARE_SAME","ONL_LIMIT_CARD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_ONL_CARD_TYPE_IS_A","ONL_LIMIT_CARD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_SERVICE_ID_WEB_IS_EMPTY","ONL_LIMIT_CARD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_THERE_IS_AN_UNSENT_REQUEST_WITH_THIS_CARD_NUMBER","ONL_LIMIT_CARD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_THERE_IS_AN_UNSENT_REQUEST_WITH_THIS_LIMIT_TYPE_ID","ONL_LIMIT_CARD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_THERE_IS_AN_UNSENT_REQUEST_WITH_THIS_SERVICE_ID_WEB","ONL_LIMIT_CARD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_WEEKLY_LIMIT_IS_NOT_INTEGER_VALUE","ONL_LIMIT_CARD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_WEEKLY_LIMIT_IS_SAME_LIMITS_ARE_SAME","ONL_LIMIT_CARD_REQUEST_FORBIDDEN","ONL_LIMIT_CARD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_CARD_NUMBER_EXCEEDED_MAX_VALUE","ONL_LIMIT_CARD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_CARD_NUMBER_IS_EMPTY","ONL_LIMIT_CARD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_DAILY_LIMIT_IS_EMPTY","ONL_LIMIT_CARD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_DAILY_LIMIT_IS_NEGATIVE","ONL_LIMIT_CARD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_MONTHLY_LIMIT_IS_EMPTY","ONL_LIMIT_CARD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_MONTHLY_LIMIT_IS_NEGATIVE","ONL_LIMIT_CARD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_ONL_LIMIT_TYPE_ID_IS_EMPTY","ONL_LIMIT_CARD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_WEEKLY_LIMIT_IS_EMPTY","ONL_LIMIT_CARD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_WEEKLY_LIMIT_IS_NEGATIVE","ONL_LIMIT_CARD_REQUEST_MODEL_NOT_FOUND","ONL_LIMIT_CARD_SERVICE_MODEL_NOT_FOUND","ONL_LIMIT_KIND_MODEL_NOT_FOUND","ONL_LIMIT_TYPE_MODEL_NOT_FOUND","POS_MODEL_NOT_FOUND","POS_TRM_MODEL_NOT_FOUND","POS_TRM_PRICE_MODEL_NOT_FOUND","PURSE_MODEL_NOT_FOUND","REFRESH_TOKEN_FORM_NOT_VALIDATED_BECAUSE_REFRESH_TOKEN_IS_EMPTY","REFRESH_TOKEN_INVALID","REPORT_CARD_BALANCE_MODEL_NOT_FOUND","REQUEST_COULD_NOT_BE_CREATED_BECAUSE_CARD_HAS_NOT_ELECTRONIC_PURSES","REQUEST_COULD_NOT_BE_CREATED_BECAUSE_CARD_HAS_NOT_PURSES","REQUEST_COULD_NOT_BE_CREATED_BECAUSE_CARD_STATE_IS_NOT_IN_BLOCKED_BY_USER","REQUEST_COULD_NOT_BE_CREATED_BECAUSE_CARD_STATE_IS_NOT_WORK","REQUEST_COULD_NOT_BE_CREATED_BECAUSE_PURSE_IS_NOT_ELECTRONIC_PURSE_BECAUSE_SCHEMA_ARE_NOT_EP_EPC_EPFP","REQUEST_COULD_NOT_BE_DELETED_BECAUSE_REQUEST_SENT","REQUEST_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN_FOR_USER_IS_CARD_HOLDER_OR_USER_IS_MOBILE_USER","REQUEST_FORBIDDEN_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION_FOR_UNSENT_REQUEST","RESENDS_GROUP_COUPONS_FORBIDDEN_BECAUSE_NOT_EXISTS_VIRTUAL_COUPON_REQUEST_GENERATION_AND_ACCEPTED","RESENDS_GROUP_COUPONS_FORM_NOT_VALIDATED_BECAUSE_CODE_NUMBER_ID_IS_EMPTY","RESENDS_GROUP_COUPONS_FORM_NOT_VALIDATED_BECAUSE_GROUP_COUPONS_ID_IS_EMPTY","RESENDS_GROUP_COUPONS_FORM_NOT_VALIDATED_BECAUSE_SECURITY_CODE_ID_IS_EMPTY","RESENDS_VIRTUAL_COUPON_FORBIDDEN_BECAUSE_VIRTUAL_COUPON_STATE_IS_NOT_WORK","RESENDS_VIRTUAL_COUPON_FORM_NOT_VALIDATED_BECAUSE_CODE_NUMBER_ID_IS_EMPTY","RESENDS_VIRTUAL_COUPON_FORM_NOT_VALIDATED_BECAUSE_SECURITY_CODE_ID_IS_EMPTY","RESENDS_VIRTUAL_COUPON_FORM_NOT_VALIDATED_BECAUSE_VC_GUID_IS_EMPTY","RQ_STATE_MODEL_NOT_FOUND","SCHEMA_MODEL_NOT_FOUND","SEND_REQUESTS_FORBIDDEN_REQUESTS_COULD_NOT_BE_SENT_BECAUSE_IT_IS_SET_TO_SEND_IMMEDIATELY_AFTER_CREATION","SEND_VIRTUAL_COUPON_REQUESTS_FORM_NOT_VALIDATED_BECAUSE_CODE_NUMBER_IS_EMPTY","SEND_VIRTUAL_COUPON_REQUESTS_FORM_NOT_VALIDATED_BECAUSE_SECURITY_CODE_IS_EMPTY","SEND_VIRTUAL_COUPON_REQUEST_FORBIDDEN_BECAUSE_NOT_EXISTS_VIRTUAL_COUPON_REQUESTS_IS_NOT_ORDERED","SERVICE_MODEL_NOT_FOUND","SUBSCRIPTION_EXPIRED","TRANSACTION_FORBIDDEN_BECAUSE_ACCOUNT_FORBIDDEN","TRANSACTION_FORBIDDEN_BECAUSE_CARD_NUMBER_FORBIDDEN","TRANSACTION_MODEL_NOT_FOUND","TRN_TYPE_MODEL_NOT_FOUND","UNBLOCK_CARD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_THERE_IS_AN_UNSENT_REQUEST_WITH_THIS_CARD_NUMBER","UNBLOCK_CARD_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_THERE_IS_A_SENT_AND_UNCONFIRMED_REQUEST_WITH_THIS_CARD_NUMBER","UNBLOCK_CARD_REQUEST_FORBIDDEN","UNBLOCK_CARD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_CARD_NUMBER_EXCEEDED_MAX_VALUE","UNBLOCK_CARD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_CARD_NUMBER_IS_EMPTY","UNBLOCK_CARD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_UNBLOCK_COMMENT_EXCEEDED_MAX_VALUE","UNBLOCK_CARD_REQUEST_FORM_NOT_VALIDATED_BECAUSE_UNBLOCK_COMMENT_HAS_INVALID_CHARACTERS","UNBLOCK_CARD_REQUEST_MODEL_NOT_FOUND","USER_HAS_TEMPORARY_PASSWORD","USER_IS_BLOCKED_TO_DATE","USER_IS_CLIENT_BONUS","USER_IS_LOYALTY_CARD_CLIENT","USER_LNG_FORM_NOT_VALIDATED_BECAUSE_LNG_ID_IS_EMPTY","USER_SETTING_MODEL_NOT_FOUND","USER_STATUS_IS_LOCKED","USER_STATUS_IS_NOT_SUBSCRIBED","VALUE_IS_EMPTY_IN_ACCESS_TOKEN_HEADER_KEY","VIRTUAL_COUPON_FORBIDDEN","VIRTUAL_COUPON_HOLDER_FORM_NOT_VALIDATED_BECAUSE_EMAIL_EXCEEDED_MAX_VALUE","VIRTUAL_COUPON_HOLDER_FORM_NOT_VALIDATED_BECAUSE_EMAIL_INVALID_REGEX","VIRTUAL_COUPON_HOLDER_FORM_NOT_VALIDATED_BECAUSE_EMAIL_NOT_ENTERED_PHONE_NUMBER_AND_EMAIL_ARE_NOT_ENTERED","VIRTUAL_COUPON_HOLDER_FORM_NOT_VALIDATED_BECAUSE_PHONE_NUMBER_EXCEEDED_MAX_VALUE","VIRTUAL_COUPON_HOLDER_FORM_NOT_VALIDATED_BECAUSE_PHONE_NUMBER_INVALID_REGEX","VIRTUAL_COUPON_HOLDER_FORM_NOT_VALIDATED_BECAUSE_PHONE_NUMBER_NOT_ENTERED_PHONE_NUMBER_AND_EMAIL_ARE_NOT_ENTERED","VIRTUAL_COUPON_HOLDER_FORM_NOT_VALIDATED_BECAUSE_VC_HOLDER_NAME_EXCEEDED_MAX_VALUE","VIRTUAL_COUPON_HOLDER_FORM_NOT_VALIDATED_BECAUSE_VC_HOLDER_NAME_IS_EMPTY","VIRTUAL_COUPON_HOLDER_MODEL_NOT_FOUND","VIRTUAL_COUPON_LIMIT_MODEL_NOT_FOUND","VIRTUAL_COUPON_LIMIT_TYPE_MODEL_NOT_FOUND","VIRTUAL_COUPON_MODEL_NOT_FOUND","VIRTUAL_COUPON_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_DECLARED_AMOUNT_GREATER_THAN_VC_LIMIT_DAILY_AVAILABLE_COUNT_FOR_REQUEST","VIRTUAL_COUPON_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_DECLARED_AMOUNT_GREATER_THAN_VC_LIMIT_MONTHLY_AVAILABLE_COUNT_FOR_REQUEST","VIRTUAL_COUPON_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_DECLARED_AMOUNT_GREATER_THAN_VC_LIMIT_WEEKLY_AVAILABLE_COUNT_FOR_REQUEST","VIRTUAL_COUPON_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_DECLARED_AMOUNT_GREATER_THAN_VC_MAX_EMAIL_SEND_COUNT","VIRTUAL_COUPON_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_DECLARED_AMOUNT_GREATER_THAN_VC_MAX_SMS_SEND_COUNT","VIRTUAL_COUPON_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_LIFE_TIME_GREATER_THAN_VC_MAX_VALIDITY_DAYS","VIRTUAL_COUPON_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_NOMINAL_GREATER_THAN_VC_MAX_ONE_COUPON_SUM","VIRTUAL_COUPON_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_NOMINAL_GREATER_THAN_VC_MAX_ONE_COUPON_VALUE","VIRTUAL_COUPON_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_NOT_ALLOW_VC_FIX_PRICE_PRICE","VIRTUAL_COUPON_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_NOT_ALLOW_VC_TERMINAL_PRICE","VIRTUAL_COUPON_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_SERVICE_ID_WEB_HAS_NOT_PRICE","VIRTUAL_COUPON_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_SERVICE_ID_WEB_IS_CURRENCY","VIRTUAL_COUPON_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_SUM_GREATER_THAN_BALANCE_OF_CURRENCY_FOR_VC_REQUEST","VIRTUAL_COUPON_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_SUM_GREATER_THAN_VC_LIMIT_DAILY_AVAILABLE_SUM_FOR_REQUEST","VIRTUAL_COUPON_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_SUM_GREATER_THAN_VC_LIMIT_MONTHLY_AVAILABLE_SUM_FOR_REQUEST","VIRTUAL_COUPON_REQUEST_COULD_NOT_BE_CREATED_BECAUSE_SUM_GREATER_THAN_VC_LIMIT_WEEKLY_AVAILABLE_SUM_FOR_REQUEST","VIRTUAL_COUPON_REQUEST_COULD_NOT_BE_DELETED_BECAUSE_REQUEST_IS_ORDERED","VIRTUAL_COUPON_REQUEST_FORBIDDEN_BECAUSE_NOT_EXISTS_VIRTUAL_COUPON_CARD","VIRTUAL_COUPON_REQUEST_FORBIDDEN_BECAUSE_NOT_EXISTS_VIRTUAL_COUPON_SERVICES_NO_CURRENCY","VIRTUAL_COUPON_REQUEST_FORBIDDEN_BECAUSE_NOT_EXISTS_VIRTUAL_COUPON_SERVICE_IS_CURRENCY","VIRTUAL_COUPON_REQUEST_FORBIDDEN_BECAUSE_VIRTUAL_COUPON_FIX_AND_TERMINAL_PRICE_FORBIDDEN","VIRTUAL_COUPON_REQUEST_FORM_NOT_VALIDATED_BECAUSE_DECLARED_AMOUNT_IS_EMPTY","VIRTUAL_COUPON_REQUEST_FORM_NOT_VALIDATED_BECAUSE_EMAIL_EXCEEDED_MAX_VALUE","VIRTUAL_COUPON_REQUEST_FORM_NOT_VALIDATED_BECAUSE_EMAIL_INVALID_REGEX","VIRTUAL_COUPON_REQUEST_FORM_NOT_VALIDATED_BECAUSE_EMAIL_IS_EMPTY","VIRTUAL_COUPON_REQUEST_FORM_NOT_VALIDATED_BECAUSE_LIFETIME_IS_EMPTY","VIRTUAL_COUPON_REQUEST_FORM_NOT_VALIDATED_BECAUSE_NOMINAL_IS_EMPTY","VIRTUAL_COUPON_REQUEST_FORM_NOT_VALIDATED_BECAUSE_PHONE_NUMBER_EXCEEDED_MAX_VALUE","VIRTUAL_COUPON_REQUEST_FORM_NOT_VALIDATED_BECAUSE_PHONE_NUMBER_INVALID_REGEX","VIRTUAL_COUPON_REQUEST_FORM_NOT_VALIDATED_BECAUSE_PHONE_NUMBER_IS_EMPTY","VIRTUAL_COUPON_REQUEST_FORM_NOT_VALIDATED_BECAUSE_SEND_TO_EMAIL_DELIVERY_METHOD_NOT_SPECIFIED","VIRTUAL_COUPON_REQUEST_FORM_NOT_VALIDATED_BECAUSE_SEND_TO_EMAIL_IS_EMPTY","VIRTUAL_COUPON_REQUEST_FORM_NOT_VALIDATED_BECAUSE_SEND_TO_PHONE_NUMBER_DELIVERY_METHOD_NOT_SPECIFIED","VIRTUAL_COUPON_REQUEST_FORM_NOT_VALIDATED_BECAUSE_SEND_TO_PHONE_NUMBER_IS_EMPTY","VIRTUAL_COUPON_REQUEST_FORM_NOT_VALIDATED_BECAUSE_SERVICE_ID_WEB_IS_EMPTY","VIRTUAL_COUPON_REQUEST_FORM_NOT_VALIDATED_BECAUSE_VC_HOLDER_NAME_EXCEEDED_MAX_VALUE","VIRTUAL_COUPON_REQUEST_FORM_NOT_VALIDATED_BECAUSE_VC_HOLDER_NAME_IS_EMPTY","VIRTUAL_COUPON_REQUEST_FORM_NOT_VALIDATED_BECAUSE_VC_LIMIT_TYPE_ID_IS_EMPTY","VIRTUAL_COUPON_REQUEST_MODEL_NOT_FOUND","VIRTUAL_COUPON_SERVICE_MODEL_NOT_FOUND","VIRTUAL_COUPON_STATE_MODEL_NOT_FOUND"]},"defaultMessage":{"type":"string","description":"Сообщение API ошибки"},"description":{"type":"string","description":"Описание API ошибки для разработчика"},"wordId":{"type":"integer","format":"int32","description":"Идентификатор сообщения API ошибки"}},"title":"Общая API ошибка"},"Обьект идентификатора вида лимита для кошелька":{"type":"object","properties":{"limitKindId":{"type":"integer","format":"int32","description":"Идентификатор вида лимита для кошелька"}},"title":"Обьект идентификатора вида лимита для кошелька"},"Обьект идентификатора вида онлайн лимита для онлайн карты":{"type":"object","properties":{"onlLimitKindId":{"type":"integer","format":"int32","description":"Идентификатор вида онлайн лимита для онлайн карты"}},"title":"Обьект идентификатора вида онлайн лимита для онлайн карты"},"Обьект идентификатора группы талонов":{"type":"object","properties":{"groupCouponsId":{"type":"string","description":"Идентификатор группы талонов"}},"title":"Обьект идентификатора группы талонов"},"Обьект идентификатора причины отказа заявки":{"type":"object","properties":{"cancelCauseId":{"type":"integer","format":"int32","description":"Идентификатор причины отказа заявки"}},"title":"Обьект идентификатора причины отказа заявки"},"Обьект идентификатора состояния заявки":{"type":"object","properties":{"rqStateId":{"type":"integer","format":"int32","description":"Идентификатор состояния заявки"}},"title":"Обьект идентификатора состояния заявки"},"Обьект идентификатора состояния карты":{"type":"object","properties":{"cardStateId":{"type":"integer","format":"int32","description":"Идентификатор состояния карты"}},"title":"Обьект идентификатора состояния карты"},"Обьект идентификатора состояния талона":{"type":"object","properties":{"vcStateId":{"type":"integer","format":"int32","description":"Идентификатор состояния талона"}},"title":"Обьект идентификатора состояния талона"},"Обьект идентификатора схемы обслуживания":{"type":"object","properties":{"schemaNumber":{"type":"integer","format":"int32","description":"Идентификатор схемы обслуживания"}},"title":"Обьект идентификатора схемы обслуживания"},"Обьект идентификатора типа заявки на ОИ (ОП и ОС)":{"type":"object","properties":{"drDdTypeId":{"type":"integer","format":"int32","description":"Идентификатор типа заявки на ОИ (ОП и ОС)"}},"title":"Обьект идентификатора типа заявки на ОИ (ОП и ОС)"},"Обьект идентификатора типа лимита для кошелька":{"type":"object","properties":{"limitTypeId":{"type":"integer","format":"int32","description":"Идентификатор типа лимита для кошелька"}},"title":"Обьект идентификатора типа лимита для кошелька"},"Обьект идентификатора типа лимита талона":{"type":"object","properties":{"vcLimitTypeId":{"type":"integer","format":"int32","description":"Идентификатор типа лимита талона"}},"title":"Обьект идентификатора типа лимита талона"},"Обьект идентификатора типа онлайн карты":{"type":"object","properties":{"onlCardTypeId":{"type":"integer","format":"int32","description":"Идентификатор типа онлайн карты"}},"title":"Обьект идентификатора типа онлайн карты"},"Обьект идентификатора типа онлайн лимита для заявки":{"type":"object","properties":{"onlLimitTypeId":{"type":"integer","format":"int32","description":"Идентификатор типа онлайн лимита для заявки"}},"title":"Обьект идентификатора типа онлайн лимита для заявки"},"Обьект идентификатора типа операции для транзакции":{"type":"object","properties":{"trnTypeNumber":{"type":"integer","format":"int32","description":"Идентификатор типа операции для транзакции"}},"title":"Обьект идентификатора типа операции для транзакции"},"Обьект идентификатора точки обслуживания":{"type":"object","properties":{"posNumWeb":{"type":"integer","format":"int32","description":"Идентификатор точки обслуживания"}},"title":"Обьект идентификатора точки обслуживания"},"Обьект идентификатора услуги":{"type":"object","properties":{"serviceIdWeb":{"type":"integer","format":"int32","description":"Идентификатор услуги"}},"title":"Обьект идентификатора услуги"},"Обьект идентификатора услуги, которой платили (Счет/Кошелек)":{"type":"object","properties":{"serviceIdWeb":{"type":"integer","format":"int32","description":"Идентификатор услуги"}},"title":"Обьект идентификатора услуги, которой платили (Счет/Кошелек)"},"Онлайн карта":{"type":"object","properties":{"dayScheduleList":{"type":"array","description":"Расписания для онлайн карты","items":{"$ref":"#/definitions/День расписания для онлайн карты","originalRef":"День расписания для онлайн карты"}},"daysScheduleMask":{"type":"string","description":"Маска расписания обслужи"},"odometer":{"type":"integer","format":"int32","description":"Показания одометра ТС"},"onlCardType":{"description":"Тип онлайн карты","$ref":"#/definitions/Обьект идентификатора типа онлайн карты","originalRef":"Обьект идентификатора типа онлайн карты"},"onlLimitCard":{"description":"Онлайн лимиты по онлайн карте","$ref":"#/definitions/Онлайн лимиты по онлайн карте","originalRef":"Онлайн лимиты по онлайн карте"},"onlLimitCardServices":{"type":"array","description":"Онлайн лимиты по услугам по онлайн карте","items":{"$ref":"#/definitions/Онлайн лимиты по услуге по онлайн карте","originalRef":"Онлайн лимиты по услуге по онлайн карте"}},"plateNum":{"type":"string","description":"Номерной знак авто"},"timeFrom":{"description":"Время с которого разрешено обслуживание","$ref":"#/definitions/LocalTime","originalRef":"LocalTime"},"timeTo":{"description":"Время до которого разрешено обслуживание","$ref":"#/definitions/LocalTime","originalRef":"LocalTime"}},"title":"Онлайн карта"},"Онлайн карта c полной информацией":{"type":"object","properties":{"dayScheduleList":{"type":"array","description":"Расписания для онлайн карты","items":{"$ref":"#/definitions/День расписания для онлайн карты","originalRef":"День расписания для онлайн карты"}},"daysScheduleMask":{"type":"string","description":"Маска расписания"},"odometer":{"type":"integer","format":"int32","description":"Показания одометра ТС"},"onlCardType":{"description":"Тип онлайн карты","$ref":"#/definitions/Тип онлайн карты","originalRef":"Тип онлайн карты"},"onlLimitCard":{"description":"Онлайн лимиты по онлайн карте","$ref":"#/definitions/Онлайн лимиты по онлайн карте","originalRef":"Онлайн лимиты по онлайн карте"},"onlLimitCardServices":{"type":"array","description":"Онлайн лимиты по услугам по онлайн карте","items":{"$ref":"#/definitions/Онлайн лимиты по услуге по онлайн карте с полной информацией","originalRef":"Онлайн лимиты по услуге по онлайн карте с полной информацией"}},"plateNum":{"type":"string","description":"Номерной знак авто"},"timeFrom":{"description":"Время с которого разрешено обслуживание","$ref":"#/definitions/LocalTime","originalRef":"LocalTime"},"timeTo":{"description":"Время до которого разрешено обслуживание","$ref":"#/definitions/LocalTime","originalRef":"LocalTime"}},"title":"Онлайн карта c полной информацией"},"Онлайн карта без онлайн лимитов и расписания":{"type":"object","properties":{"daysScheduleMask":{"type":"string","description":"Маска расписания"},"odometer":{"type":"integer","format":"int32","description":"Показания одометра ТС"},"onlCardType":{"description":"Тип онлайн карты","$ref":"#/definitions/Обьект идентификатора типа онлайн карты","originalRef":"Обьект идентификатора типа онлайн карты"},"plateNum":{"type":"string","description":"Номерной знак авто"},"timeFrom":{"description":"Время с которого разрешено обслуживание","$ref":"#/definitions/LocalTime","originalRef":"LocalTime"},"timeTo":{"description":"Время до которого разрешено обслуживание","$ref":"#/definitions/LocalTime","originalRef":"LocalTime"}},"title":"Онлайн карта без онлайн лимитов и расписания"},"Онлайн карта с онлайн лимитами по онлайн карте":{"type":"object","properties":{"daysScheduleMask":{"type":"string","description":"Маска расписания"},"odometer":{"type":"integer","format":"int32","description":"Показания одометра ТС"},"onlCardType":{"description":"Тип онлайн карты","$ref":"#/definitions/Обьект идентификатора типа онлайн карты","originalRef":"Обьект идентификатора типа онлайн карты"},"onlLimitCard":{"description":"Онлайн лимиты по онлайн карты","$ref":"#/definitions/Онлайн лимиты по онлайн карте","originalRef":"Онлайн лимиты по онлайн карте"},"plateNum":{"type":"string","description":"Номерной знак авто"},"timeFrom":{"description":"Время с которого разрешено обслуживание","$ref":"#/definitions/LocalTime","originalRef":"LocalTime"},"timeTo":{"description":"Время до которого разрешено обслуживание","$ref":"#/definitions/LocalTime","originalRef":"LocalTime"}},"title":"Онлайн карта с онлайн лимитами по онлайн карте"},"Онлайн карта с онлайн лимитами по услуге":{"type":"object","properties":{"daysScheduleMask":{"type":"string","description":"Маска расписания"},"odometer":{"type":"integer","format":"int32","description":"Показания одометра ТС"},"onlCardType":{"description":"Тип онлайн карты","$ref":"#/definitions/Обьект идентификатора типа онлайн карты","originalRef":"Обьект идентификатора типа онлайн карты"},"onlLimitCardServices":{"type":"array","description":"Онлайн лимиты по услугам по онлайн карте","items":{"$ref":"#/definitions/Онлайн лимиты по услуге по онлайн карте","originalRef":"Онлайн лимиты по услуге по онлайн карте"}},"plateNum":{"type":"string","description":"Номерной знак авто"},"timeFrom":{"description":"Время с которого разрешено обслуживание","$ref":"#/definitions/LocalTime","originalRef":"LocalTime"},"timeTo":{"description":"Время до которого разрешено обслуживание","$ref":"#/definitions/LocalTime","originalRef":"LocalTime"}},"title":"Онлайн карта с онлайн лимитами по услуге"},"Онлайн карта с полной информацией без онлайн лимитов и расписания":{"type":"object","properties":{"daysScheduleMask":{"type":"string","description":"Маска расписания"},"odometer":{"type":"integer","format":"int32","description":"Показания одометра ТС"},"onlCardType":{"description":"Тип онлайн карты","$ref":"#/definitions/Тип онлайн карты","originalRef":"Тип онлайн карты"},"plateNum":{"type":"string","description":"Номерной знак авто"},"timeFrom":{"description":"Время с которого разрешено обслуживание","$ref":"#/definitions/LocalTime","originalRef":"LocalTime"},"timeTo":{"description":"Время до которого разрешено обслуживание","$ref":"#/definitions/LocalTime","originalRef":"LocalTime"}},"title":"Онлайн карта с полной информацией без онлайн лимитов и расписания"},"Онлайн карта с полной информацией и онлайн лимитами по онлайн карте":{"type":"object","properties":{"daysScheduleMask":{"type":"string","description":"Маска расписания"},"odometer":{"type":"integer","format":"int32","description":"Показания одометра ТС"},"onlCardType":{"description":"Тип онлайн карты","$ref":"#/definitions/Тип онлайн карты","originalRef":"Тип онлайн карты"},"onlLimitCard":{"description":"Онлайн лимиты по онлайн карте","$ref":"#/definitions/Онлайн лимиты по онлайн карте","originalRef":"Онлайн лимиты по онлайн карте"},"plateNum":{"type":"string","description":"Номерной знак авто"},"timeFrom":{"description":"Время с которого разрешено обслуживание","$ref":"#/definitions/LocalTime","originalRef":"LocalTime"},"timeTo":{"description":"Время до которого разрешено обслуживание","$ref":"#/definitions/LocalTime","originalRef":"LocalTime"}},"title":"Онлайн карта с полной информацией и онлайн лимитами по онлайн карте"},"Онлайн карта с полной информацией и онлайн лимитами по услуге":{"type":"object","properties":{"daysScheduleMask":{"type":"string","description":"Маска расписания"},"odometer":{"type":"integer","format":"int32","description":"Показания одометра ТС"},"onlCardType":{"description":"Тип онлайн карты","$ref":"#/definitions/Тип онлайн карты","originalRef":"Тип онлайн карты"},"onlLimitCardServices":{"type":"array","description":"Онлайн лимиты по услугам по онлайн карте","items":{"$ref":"#/definitions/Онлайн лимиты по услуге по онлайн карте с полной информацией","originalRef":"Онлайн лимиты по услуге по онлайн карте с полной информацией"}},"plateNum":{"type":"string","description":"Номерной знак авто"},"timeFrom":{"description":"Время с которого разрешено обслуживание","$ref":"#/definitions/LocalTime","originalRef":"LocalTime"},"timeTo":{"description":"Время до которого разрешено обслуживание","$ref":"#/definitions/LocalTime","originalRef":"LocalTime"}},"title":"Онлайн карта с полной информацией и онлайн лимитами по услуге"},"Онлайн карта с полной информацией и расписанием":{"type":"object","properties":{"dayScheduleList":{"type":"array","description":"Расписания для онлайн карты","items":{"$ref":"#/definitions/День расписания для онлайн карты","originalRef":"День расписания для онлайн карты"}},"daysScheduleMask":{"type":"string","description":"Маска расписания"},"odometer":{"type":"integer","format":"int32","description":"Показания одометра ТС"},"onlCardType":{"description":"Тип онлайн карты","$ref":"#/definitions/Тип онлайн карты","originalRef":"Тип онлайн карты"},"plateNum":{"type":"string","description":"Номерной знак авто"},"timeFrom":{"description":"Время с которого разрешено обслуживание","$ref":"#/definitions/LocalTime","originalRef":"LocalTime"},"timeTo":{"description":"Время до которого разрешено обслуживание","$ref":"#/definitions/LocalTime","originalRef":"LocalTime"}},"title":"Онлайн карта с полной информацией и расписанием"},"Онлайн карта с расписанием":{"type":"object","properties":{"dayScheduleList":{"type":"array","description":"Расписания для онлайн карты","items":{"$ref":"#/definitions/День расписания для онлайн карты","originalRef":"День расписания для онлайн карты"}},"daysScheduleMask":{"type":"string","description":"Маска расписания"},"odometer":{"type":"integer","format":"int32","description":"Показания одометра ТС"},"onlCardType":{"description":"Тип онлайн карты","$ref":"#/definitions/Обьект идентификатора типа онлайн карты","originalRef":"Обьект идентификатора типа онлайн карты"},"plateNum":{"type":"string","description":"Номерной знак авто"},"timeFrom":{"description":"Время с которого разрешено обслуживание","$ref":"#/definitions/LocalTime","originalRef":"LocalTime"},"timeTo":{"description":"Время до которого разрешено обслуживание","$ref":"#/definitions/LocalTime","originalRef":"LocalTime"}},"title":"Онлайн карта с расписанием"},"Онлайн лимиты по клиенту":{"type":"object","properties":{"dailyCurrentCount":{"type":"integer","format":"int64","description":"Текущий израсходованный суточный лимит по количеству обслуживаний"},"dailyCurrentSum":{"type":"number","description":"Текущий израсходованный суточный лимит по сумме обслуживаний"},"dailyLimitCount":{"type":"integer","format":"int64","description":"Суточный лимит по количеству обслуживаний"},"dailyLimitSum":{"type":"number","description":"Суточный лимит по сумме обслуживаний"},"monthlyCurrentCount":{"type":"integer","format":"int64","description":"Текущий израсходованный месячный лимит по количеству обслуживаний"},"monthlyCurrentSum":{"type":"number","description":"Текущий израсходованный месячный лимит по сумме обслуживаний"},"monthlyLimitCount":{"type":"integer","format":"int64","description":"Месячный лимит по количеству обслуживаний"},"monthlyLimitSum":{"type":"number","description":"Месячный лимит по сумме обслуживаний"},"weeklyCurrentCount":{"type":"integer","format":"int64","description":"Текущий израсходованный недельный лимит по количеству обслуживаний"},"weeklyCurrentSum":{"type":"number","description":"Текущий израсходованный недельный лимит по сумме обслуживаний"},"weeklyLimitCount":{"type":"integer","format":"int64","description":"Недельный лимит по количеству обслуживаний"},"weeklyLimitSum":{"type":"number","description":"Недельный лимит по сумме обслуживаний"}},"title":"Онлайн лимиты по клиенту"},"Онлайн лимиты по онлайн карте":{"type":"object","properties":{"dailyCurrentCount":{"type":"integer","format":"int64","description":"Текущий израсходованный суточный лимит по количеству обслуживаний"},"dailyCurrentSum":{"type":"number","description":"Текущий израсходованный суточный лимит по сумме обслуживаний"},"dailyLimitCount":{"type":"integer","format":"int64","description":"Суточный лимит по количеству обслуживаний"},"dailyLimitSum":{"type":"number","description":"Суточный лимит по сумме обслуживаний"},"monthlyCurrentCount":{"type":"integer","format":"int64","description":"Текущий израсходованный месячный лимит по количеству обслуживаний"},"monthlyCurrentSum":{"type":"number","description":"Текущий израсходованный месячный лимит по сумме обслуживаний"},"monthlyLimitCount":{"type":"integer","format":"int64","description":"Месячный лимит по количеству обслуживаний"},"monthlyLimitSum":{"type":"number","description":"Месячный лимит по сумме обслуживаний"},"weeklyCurrentCount":{"type":"integer","format":"int64","description":"Текущий израсходованный недельный лимит по количеству обслуживаний"},"weeklyCurrentSum":{"type":"number","description":"Текущий израсходованный недельный лимит по сумме обслуживаний"},"weeklyLimitCount":{"type":"integer","format":"int64","description":"Недельный лимит по количеству обслуживаний"},"weeklyLimitSum":{"type":"number","description":"Недельный лимит по сумме обслуживаний"}},"title":"Онлайн лимиты по онлайн карте"},"Онлайн лимиты по услуге по клиенту":{"type":"object","properties":{"dailyCurrent":{"type":"number","description":"Текущий израсходованный суточный лимит"},"dailyLimit":{"type":"number","description":"Суточный лимит"},"monthlyCurrent":{"type":"number","description":"Текущий израсходованный месячный лимит"},"monthlyLimit":{"type":"number","description":"Месячный лимит"},"service":{"description":"Услуга","$ref":"#/definitions/Обьект идентификатора услуги","originalRef":"Обьект идентификатора услуги"},"weeklyCurrent":{"type":"number","description":"Текущий израсходованный недельный лимит"},"weeklyLimit":{"type":"number","description":"Недельный лимит"}},"title":"Онлайн лимиты по услуге по клиенту"},"Онлайн лимиты по услуге по клиенту c полной информацией":{"type":"object","properties":{"dailyCurrent":{"type":"number","description":"Текущий израсходованный суточный лимит"},"dailyLimit":{"type":"number","description":"Суточный лимит"},"monthlyCurrent":{"type":"number","description":"Текущий израсходованный месячный лимит"},"monthlyLimit":{"type":"number","description":"Месячный лимит"},"service":{"description":"Услуга","$ref":"#/definitions/Услуга","originalRef":"Услуга"},"weeklyCurrent":{"type":"number","description":"Текущий израсходованный недельный лимит"},"weeklyLimit":{"type":"number","description":"Недельный лимит"}},"title":"Онлайн лимиты по услуге по клиенту c полной информацией"},"Онлайн лимиты по услуге по онлайн карте":{"type":"object","properties":{"dailyCurrent":{"type":"number","description":"Текущий израсходованный суточный лимит"},"dailyLimit":{"type":"number","description":"Суточный лимит"},"monthlyCurrent":{"type":"number","description":"Текущий израсходованный месячный израсходованный лимит"},"monthlyLimit":{"type":"number","description":"Месячный лимит"},"onlLimitKind":{"description":"Вид онлайн лимита","$ref":"#/definitions/Обьект идентификатора вида онлайн лимита для онлайн карты","originalRef":"Обьект идентификатора вида онлайн лимита для онлайн карты"},"service":{"description":"Услуга","$ref":"#/definitions/Обьект идентификатора услуги","originalRef":"Обьект идентификатора услуги"},"weeklyCurrent":{"type":"number","description":"Текущий израсходованный недельный израсходованный лимит"},"weeklyLimit":{"type":"number","description":"Недельный лимит"}},"title":"Онлайн лимиты по услуге по онлайн карте"},"Онлайн лимиты по услуге по онлайн карте с полной информацией":{"type":"object","properties":{"dailyCurrent":{"type":"number","description":"Текущий израсходованный суточный лимит"},"dailyLimit":{"type":"number","description":"Суточный лимит"},"monthlyCurrent":{"type":"number","description":"Текущий израсходованный месячный израсходованный лимит"},"monthlyLimit":{"type":"number","description":"Месячный лимит"},"onlLimitKind":{"description":"Вид онлайн лимита","$ref":"#/definitions/Вид онлайн лимита для онлайн карты","originalRef":"Вид онлайн лимита для онлайн карты"},"service":{"description":"Услуга","$ref":"#/definitions/Услуга","originalRef":"Услуга"},"weeklyCurrent":{"type":"number","description":"Текущий израсходованный недельный израсходованный лимит"},"weeklyLimit":{"type":"number","description":"Недельный лимит"}},"title":"Онлайн лимиты по услуге по онлайн карте с полной информацией"},"Отчет остатка на карте для электронного кошелька":{"type":"object","properties":{"beginDate":{"type":"string","format":"date-time","description":"Период с"},"cardHolderName":{"type":"string","description":"Имя держателя карты"},"cardNumber":{"type":"string","description":"Номер карты"},"debit":{"type":"number","description":"Списано"},"endDate":{"type":"string","format":"date-time","description":"Период по"},"inBalance":{"type":"number","description":"Входящий остаток"},"notRelizedDebit":{"type":"number","description":"Нереализованные ОС"},"notRelizedRecharge":{"type":"number","description":"Нереализованные ОП"},"outBalance":{"type":"number","description":"Исходящий остаток"},"recharge":{"type":"number","description":"Пополнено"},"served":{"type":"number","description":"Реализовано"},"service":{"description":"Услуга","$ref":"#/definitions/Обьект идентификатора услуги","originalRef":"Обьект идентификатора услуги"}},"title":"Отчет остатка на карте для электронного кошелька"},"Отчет остатка на карте для электронного кошелька c полной информацией":{"type":"object","properties":{"beginDate":{"type":"string","format":"date-time","description":"Период с"},"cardHolderName":{"type":"string","description":"Имя держателя карты"},"cardNumber":{"type":"string","description":"Номер карты"},"debit":{"type":"number","description":"Списано"},"endDate":{"type":"string","format":"date-time","description":"Период по"},"inBalance":{"type":"number","description":"Входящий остаток"},"notRelizedDebit":{"type":"number","description":"Нереализованные ОС"},"notRelizedRecharge":{"type":"number","description":"Нереализованные ОП"},"outBalance":{"type":"number","description":"Исходящий остаток"},"recharge":{"type":"number","description":"Пополнено"},"served":{"type":"number","description":"Реализовано"},"service":{"description":"Услуга","$ref":"#/definitions/Услуга","originalRef":"Услуга"}},"title":"Отчет остатка на карте для электронного кошелька c полной информацией"},"Пользовательские настройки":{"type":"object","properties":{"accessType":{"type":"integer","format":"int32","description":"Тип доступа <br>если accessType = 0, то в PWSAdmin установлен доступ Ко всем картам и счетам клиента <br>если accessType = 1, то в PWSAdmin установлен доступ Только к своим картам и всем счетам клиента <br>если accessType = 2, то в PWSAdmin установлен доступ Только к своим картам <br>если accessType = 3, то установлен доступ Только к своей карте (нет в PWS Admin) (мобильный пользователь)"},"allowAccount":{"type":"boolean","description":"Доступ к счету <br>пользователь не должен быть мобильным пользователем, поле userIsMobileUser = false, иначе доступ будет заблокирован <br>если allowAccount = false, то доступ к счету заблокирован <br>если allowAccount = true, то доступ к счету разблокированзависит от типа доступа, поле accessType"},"allowBlockCardRequest":{"type":"boolean","description":"Доступ к заявке на блокировку карты <br>доступ к счету должен быть разблокирован, поле allowAccount = true, иначе доступ будет заблокирован <br>если allowBlockCardRequest = false, то доступ к заявке на блокировку карты заблокирован <br>если allowBlockCardRequest = true, то доступ к заявке на блокировку карты разблокирован"},"allowChangeHolderRequest":{"type":"boolean","description":"Доступ к заявке изменения держателя карты <br>доступ к счету должен быть разблокирован, поле allowAccount = true, иначе доступ будет заблокирован <br>если allowChangeHolderRequest = false, то доступ к заявке изменения держателя карты заблокирован <br>если allowChangeHolderRequest = true, то доступ к заявке изменения держателя карты разблокирован"},"allowDdRequest":{"type":"boolean","description":"Доступ к заявке ОС <br>доступ к счету должен быть разблокирован, поле allowAccount = true, иначе доступ будет заблокирован <br>если allowDdRequest = false, то доступ к заявке ОС заблокирован <br>если allowDdRequest = true, то доступ к заявке ОС разблокирован"},"allowDrDdRequest":{"type":"boolean","description":"Доступ к заявке на ОИ (ОП и ОС) <br>доступ к счету должен быть разблокирован, поле allowAccount = true, иначе доступ будет заблокирован <br>если allowDrDdRequest = false, то доступ к заявке на ОИ (ОП и ОС) заблокирован <br>если allowDrDdRequest = true, то доступ к заявке на ОИ (ОП и ОС) разблокирован"},"allowDrRequest":{"type":"boolean","description":"Доступ к заявке ОП <br>доступ к счету должен быть разблокирован, поле allowAccount = true, иначе доступ будет заблокирован <br>если allowDrRequest = false, то доступ к заявке ОП заблокирован <br>если allowDrRequest = true, то доступ к заявке ОП разблокирован"},"allowOilRequest":{"type":"boolean","description":"Доступ к заявке на ОИЛ <br>доступ к счету должен быть разблокирован, поле allowAccount = true, иначе доступ будет заблокирован <br>если allowOilRequest = false, то доступ к заявке на ОИЛ заблокирован <br>если allowOilRequest = true, то доступ к заявке на ОИЛ разблокирован"},"allowOnlClientLimit":{"type":"boolean","description":"Доступ к онлайн лимитам по клиенту <br>доступ к счету должен быть разблокирован, поле allowAccount = true, иначе доступ будет заблокирован <br>если allowOnlClientLimit = false, то доступ к онлайн лимитам по клиенту заблокирован <br>если allowOnlClientLimit = true, то доступ к онлайн лимитам по клиенту разблокирован"},"allowOnlClientLimitService":{"type":"boolean","description":"Доступ к онлайн лимитам по услугам по клиенту <br>доступ к счету должен быть разблокирован, поле allowAccount = true, иначе доступ будет заблокирован <br>если allowOnlClientLimitService = false, <br>то доступ к онлайн лимитам по услугам по клиенту заблокирован <br>если allowOnlClientLimitService = true, <br>то доступ к онлайн лимитам по услугам по клиенту разблокирован"},"allowOnlLimitCardRequest":{"type":"boolean","description":"Доступ к заявке на изменение онлайн лимита для онлайн карты <br>доступ к счету должен быть разблокирован, поле allowAccount = true, иначе доступ будет заблокирован <br>если allowOnlLimitCardRequest = false, <br>то доступ к заявке на изменение онлайн лимита для онлайн карты заблокирован <br>если allowOnlLimitCardRequest = true, <br>то доступ к заявке нна изменение онлайн лимита для онлайн карты разблокирован"},"allowTimeCredit":{"type":"boolean","description":"Разрешение временного кредита <br>если allowTimeCredit = false, то не доступен временный кредит <br>если allowTimeCredit = true, то доступен временный кредит"},"allowUnblockCardRequest":{"type":"boolean","description":"Доступ к заявке на разблокировку карты <br>если allowUnblockCardRequest = false, то доступ к заявке на разблокировку карты заблокирован <br>если allowUnblockCardRequest = true, то доступ к заявке на разблокировку карты разблокирован"},"allowVc":{"type":"boolean","description":"Доступ к талону <br>пользователь не должен быть держателем карты, поле userIsCardHolder = false, иначе доступ будет заблокирован <br>и пользователь не должен быть мобильным пользователем, поле userIsMobileUser = false, иначе доступ будет заблокирован <br>если allowVc = false, то доступ к талону заблокирован <br>если allowVc = true, то доступ к талону разблокирован"},"allowVcFixPrice":{"type":"boolean","description":"Доступ к заявке на талон по фиксированой цене <br>если allowVcFixPrice = false, то доступ к заявке на талон по фиксированой цене заблокирован <br>если allowVcFixPrice = true, то доступ к заявке на талон по фиксированой цене разблокирован"},"allowVcTerminalPrice":{"type":"boolean","description":"Доступ к заявке на талон по цене терминала <br>если allowVcTerminalPrice = false, то доступ к заявке на талон по цене терминала заблокирован <br>если allowVcTerminalPrice = true, то доступ к заявке на талон по цене терминала разблокирован"},"amountDecimalCount":{"type":"integer","format":"int32","description":"Точность для услуги (количество цифр после запятой)"},"balanceOfCurrencyForVcReq":{"type":"number","description":"Остаток в валюте для заяки на талон"},"blockedToDate":{"type":"string","format":"date-time","description":"Дата до которого заблокирован пользователь <br>если blockedToDate = null, то блокировки нет <br>если blockedToDate имеет значние, то это дата до которой заблокирован пользователь"},"canSendOcImm":{"type":"integer","format":"int32","description":"Настройка работы создания и отображение заявок <br>sendOc = false, то не отправлять заявку после создания <br>sendOc = true, то отправить заявку после создания <br>если canSendOcImm = 0, то в PWSAdmin установлено Скрыть флаг 'Отправить после создания', <br>допустимые значения sendOc = false или sendOc = true, значение по умолчанию sendOc = false <br>если canSendOcImm = 1, то в PWSAdmin установлено Отправить только после проверки, <br>допустимое значения и значение по умолчанию sendOc = false <br>если canSendOcImm = 2, то в PWSAdmin установлено Отправлять сразу после создания, <br>допустимое значения и значение по умолчанию sendOc = true <br>при создании заявки, поле sendOc можно не указыть, значение поля sendOc будет установлено по умолчанию"},"clientIsBonus":{"type":"boolean","description":"Признак клиента карт бонусов <br>если clientIsBonus = false, то клиент не является клиентом карт бонусов <br>если clientIsBonus = true, то клиент является клиентом карт бонусов "},"clientState":{"type":"integer","format":"int32","description":"Состояние клиента <br>если clientState = 1, то состояние клиента Создано <br>если clientState = 2, то состояние клиента Выслано приглашение <br>если clientState = 3, то состояние клиента Без подписки <br>если clientState = 4, то состояние клиента С подпиской <br>если clientState = 5, то состояние клиента Заблокирован"},"clientType":{"type":"integer","format":"int32","description":"Тип клиента <br>если clientType = 1, то тип клиента является Фирма <br>если clientType = 2, то тип клиента является Частное лицо"},"costDecimalCount":{"type":"integer","format":"int32","description":"Точность для цены (количество цифр после запятой)"},"currencyDecimalCount":{"type":"integer","format":"int32","description":"Точность для валюты (количество цифр после запятой)"},"dailyLimAlarmDebtorSign":{"type":"boolean","description":"Признак превышения суточного сигнального порога <br>если dailyLimAlarmDebtorSign = false, то суточный сигнальный порог не превышен <br>если dailyLimAlarmDebtorSign = true, то суточный сигнальный порог превышен"},"dailyLimInfoDebtorSign":{"type":"boolean","description":"Признак превышения суточного информационного порога <br>если dailyLimInfoDebtorSign = false, то суточный информационный порог не превышен <br>если dailyLimInfoDebtorSign = true, то суточный информационный порог превышен"},"emitentNumber":{"type":"integer","format":"int32","description":"Номер эмитента"},"existsVcCard":{"type":"boolean","description":"Признач наличия виртуальной карты на талоны <br>если existsVcCard = false, то нет виртуальной карты на талоны <br>если existsVcCard = true, то есть виртуальная карта на талоны"},"existsVcServiceIsCurrency":{"type":"boolean","description":"Признак наличия валюты для заявки на талон <br>если existsVcServiceIsCurrency = false, то нет наличия валюты для заявки на талон <br>если existsVcServiceIsCurrency = true, то есть валюта для заявки на талон"},"existsVcServicesNoCurrency":{"type":"boolean","description":"Признак наличия услуг для заявки на талон без учета валюты <br>если existsVcServicesNoCurrency = false, то нет наличия услуг для заявки на талон без учета валюты <br>если existsVcServicesNoCurrency = true, то есть услуги для заявки на талон без учета валюты"},"filialNumber":{"type":"integer","format":"int32","description":"Номер филиала"},"hideDiscont":{"type":"boolean","description":"Признак скрытия скидок <br>если hideDiscont = false, то показывать скидки <br>если hideDiscont = true, то скрывать кредит"},"hideFieldSendOcInRequest":{"type":"boolean","description":"Признак скрытия поля sendOc в заявках <br>если hideFieldSendOcInRequest = false, то поле sendOc нужно отображать <br>если hideFieldSendOcInRequest = true, то поле sendOc нужно скрыть"},"hideTime":{"type":"boolean","description":"Признак скрытия времени <br>если hideTime = false, то показывать время <br>если hideTime = true, то скрывать время"},"ipAtLogin":{"type":"string","description":"IP при входе"},"lngId":{"type":"integer","format":"int32","description":"Идентификатор языка"},"login":{"type":"string","description":"Логин"},"loyaltyCardClient":{"type":"boolean","description":"Признак клиента карт лояльности <br>если loyaltyCardClient = false, то клиент не является клиентом карт лояльности <br>если loyaltyCardClient = true, то клиент является клиентом карт лояльности "},"monthlyLimAlarmDebtorSign":{"type":"boolean","description":"Признак превышения месячного сигнального порога <br>если monthlyLimAlarmDebtorSign = false, то месячный сигнальный порог не превышен <br>если monthlyLimAlarmDebtorSign = true, то месячный сигнальный порог превышен"},"monthlyLimInfoDebtorSign":{"type":"boolean","description":"Признак превышения месячного информационного порога <br>если dailyLimInfoDebtorSign = false, то месячный информационный порог не превышен <br>если dailyLimInfoDebtorSign = true, то месячный информационный порог превышен"},"showMaxConsumption":{"type":"boolean","description":"Признак показа максимального расхода <br>если showMaxConsumption = false, то скрывать максимальный расход <br>если showMaxConsumption = true, то показывать максимальный расход"},"showOdometr":{"type":"boolean","description":"Признак показа показаний одометра ТС <br>если showOdometr = false, то скрывать показания одометра ТС <br>если showOdometr = true, то показывать показания одометра ТС"},"showPetroltank":{"type":"boolean","description":"Признак показа обьема бака ТС <br>если showPetroltank = false, то скрывать обьем бака ТС <br>если showPetroltank = true, то показывать обьем бака ТС"},"subscribeOutOfDate":{"type":"boolean","description":"Признак истечения срока подписки <br>если subscribeOutOfDate = false, то окончился срок действия <br>если subscribeOutOfDate = true, то подписка действует"},"tempPassword":{"type":"boolean","description":"Признак временного пароля <br>если tempPassword = false, то не установлен временный пароль <br>если tempPassword = true, то установлен временный пароль"},"testClient":{"type":"boolean","description":"Признак тестового клиента <br>если testClient = false, то клиент является тестовым <br>если testClient = true, то клиент не является тестовым"},"userIsCardHolder":{"type":"boolean","description":"Признак держатель карты <br>если userIsCardHolder = false, то пользователь не является держателем карты <br>если userIsCardHolder = true, то пользователь держатель карты"},"userIsMobileUser":{"type":"boolean","description":"Признак мобильного пользователя <br>если userIsMobileUser = false, то пользователь не является мобильным пользователем <br>если userIsMobileUser = true, то пользователь является мобильным пользователем"},"vcCodeExpirationDate":{"type":"string","format":"date","description":"Срок действия кодов для талона"},"vcCodeTableNum":{"type":"integer","format":"int32","description":"Номер таблицы кодов для талона"},"vcHasFreeCode":{"type":"boolean","description":"Признак наличия свободного кода для талона <br>если vcHasFreeCode = false, то нет наличия свободного секретного кода для талона <br>если vcHasFreeCode = true, то есть свободный секретный код для талона"},"vcMaxEmailSendCount":{"type":"integer","format":"int32","description":"Максимальное количество сообщений на адрес электронной почты для заявки на талон"},"vcMaxOneCouponSum":{"type":"integer","format":"int32","description":"Максимальное сумма для одного талона (в валюте)"},"vcMaxOneCouponValue":{"type":"integer","format":"int32","description":"Максимальное значение для одного талона (в единицах услуги)"},"vcMaxSmsSendCount":{"type":"integer","format":"int32","description":"Максимальное количество sms сообщений для заявки на талон"},"vcMaxValidityDays":{"type":"integer","format":"int32","description":"Максимальное количество дней для срока использования талона"},"vcPinExpirationDate":{"type":"string","format":"date","description":"Срок действия PIN3 для талона"},"vcPinStateIsBlock":{"type":"boolean","description":"Признак блокировки PIN3 для талона <br>если vcPinStateIsBlock = false, то PIN3 для талона разблокирован <br>если vcPinStateIsBlock = true, то PIN3 для талона разблокирован заблокирован"},"weeklyLimAlarmDebtorSign":{"type":"boolean","description":"Признак превышения недельного сигнального порога <br>если weeklyLimAlarmDebtorSign = false, то недельный сигнальный порог не превышен <br>если weeklyLimAlarmDebtorSign = true, то недельный сигнальный порог превышен"},"weeklyLimInfoDebtorSign":{"type":"boolean","description":"Признак превышения недельного информационного порога <br>если weeklyLimInfoDebtorSign = false, то недельный информационный порог не превышен <br>если weeklyLimInfoDebtorSign = true, то недельный информационный порог превышен"}},"title":"Пользовательские настройки"},"Причина отказа заявки":{"type":"object","properties":{"cancelCauseId":{"type":"integer","format":"int32","description":"Идентификатор причины отказа заявки"},"cancelCauseName":{"type":"string","description":"Название причины отказа заявки"},"cancelCauseWordId":{"type":"integer","format":"int32","description":"Идентификатор названия причины отказа заявки"}},"title":"Причина отказа заявки"},"Слово языка":{"type":"object","properties":{"lngWord":{"type":"string","description":"Слово (по умолчанию)"},"phrase":{"type":"string","description":"Фраза (изменяемая эмитентом)"},"word":{"type":"string","description":"Слово (из слова (по умолчанию) или фразы (изменяемая эмитентом), фраза приоритетнее)"},"wordId":{"type":"integer","format":"int32","description":"Идентификатор слова"}},"title":"Слово языка"},"Состояние карты":{"type":"object","properties":{"cardStateId":{"type":"integer","format":"int32","description":"Идентификатор состояния карты"},"cardStateName":{"type":"string","description":"Название состояния карты"},"cardStateWordId":{"type":"integer","format":"int32","description":"Идентификатор названия состояния карты"}},"title":"Состояние карты"},"Состояния заявки":{"type":"object","properties":{"rqStateId":{"type":"integer","format":"int32","description":"Идентификатор состояния заявки"},"rqStateName":{"type":"string","description":"Название состояния заявки"},"rqStateWordId":{"type":"integer","format":"int32","description":"Идентификатор названия состояния заявки"}},"title":"Состояния заявки"},"Состояния талона":{"type":"object","properties":{"vcStateId":{"type":"integer","format":"int32","description":"Идентификатор состояния талона"},"vcStateName":{"type":"string","description":"Название состояния талона"},"vcStateWordId":{"type":"integer","format":"int32","description":"Идентификатор названия состояния талона"}},"title":"Состояния талона"},"Страница«Держатель талона»":{"type":"object","properties":{"content":{"type":"array","description":"Содержание","items":{"$ref":"#/definitions/Держатель талона","originalRef":"Держатель талона"}},"empty":{"type":"boolean","description":"Признак пустой страницы"},"first":{"type":"boolean","description":"Признак первой страницы"},"last":{"type":"boolean","description":"Признак последней страницы"},"number":{"type":"integer","format":"int32","description":"Номер страницы (введется с нуля)"},"numberOfElements":{"type":"integer","format":"int32","description":"Количество элементов на странице"},"pageable":{"description":"Запрос страницы","$ref":"#/definitions/Запрос страницы","originalRef":"Запрос страницы"},"size":{"type":"integer","format":"int32","description":"Количество элементов на страницу заданное пользователем (если не задано, берем по умолчани)"},"totalElements":{"type":"integer","format":"int64","description":"Всего элементов"},"totalPages":{"type":"integer","format":"int32","description":"Всего страниц"}},"title":"Страница«Держатель талона»"},"Страница«Заявка на ОИ (ОП и ОС) с полной информацией»":{"type":"object","properties":{"content":{"type":"array","description":"Содержание","items":{"$ref":"#/definitions/Заявка на ОИ (ОП и ОС) с полной информацией","originalRef":"Заявка на ОИ (ОП и ОС) с полной информацией"}},"empty":{"type":"boolean","description":"Признак пустой страницы"},"first":{"type":"boolean","description":"Признак первой страницы"},"last":{"type":"boolean","description":"Признак последней страницы"},"number":{"type":"integer","format":"int32","description":"Номер страницы (введется с нуля)"},"numberOfElements":{"type":"integer","format":"int32","description":"Количество элементов на странице"},"pageable":{"description":"Запрос страницы","$ref":"#/definitions/Запрос страницы","originalRef":"Запрос страницы"},"size":{"type":"integer","format":"int32","description":"Количество элементов на страницу заданное пользователем (если не задано, берем по умолчани)"},"totalElements":{"type":"integer","format":"int64","description":"Всего элементов"},"totalPages":{"type":"integer","format":"int32","description":"Всего страниц"}},"title":"Страница«Заявка на ОИ (ОП и ОС) с полной информацией»"},"Страница«Заявка на ОИ (ОП и ОС)»":{"type":"object","properties":{"content":{"type":"array","description":"Содержание","items":{"$ref":"#/definitions/Заявка на ОИ (ОП и ОС)","originalRef":"Заявка на ОИ (ОП и ОС)"}},"empty":{"type":"boolean","description":"Признак пустой страницы"},"first":{"type":"boolean","description":"Признак первой страницы"},"last":{"type":"boolean","description":"Признак последней страницы"},"number":{"type":"integer","format":"int32","description":"Номер страницы (введется с нуля)"},"numberOfElements":{"type":"integer","format":"int32","description":"Количество элементов на странице"},"pageable":{"description":"Запрос страницы","$ref":"#/definitions/Запрос страницы","originalRef":"Запрос страницы"},"size":{"type":"integer","format":"int32","description":"Количество элементов на страницу заданное пользователем (если не задано, берем по умолчани)"},"totalElements":{"type":"integer","format":"int64","description":"Всего элементов"},"totalPages":{"type":"integer","format":"int32","description":"Всего страниц"}},"title":"Страница«Заявка на ОИ (ОП и ОС)»"},"Страница«Заявка на ОИЛ с полной информацией»":{"type":"object","properties":{"content":{"type":"array","description":"Содержание","items":{"$ref":"#/definitions/Заявка на ОИЛ с полной информацией","originalRef":"Заявка на ОИЛ с полной информацией"}},"empty":{"type":"boolean","description":"Признак пустой страницы"},"first":{"type":"boolean","description":"Признак первой страницы"},"last":{"type":"boolean","description":"Признак последней страницы"},"number":{"type":"integer","format":"int32","description":"Номер страницы (введется с нуля)"},"numberOfElements":{"type":"integer","format":"int32","description":"Количество элементов на странице"},"pageable":{"description":"Запрос страницы","$ref":"#/definitions/Запрос страницы","originalRef":"Запрос страницы"},"size":{"type":"integer","format":"int32","description":"Количество элементов на страницу заданное пользователем (если не задано, берем по умолчани)"},"totalElements":{"type":"integer","format":"int64","description":"Всего элементов"},"totalPages":{"type":"integer","format":"int32","description":"Всего страниц"}},"title":"Страница«Заявка на ОИЛ с полной информацией»"},"Страница«Заявка на ОИЛ»":{"type":"object","properties":{"content":{"type":"array","description":"Содержание","items":{"$ref":"#/definitions/Заявка на ОИЛ","originalRef":"Заявка на ОИЛ"}},"empty":{"type":"boolean","description":"Признак пустой страницы"},"first":{"type":"boolean","description":"Признак первой страницы"},"last":{"type":"boolean","description":"Признак последней страницы"},"number":{"type":"integer","format":"int32","description":"Номер страницы (введется с нуля)"},"numberOfElements":{"type":"integer","format":"int32","description":"Количество элементов на странице"},"pageable":{"description":"Запрос страницы","$ref":"#/definitions/Запрос страницы","originalRef":"Запрос страницы"},"size":{"type":"integer","format":"int32","description":"Количество элементов на страницу заданное пользователем (если не задано, берем по умолчани)"},"totalElements":{"type":"integer","format":"int64","description":"Всего элементов"},"totalPages":{"type":"integer","format":"int32","description":"Всего страниц"}},"title":"Страница«Заявка на ОИЛ»"},"Страница«Заявка на блокировку карты с полной информацией»":{"type":"object","properties":{"content":{"type":"array","description":"Содержание","items":{"$ref":"#/definitions/Заявка на блокировку карты с полной информацией","originalRef":"Заявка на блокировку карты с полной информацией"}},"empty":{"type":"boolean","description":"Признак пустой страницы"},"first":{"type":"boolean","description":"Признак первой страницы"},"last":{"type":"boolean","description":"Признак последней страницы"},"number":{"type":"integer","format":"int32","description":"Номер страницы (введется с нуля)"},"numberOfElements":{"type":"integer","format":"int32","description":"Количество элементов на странице"},"pageable":{"description":"Запрос страницы","$ref":"#/definitions/Запрос страницы","originalRef":"Запрос страницы"},"size":{"type":"integer","format":"int32","description":"Количество элементов на страницу заданное пользователем (если не задано, берем по умолчани)"},"totalElements":{"type":"integer","format":"int64","description":"Всего элементов"},"totalPages":{"type":"integer","format":"int32","description":"Всего страниц"}},"title":"Страница«Заявка на блокировку карты с полной информацией»"},"Страница«Заявка на блокировку карты»":{"type":"object","properties":{"content":{"type":"array","description":"Содержание","items":{"$ref":"#/definitions/Заявка на блокировку карты","originalRef":"Заявка на блокировку карты"}},"empty":{"type":"boolean","description":"Признак пустой страницы"},"first":{"type":"boolean","description":"Признак первой страницы"},"last":{"type":"boolean","description":"Признак последней страницы"},"number":{"type":"integer","format":"int32","description":"Номер страницы (введется с нуля)"},"numberOfElements":{"type":"integer","format":"int32","description":"Количество элементов на странице"},"pageable":{"description":"Запрос страницы","$ref":"#/definitions/Запрос страницы","originalRef":"Запрос страницы"},"size":{"type":"integer","format":"int32","description":"Количество элементов на страницу заданное пользователем (если не задано, берем по умолчани)"},"totalElements":{"type":"integer","format":"int64","description":"Всего элементов"},"totalPages":{"type":"integer","format":"int32","description":"Всего страниц"}},"title":"Страница«Заявка на блокировку карты»"},"Страница«Заявка на изменение держателя карты с полной информацией»":{"type":"object","properties":{"content":{"type":"array","description":"Содержание","items":{"$ref":"#/definitions/Заявка на изменение держателя карты с полной информацией","originalRef":"Заявка на изменение держателя карты с полной информацией"}},"empty":{"type":"boolean","description":"Признак пустой страницы"},"first":{"type":"boolean","description":"Признак первой страницы"},"last":{"type":"boolean","description":"Признак последней страницы"},"number":{"type":"integer","format":"int32","description":"Номер страницы (введется с нуля)"},"numberOfElements":{"type":"integer","format":"int32","description":"Количество элементов на странице"},"pageable":{"description":"Запрос страницы","$ref":"#/definitions/Запрос страницы","originalRef":"Запрос страницы"},"size":{"type":"integer","format":"int32","description":"Количество элементов на страницу заданное пользователем (если не задано, берем по умолчани)"},"totalElements":{"type":"integer","format":"int64","description":"Всего элементов"},"totalPages":{"type":"integer","format":"int32","description":"Всего страниц"}},"title":"Страница«Заявка на изменение держателя карты с полной информацией»"},"Страница«Заявка на изменение держателя карты»":{"type":"object","properties":{"content":{"type":"array","description":"Содержание","items":{"$ref":"#/definitions/Заявка на изменение держателя карты","originalRef":"Заявка на изменение держателя карты"}},"empty":{"type":"boolean","description":"Признак пустой страницы"},"first":{"type":"boolean","description":"Признак первой страницы"},"last":{"type":"boolean","description":"Признак последней страницы"},"number":{"type":"integer","format":"int32","description":"Номер страницы (введется с нуля)"},"numberOfElements":{"type":"integer","format":"int32","description":"Количество элементов на странице"},"pageable":{"description":"Запрос страницы","$ref":"#/definitions/Запрос страницы","originalRef":"Запрос страницы"},"size":{"type":"integer","format":"int32","description":"Количество элементов на страницу заданное пользователем (если не задано, берем по умолчани)"},"totalElements":{"type":"integer","format":"int64","description":"Всего элементов"},"totalPages":{"type":"integer","format":"int32","description":"Всего страниц"}},"title":"Страница«Заявка на изменение держателя карты»"},"Страница«Заявка на изменение онлайн лимита для онлайн карты с полной информацией»":{"type":"object","properties":{"content":{"type":"array","description":"Содержание","items":{"$ref":"#/definitions/Заявка на изменение онлайн лимита для онлайн карты с полной информацией","originalRef":"Заявка на изменение онлайн лимита для онлайн карты с полной информацией"}},"empty":{"type":"boolean","description":"Признак пустой страницы"},"first":{"type":"boolean","description":"Признак первой страницы"},"last":{"type":"boolean","description":"Признак последней страницы"},"number":{"type":"integer","format":"int32","description":"Номер страницы (введется с нуля)"},"numberOfElements":{"type":"integer","format":"int32","description":"Количество элементов на странице"},"pageable":{"description":"Запрос страницы","$ref":"#/definitions/Запрос страницы","originalRef":"Запрос страницы"},"size":{"type":"integer","format":"int32","description":"Количество элементов на страницу заданное пользователем (если не задано, берем по умолчани)"},"totalElements":{"type":"integer","format":"int64","description":"Всего элементов"},"totalPages":{"type":"integer","format":"int32","description":"Всего страниц"}},"title":"Страница«Заявка на изменение онлайн лимита для онлайн карты с полной информацией»"},"Страница«Заявка на изменение онлайн лимита для онлайн карты»":{"type":"object","properties":{"content":{"type":"array","description":"Содержание","items":{"$ref":"#/definitions/Заявка на изменение онлайн лимита для онлайн карты","originalRef":"Заявка на изменение онлайн лимита для онлайн карты"}},"empty":{"type":"boolean","description":"Признак пустой страницы"},"first":{"type":"boolean","description":"Признак первой страницы"},"last":{"type":"boolean","description":"Признак последней страницы"},"number":{"type":"integer","format":"int32","description":"Номер страницы (введется с нуля)"},"numberOfElements":{"type":"integer","format":"int32","description":"Количество элементов на странице"},"pageable":{"description":"Запрос страницы","$ref":"#/definitions/Запрос страницы","originalRef":"Запрос страницы"},"size":{"type":"integer","format":"int32","description":"Количество элементов на страницу заданное пользователем (если не задано, берем по умолчани)"},"totalElements":{"type":"integer","format":"int64","description":"Всего элементов"},"totalPages":{"type":"integer","format":"int32","description":"Всего страниц"}},"title":"Страница«Заявка на изменение онлайн лимита для онлайн карты»"},"Страница«Заявка на разблокировку карты с полной информацией»":{"type":"object","properties":{"content":{"type":"array","description":"Содержание","items":{"$ref":"#/definitions/Заявка на разблокировку карты с полной информацией","originalRef":"Заявка на разблокировку карты с полной информацией"}},"empty":{"type":"boolean","description":"Признак пустой страницы"},"first":{"type":"boolean","description":"Признак первой страницы"},"last":{"type":"boolean","description":"Признак последней страницы"},"number":{"type":"integer","format":"int32","description":"Номер страницы (введется с нуля)"},"numberOfElements":{"type":"integer","format":"int32","description":"Количество элементов на странице"},"pageable":{"description":"Запрос страницы","$ref":"#/definitions/Запрос страницы","originalRef":"Запрос страницы"},"size":{"type":"integer","format":"int32","description":"Количество элементов на страницу заданное пользователем (если не задано, берем по умолчани)"},"totalElements":{"type":"integer","format":"int64","description":"Всего элементов"},"totalPages":{"type":"integer","format":"int32","description":"Всего страниц"}},"title":"Страница«Заявка на разблокировку карты с полной информацией»"},"Страница«Заявка на разблокировку карты»":{"type":"object","properties":{"content":{"type":"array","description":"Содержание","items":{"$ref":"#/definitions/Заявка на разблокировку карты","originalRef":"Заявка на разблокировку карты"}},"empty":{"type":"boolean","description":"Признак пустой страницы"},"first":{"type":"boolean","description":"Признак первой страницы"},"last":{"type":"boolean","description":"Признак последней страницы"},"number":{"type":"integer","format":"int32","description":"Номер страницы (введется с нуля)"},"numberOfElements":{"type":"integer","format":"int32","description":"Количество элементов на странице"},"pageable":{"description":"Запрос страницы","$ref":"#/definitions/Запрос страницы","originalRef":"Запрос страницы"},"size":{"type":"integer","format":"int32","description":"Количество элементов на страницу заданное пользователем (если не задано, берем по умолчани)"},"totalElements":{"type":"integer","format":"int64","description":"Всего элементов"},"totalPages":{"type":"integer","format":"int32","description":"Всего страниц"}},"title":"Страница«Заявка на разблокировку карты»"},"Страница«Заявка на талон с полной информацией»":{"type":"object","properties":{"content":{"type":"array","description":"Содержание","items":{"$ref":"#/definitions/Заявка на талон с полной информацией","originalRef":"Заявка на талон с полной информацией"}},"empty":{"type":"boolean","description":"Признак пустой страницы"},"first":{"type":"boolean","description":"Признак первой страницы"},"last":{"type":"boolean","description":"Признак последней страницы"},"number":{"type":"integer","format":"int32","description":"Номер страницы (введется с нуля)"},"numberOfElements":{"type":"integer","format":"int32","description":"Количество элементов на странице"},"pageable":{"description":"Запрос страницы","$ref":"#/definitions/Запрос страницы","originalRef":"Запрос страницы"},"size":{"type":"integer","format":"int32","description":"Количество элементов на страницу заданное пользователем (если не задано, берем по умолчани)"},"totalElements":{"type":"integer","format":"int64","description":"Всего элементов"},"totalPages":{"type":"integer","format":"int32","description":"Всего страниц"}},"title":"Страница«Заявка на талон с полной информацией»"},"Страница«Заявка на талон»":{"type":"object","properties":{"content":{"type":"array","description":"Содержание","items":{"$ref":"#/definitions/Заявка на талон","originalRef":"Заявка на талон"}},"empty":{"type":"boolean","description":"Признак пустой страницы"},"first":{"type":"boolean","description":"Признак первой страницы"},"last":{"type":"boolean","description":"Признак последней страницы"},"number":{"type":"integer","format":"int32","description":"Номер страницы (введется с нуля)"},"numberOfElements":{"type":"integer","format":"int32","description":"Количество элементов на странице"},"pageable":{"description":"Запрос страницы","$ref":"#/definitions/Запрос страницы","originalRef":"Запрос страницы"},"size":{"type":"integer","format":"int32","description":"Количество элементов на страницу заданное пользователем (если не задано, берем по умолчани)"},"totalElements":{"type":"integer","format":"int64","description":"Всего элементов"},"totalPages":{"type":"integer","format":"int32","description":"Всего страниц"}},"title":"Страница«Заявка на талон»"},"Страница«Карта c полной информацией без онлайн карты и кошельков»":{"type":"object","properties":{"content":{"type":"array","description":"Содержание","items":{"$ref":"#/definitions/Карта c полной информацией без онлайн карты и кошельков","originalRef":"Карта c полной информацией без онлайн карты и кошельков"}},"empty":{"type":"boolean","description":"Признак пустой страницы"},"first":{"type":"boolean","description":"Признак первой страницы"},"last":{"type":"boolean","description":"Признак последней страницы"},"number":{"type":"integer","format":"int32","description":"Номер страницы (введется с нуля)"},"numberOfElements":{"type":"integer","format":"int32","description":"Количество элементов на странице"},"pageable":{"description":"Запрос страницы","$ref":"#/definitions/Запрос страницы","originalRef":"Запрос страницы"},"size":{"type":"integer","format":"int32","description":"Количество элементов на страницу заданное пользователем (если не задано, берем по умолчани)"},"totalElements":{"type":"integer","format":"int64","description":"Всего элементов"},"totalPages":{"type":"integer","format":"int32","description":"Всего страниц"}},"title":"Страница«Карта c полной информацией без онлайн карты и кошельков»"},"Страница«Карта без онлайн карты и кошельков»":{"type":"object","properties":{"content":{"type":"array","description":"Содержание","items":{"$ref":"#/definitions/Карта без онлайн карты и кошельков","originalRef":"Карта без онлайн карты и кошельков"}},"empty":{"type":"boolean","description":"Признак пустой страницы"},"first":{"type":"boolean","description":"Признак первой страницы"},"last":{"type":"boolean","description":"Признак последней страницы"},"number":{"type":"integer","format":"int32","description":"Номер страницы (введется с нуля)"},"numberOfElements":{"type":"integer","format":"int32","description":"Количество элементов на странице"},"pageable":{"description":"Запрос страницы","$ref":"#/definitions/Запрос страницы","originalRef":"Запрос страницы"},"size":{"type":"integer","format":"int32","description":"Количество элементов на страницу заданное пользователем (если не задано, берем по умолчани)"},"totalElements":{"type":"integer","format":"int64","description":"Всего элементов"},"totalPages":{"type":"integer","format":"int32","description":"Всего страниц"}},"title":"Страница«Карта без онлайн карты и кошельков»"},"Страница«Карта с кошельками»":{"type":"object","properties":{"content":{"type":"array","description":"Содержание","items":{"$ref":"#/definitions/Карта с кошельками","originalRef":"Карта с кошельками"}},"empty":{"type":"boolean","description":"Признак пустой страницы"},"first":{"type":"boolean","description":"Признак первой страницы"},"last":{"type":"boolean","description":"Признак последней страницы"},"number":{"type":"integer","format":"int32","description":"Номер страницы (введется с нуля)"},"numberOfElements":{"type":"integer","format":"int32","description":"Количество элементов на странице"},"pageable":{"description":"Запрос страницы","$ref":"#/definitions/Запрос страницы","originalRef":"Запрос страницы"},"size":{"type":"integer","format":"int32","description":"Количество элементов на страницу заданное пользователем (если не задано, берем по умолчани)"},"totalElements":{"type":"integer","format":"int64","description":"Всего элементов"},"totalPages":{"type":"integer","format":"int32","description":"Всего страниц"}},"title":"Страница«Карта с кошельками»"},"Страница«Карта с онлайн картой и онлайн лимитами и расписанием»":{"type":"object","properties":{"content":{"type":"array","description":"Содержание","items":{"$ref":"#/definitions/Карта с онлайн картой и онлайн лимитами и расписанием","originalRef":"Карта с онлайн картой и онлайн лимитами и расписанием"}},"empty":{"type":"boolean","description":"Признак пустой страницы"},"first":{"type":"boolean","description":"Признак первой страницы"},"last":{"type":"boolean","description":"Признак последней страницы"},"number":{"type":"integer","format":"int32","description":"Номер страницы (введется с нуля)"},"numberOfElements":{"type":"integer","format":"int32","description":"Количество элементов на странице"},"pageable":{"description":"Запрос страницы","$ref":"#/definitions/Запрос страницы","originalRef":"Запрос страницы"},"size":{"type":"integer","format":"int32","description":"Количество элементов на страницу заданное пользователем (если не задано, берем по умолчани)"},"totalElements":{"type":"integer","format":"int64","description":"Всего элементов"},"totalPages":{"type":"integer","format":"int32","description":"Всего страниц"}},"title":"Страница«Карта с онлайн картой и онлайн лимитами и расписанием»"},"Страница«Карта с полной информацией и кошельками»":{"type":"object","properties":{"content":{"type":"array","description":"Содержание","items":{"$ref":"#/definitions/Карта с полной информацией и кошельками","originalRef":"Карта с полной информацией и кошельками"}},"empty":{"type":"boolean","description":"Признак пустой страницы"},"first":{"type":"boolean","description":"Признак первой страницы"},"last":{"type":"boolean","description":"Признак последней страницы"},"number":{"type":"integer","format":"int32","description":"Номер страницы (введется с нуля)"},"numberOfElements":{"type":"integer","format":"int32","description":"Количество элементов на странице"},"pageable":{"description":"Запрос страницы","$ref":"#/definitions/Запрос страницы","originalRef":"Запрос страницы"},"size":{"type":"integer","format":"int32","description":"Количество элементов на страницу заданное пользователем (если не задано, берем по умолчани)"},"totalElements":{"type":"integer","format":"int64","description":"Всего элементов"},"totalPages":{"type":"integer","format":"int32","description":"Всего страниц"}},"title":"Страница«Карта с полной информацией и кошельками»"},"Страница«Карта с полной информацией и онлайн картой и онлайн лимитами и расписанием»":{"type":"object","properties":{"content":{"type":"array","description":"Содержание","items":{"$ref":"#/definitions/Карта с полной информацией и онлайн картой и онлайн лимитами и расписанием","originalRef":"Карта с полной информацией и онлайн картой и онлайн лимитами и расписанием"}},"empty":{"type":"boolean","description":"Признак пустой страницы"},"first":{"type":"boolean","description":"Признак первой страницы"},"last":{"type":"boolean","description":"Признак последней страницы"},"number":{"type":"integer","format":"int32","description":"Номер страницы (введется с нуля)"},"numberOfElements":{"type":"integer","format":"int32","description":"Количество элементов на странице"},"pageable":{"description":"Запрос страницы","$ref":"#/definitions/Запрос страницы","originalRef":"Запрос страницы"},"size":{"type":"integer","format":"int32","description":"Количество элементов на страницу заданное пользователем (если не задано, берем по умолчани)"},"totalElements":{"type":"integer","format":"int64","description":"Всего элементов"},"totalPages":{"type":"integer","format":"int32","description":"Всего страниц"}},"title":"Страница«Карта с полной информацией и онлайн картой и онлайн лимитами и расписанием»"},"Страница«Карта с полной информацией»":{"type":"object","properties":{"content":{"type":"array","description":"Содержание","items":{"$ref":"#/definitions/Карта с полной информацией","originalRef":"Карта с полной информацией"}},"empty":{"type":"boolean","description":"Признак пустой страницы"},"first":{"type":"boolean","description":"Признак первой страницы"},"last":{"type":"boolean","description":"Признак последней страницы"},"number":{"type":"integer","format":"int32","description":"Номер страницы (введется с нуля)"},"numberOfElements":{"type":"integer","format":"int32","description":"Количество элементов на странице"},"pageable":{"description":"Запрос страницы","$ref":"#/definitions/Запрос страницы","originalRef":"Запрос страницы"},"size":{"type":"integer","format":"int32","description":"Количество элементов на страницу заданное пользователем (если не задано, берем по умолчани)"},"totalElements":{"type":"integer","format":"int64","description":"Всего элементов"},"totalPages":{"type":"integer","format":"int32","description":"Всего страниц"}},"title":"Страница«Карта с полной информацией»"},"Страница«Карта»":{"type":"object","properties":{"content":{"type":"array","description":"Содержание","items":{"$ref":"#/definitions/Карта","originalRef":"Карта"}},"empty":{"type":"boolean","description":"Признак пустой страницы"},"first":{"type":"boolean","description":"Признак первой страницы"},"last":{"type":"boolean","description":"Признак последней страницы"},"number":{"type":"integer","format":"int32","description":"Номер страницы (введется с нуля)"},"numberOfElements":{"type":"integer","format":"int32","description":"Количество элементов на странице"},"pageable":{"description":"Запрос страницы","$ref":"#/definitions/Запрос страницы","originalRef":"Запрос страницы"},"size":{"type":"integer","format":"int32","description":"Количество элементов на страницу заданное пользователем (если не задано, берем по умолчани)"},"totalElements":{"type":"integer","format":"int64","description":"Всего элементов"},"totalPages":{"type":"integer","format":"int32","description":"Всего страниц"}},"title":"Страница«Карта»"},"Страница«Отчет остатка на карте для электронного кошелька c полной информацией»":{"type":"object","properties":{"content":{"type":"array","description":"Содержание","items":{"$ref":"#/definitions/Отчет остатка на карте для электронного кошелька c полной информацией","originalRef":"Отчет остатка на карте для электронного кошелька c полной информацией"}},"empty":{"type":"boolean","description":"Признак пустой страницы"},"first":{"type":"boolean","description":"Признак первой страницы"},"last":{"type":"boolean","description":"Признак последней страницы"},"number":{"type":"integer","format":"int32","description":"Номер страницы (введется с нуля)"},"numberOfElements":{"type":"integer","format":"int32","description":"Количество элементов на странице"},"pageable":{"description":"Запрос страницы","$ref":"#/definitions/Запрос страницы","originalRef":"Запрос страницы"},"size":{"type":"integer","format":"int32","description":"Количество элементов на страницу заданное пользователем (если не задано, берем по умолчани)"},"totalElements":{"type":"integer","format":"int64","description":"Всего элементов"},"totalPages":{"type":"integer","format":"int32","description":"Всего страниц"}},"title":"Страница«Отчет остатка на карте для электронного кошелька c полной информацией»"},"Страница«Отчет остатка на карте для электронного кошелька»":{"type":"object","properties":{"content":{"type":"array","description":"Содержание","items":{"$ref":"#/definitions/Отчет остатка на карте для электронного кошелька","originalRef":"Отчет остатка на карте для электронного кошелька"}},"empty":{"type":"boolean","description":"Признак пустой страницы"},"first":{"type":"boolean","description":"Признак первой страницы"},"last":{"type":"boolean","description":"Признак последней страницы"},"number":{"type":"integer","format":"int32","description":"Номер страницы (введется с нуля)"},"numberOfElements":{"type":"integer","format":"int32","description":"Количество элементов на странице"},"pageable":{"description":"Запрос страницы","$ref":"#/definitions/Запрос страницы","originalRef":"Запрос страницы"},"size":{"type":"integer","format":"int32","description":"Количество элементов на страницу заданное пользователем (если не задано, берем по умолчани)"},"totalElements":{"type":"integer","format":"int64","description":"Всего элементов"},"totalPages":{"type":"integer","format":"int32","description":"Всего страниц"}},"title":"Страница«Отчет остатка на карте для электронного кошелька»"},"Страница«Талон с полной информацией»":{"type":"object","properties":{"content":{"type":"array","description":"Содержание","items":{"$ref":"#/definitions/Талон с полной информацией","originalRef":"Талон с полной информацией"}},"empty":{"type":"boolean","description":"Признак пустой страницы"},"first":{"type":"boolean","description":"Признак первой страницы"},"last":{"type":"boolean","description":"Признак последней страницы"},"number":{"type":"integer","format":"int32","description":"Номер страницы (введется с нуля)"},"numberOfElements":{"type":"integer","format":"int32","description":"Количество элементов на странице"},"pageable":{"description":"Запрос страницы","$ref":"#/definitions/Запрос страницы","originalRef":"Запрос страницы"},"size":{"type":"integer","format":"int32","description":"Количество элементов на страницу заданное пользователем (если не задано, берем по умолчани)"},"totalElements":{"type":"integer","format":"int64","description":"Всего элементов"},"totalPages":{"type":"integer","format":"int32","description":"Всего страниц"}},"title":"Страница«Талон с полной информацией»"},"Страница«Талон»":{"type":"object","properties":{"content":{"type":"array","description":"Содержание","items":{"$ref":"#/definitions/Талон","originalRef":"Талон"}},"empty":{"type":"boolean","description":"Признак пустой страницы"},"first":{"type":"boolean","description":"Признак первой страницы"},"last":{"type":"boolean","description":"Признак последней страницы"},"number":{"type":"integer","format":"int32","description":"Номер страницы (введется с нуля)"},"numberOfElements":{"type":"integer","format":"int32","description":"Количество элементов на странице"},"pageable":{"description":"Запрос страницы","$ref":"#/definitions/Запрос страницы","originalRef":"Запрос страницы"},"size":{"type":"integer","format":"int32","description":"Количество элементов на страницу заданное пользователем (если не задано, берем по умолчани)"},"totalElements":{"type":"integer","format":"int64","description":"Всего элементов"},"totalPages":{"type":"integer","format":"int32","description":"Всего страниц"}},"title":"Страница«Талон»"},"Страница«Точка обслуживания без адреса»":{"type":"object","properties":{"content":{"type":"array","description":"Содержание","items":{"$ref":"#/definitions/Точка обслуживания без адреса","originalRef":"Точка обслуживания без адреса"}},"empty":{"type":"boolean","description":"Признак пустой страницы"},"first":{"type":"boolean","description":"Признак первой страницы"},"last":{"type":"boolean","description":"Признак последней страницы"},"number":{"type":"integer","format":"int32","description":"Номер страницы (введется с нуля)"},"numberOfElements":{"type":"integer","format":"int32","description":"Количество элементов на странице"},"pageable":{"description":"Запрос страницы","$ref":"#/definitions/Запрос страницы","originalRef":"Запрос страницы"},"size":{"type":"integer","format":"int32","description":"Количество элементов на страницу заданное пользователем (если не задано, берем по умолчани)"},"totalElements":{"type":"integer","format":"int64","description":"Всего элементов"},"totalPages":{"type":"integer","format":"int32","description":"Всего страниц"}},"title":"Страница«Точка обслуживания без адреса»"},"Страница«Точка обслуживания без терминалов»":{"type":"object","properties":{"content":{"type":"array","description":"Содержание","items":{"$ref":"#/definitions/Точка обслуживания без терминалов","originalRef":"Точка обслуживания без терминалов"}},"empty":{"type":"boolean","description":"Признак пустой страницы"},"first":{"type":"boolean","description":"Признак первой страницы"},"last":{"type":"boolean","description":"Признак последней страницы"},"number":{"type":"integer","format":"int32","description":"Номер страницы (введется с нуля)"},"numberOfElements":{"type":"integer","format":"int32","description":"Количество элементов на странице"},"pageable":{"description":"Запрос страницы","$ref":"#/definitions/Запрос страницы","originalRef":"Запрос страницы"},"size":{"type":"integer","format":"int32","description":"Количество элементов на страницу заданное пользователем (если не задано, берем по умолчани)"},"totalElements":{"type":"integer","format":"int64","description":"Всего элементов"},"totalPages":{"type":"integer","format":"int32","description":"Всего страниц"}},"title":"Страница«Точка обслуживания без терминалов»"},"Страница«Точка обслуживания с полной информацией»":{"type":"object","properties":{"content":{"type":"array","description":"Содержание","items":{"$ref":"#/definitions/Точка обслуживания с полной информацией","originalRef":"Точка обслуживания с полной информацией"}},"empty":{"type":"boolean","description":"Признак пустой страницы"},"first":{"type":"boolean","description":"Признак первой страницы"},"last":{"type":"boolean","description":"Признак последней страницы"},"number":{"type":"integer","format":"int32","description":"Номер страницы (введется с нуля)"},"numberOfElements":{"type":"integer","format":"int32","description":"Количество элементов на странице"},"pageable":{"description":"Запрос страницы","$ref":"#/definitions/Запрос страницы","originalRef":"Запрос страницы"},"size":{"type":"integer","format":"int32","description":"Количество элементов на страницу заданное пользователем (если не задано, берем по умолчани)"},"totalElements":{"type":"integer","format":"int64","description":"Всего элементов"},"totalPages":{"type":"integer","format":"int32","description":"Всего страниц"}},"title":"Страница«Точка обслуживания с полной информацией»"},"Страница«Точка обслуживания»":{"type":"object","properties":{"content":{"type":"array","description":"Содержание","items":{"$ref":"#/definitions/Точка обслуживания","originalRef":"Точка обслуживания"}},"empty":{"type":"boolean","description":"Признак пустой страницы"},"first":{"type":"boolean","description":"Признак первой страницы"},"last":{"type":"boolean","description":"Признак последней страницы"},"number":{"type":"integer","format":"int32","description":"Номер страницы (введется с нуля)"},"numberOfElements":{"type":"integer","format":"int32","description":"Количество элементов на странице"},"pageable":{"description":"Запрос страницы","$ref":"#/definitions/Запрос страницы","originalRef":"Запрос страницы"},"size":{"type":"integer","format":"int32","description":"Количество элементов на страницу заданное пользователем (если не задано, берем по умолчани)"},"totalElements":{"type":"integer","format":"int64","description":"Всего элементов"},"totalPages":{"type":"integer","format":"int32","description":"Всего страниц"}},"title":"Страница«Точка обслуживания»"},"Страница«Транзакция с полной информацией»":{"type":"object","properties":{"content":{"type":"array","description":"Содержание","items":{"$ref":"#/definitions/Транзакция с полной информацией","originalRef":"Транзакция с полной информацией"}},"empty":{"type":"boolean","description":"Признак пустой страницы"},"first":{"type":"boolean","description":"Признак первой страницы"},"last":{"type":"boolean","description":"Признак последней страницы"},"number":{"type":"integer","format":"int32","description":"Номер страницы (введется с нуля)"},"numberOfElements":{"type":"integer","format":"int32","description":"Количество элементов на странице"},"pageable":{"description":"Запрос страницы","$ref":"#/definitions/Запрос страницы","originalRef":"Запрос страницы"},"size":{"type":"integer","format":"int32","description":"Количество элементов на страницу заданное пользователем (если не задано, берем по умолчани)"},"totalElements":{"type":"integer","format":"int64","description":"Всего элементов"},"totalPages":{"type":"integer","format":"int32","description":"Всего страниц"}},"title":"Страница«Транзакция с полной информацией»"},"Страница«Транзакция»":{"type":"object","properties":{"content":{"type":"array","description":"Содержание","items":{"$ref":"#/definitions/Транзакция","originalRef":"Транзакция"}},"empty":{"type":"boolean","description":"Признак пустой страницы"},"first":{"type":"boolean","description":"Признак первой страницы"},"last":{"type":"boolean","description":"Признак последней страницы"},"number":{"type":"integer","format":"int32","description":"Номер страницы (введется с нуля)"},"numberOfElements":{"type":"integer","format":"int32","description":"Количество элементов на странице"},"pageable":{"description":"Запрос страницы","$ref":"#/definitions/Запрос страницы","originalRef":"Запрос страницы"},"size":{"type":"integer","format":"int32","description":"Количество элементов на страницу заданное пользователем (если не задано, берем по умолчани)"},"totalElements":{"type":"integer","format":"int64","description":"Всего элементов"},"totalPages":{"type":"integer","format":"int32","description":"Всего страниц"}},"title":"Страница«Транзакция»"},"Схема обслуживания":{"type":"object","properties":{"schemaName":{"type":"string","description":"Название схемы обслуживания"},"schemaNumber":{"type":"integer","format":"int32","description":"Идентификатор схемы обслуживания"},"schemaWordId":{"type":"integer","format":"int32","description":"Идентификатор названия схемы обслуживания"}},"title":"Схема обслуживания"},"Счет":{"type":"object","properties":{"balance":{"type":"number","description":"Остаток"},"balanceForDrRequest":{"type":"number","description":"Остаток для ОП заявки"},"dailyLimitAlarmBarrier":{"type":"number","description":"Суточный сигнальный порог"},"dailyLimitInformBarrier":{"type":"number","description":"Суточный информационный порог"},"monthlyLimitAlarmBarrier":{"type":"number","description":"Месячный сигнальный порог"},"monthlyLimitInformBarrier":{"type":"number","description":"Месячный информационный порог"},"overdraft":{"type":"number","description":"Овердрафт"},"service":{"description":"Услуга","$ref":"#/definitions/Обьект идентификатора услуги","originalRef":"Обьект идентификатора услуги"},"timeCredit":{"type":"number","description":"Временный кредит"}},"title":"Счет"},"Счет с полной информацией":{"type":"object","properties":{"balance":{"type":"number","description":"Остаток"},"balanceForDrRequest":{"type":"number","description":"Остаток для ОП заявки"},"dailyLimitAlarmBarrier":{"type":"number","description":"Суточный сигнальный порог"},"dailyLimitInformBarrier":{"type":"number","description":"Суточный информационный порог"},"monthlyLimitAlarmBarrier":{"type":"number","description":"Месячный сигнальный порог"},"monthlyLimitInformBarrier":{"type":"number","description":"Месячный информационный порог"},"overdraft":{"type":"number","description":"Овердрафт"},"service":{"description":"Услуга","$ref":"#/definitions/Услуга","originalRef":"Услуга"},"timeCredit":{"type":"number","description":"Временный кредит"}},"title":"Счет с полной информацией"},"Талон":{"type":"object","properties":{"dateOf":{"type":"string","format":"date-time","description":"Дата создания"},"dateService":{"type":"string","format":"date-time","description":"Срок использования"},"groupCoupons":{"description":"Группа талонов","$ref":"#/definitions/Обьект идентификатора группы талонов","originalRef":"Обьект идентификатора группы талонов"},"price":{"type":"number","description":"Цена"},"vcGuid":{"type":"string","description":"Идентификатор талона"},"vcNumber":{"type":"string","description":"Номер талона"},"vcState":{"description":"Состояние талона","$ref":"#/definitions/Обьект идентификатора состояния талона","originalRef":"Обьект идентификатора состояния талона"}},"title":"Талон"},"Талон с полной информацией":{"type":"object","properties":{"dateOf":{"type":"string","format":"date-time","description":"Дата создания"},"dateService":{"type":"string","format":"date-time","description":"Срок использования"},"groupCoupons":{"description":"Группа талонов","$ref":"#/definitions/Группа талонов с полной информацией","originalRef":"Группа талонов с полной информацией"},"price":{"type":"number","description":"Цена"},"vcGuid":{"type":"string","description":"Идентификатор талона"},"vcNumber":{"type":"string","description":"Номер талона"},"vcState":{"description":"Состояние талона","$ref":"#/definitions/Состояния талона","originalRef":"Состояния талона"}},"title":"Талон с полной информацией"},"Тело ошибок для ответа":{"type":"object","properties":{"data":{"type":"object","description":"Данные к списку ошибок"},"errors":{"type":"array","description":"Список API ошибок для ответа","uniqueItems":true,"items":{"$ref":"#/definitions/Общая API ошибка","originalRef":"Общая API ошибка"}},"message":{"type":"string","description":"Сообщение API ошибок"},"method":{"type":"string","description":"Метод HTTP запроса"},"parameters":{"type":"string","description":"Параметры HTTP запроса"},"path":{"type":"string","description":"Путь HTTP запроса"},"statusCode":{"type":"integer","format":"int32","description":"Код статуса HTTP запроса"},"statusName":{"type":"string","description":"Название статуса HTTP запроса"},"timestamp":{"type":"string","format":"date-time","example":"2021-12-31T23:59:59.999","description":"Отметка времени"}},"title":"Тело ошибок для ответа"},"Терминал точки обслуживания":{"type":"object","properties":{"prices":{"type":"array","description":"Цены терминала точки обслуживания","items":{"$ref":"#/definitions/Цена на терминале точки облуживания","originalRef":"Цена на терминале точки облуживания"}},"trmNumber":{"type":"integer","format":"int32","description":"Номер терминала точки обслуживания"}},"title":"Терминал точки обслуживания"},"Терминал точки обслуживания без цен":{"type":"object","properties":{"trmNumber":{"type":"integer","format":"int32","description":"Номер терминала точки обслуживания"}},"title":"Терминал точки обслуживания без цен"},"Терминал точки обслуживания с полной информацией":{"type":"object","properties":{"prices":{"type":"array","description":"Цены терминала точки обслуживания","items":{"$ref":"#/definitions/Цена на терминале точки облуживания с полной информацией","originalRef":"Цена на терминале точки облуживания с полной информацией"}},"trmNumber":{"type":"integer","format":"int32","description":"Номер терминала точки обслуживания"}},"title":"Терминал точки обслуживания с полной информацией"},"Тип заявки на ОИ (ОП и ОС)":{"type":"object","properties":{"allow":{"type":"boolean","description":"Разрешение типа заявки на ОИ (ОП и ОС) <br>если allow = false, то тип заявки на ОИ (ОП и ОС) заблокирован <br>если allow = true, то тип заявки на ОИ (ОП и ОС) разблокирован"},"drDdTypeId":{"type":"integer","format":"int32","description":"Идентификатор типа заявки на ОИ (ОП и ОС)"},"drDdTypeName":{"type":"string","description":"Название типа заявки на ОИ (ОП и ОС)"},"drDdTypeWordId":{"type":"integer","format":"int32","description":"Идентификатор названия типа заявки на ОИ (ОП и ОС)"}},"title":"Тип заявки на ОИ (ОП и ОС)"},"Тип лимита для кошелька":{"type":"object","properties":{"limitTypeId":{"type":"integer","format":"int32","description":"Идентификатор типа лимита для кошелька"},"limitTypeName":{"type":"string","description":"Название типа лимита для кошелька"},"limitTypeShortName":{"type":"string","description":"Короткое название типа лимита для кошелька"},"limitTypeShortWordId":{"type":"integer","format":"int32","description":"Идентификатор названия типа лимита для кошелька"},"limitTypeWordId":{"type":"integer","format":"int32","description":"Идентификатор названия типа лимита для кошелька"}},"title":"Тип лимита для кошелька"},"Тип лимита талона":{"type":"object","properties":{"allow":{"type":"boolean","description":"Разрешение типа лимита талона <br>если allow = false, то тип лимита талона забокирован <br>если allow = true, то тип лимита талона разблокирован"},"vcLimitTypeId":{"type":"integer","format":"int32","description":"Идентификатор типа лимита талона"},"vcLimitTypeName":{"type":"string","description":"Название типа лимита талона"},"vcLimitTypeWordId":{"type":"integer","format":"int32","description":"Идентификатор названия типа лимита талона"}},"title":"Тип лимита талона"},"Тип онлайн карты":{"type":"object","properties":{"onlCardName":{"type":"string","description":"Название типа онлайн карты"},"onlCardTypeId":{"type":"integer","format":"int32","description":"Идентификатор типа онлайн карты"}},"title":"Тип онлайн карты"},"Тип онлайн лимита для заявки":{"type":"object","properties":{"onlLimitTypeId":{"type":"integer","format":"int32","description":"Идентификатор типа онлайн лимита для заявки"},"onlLimitTypeName":{"type":"string","description":"Название типа онлайн лимита для заявки"},"onlLimitTypeWordId":{"type":"integer","format":"int32","description":"Идентификатор названия типа онлайн лимита для заявки"}},"title":"Тип онлайн лимита для заявки"},"Тип операции для транзакции":{"type":"object","properties":{"trnTypeName":{"type":"string","description":"Название типа операции для транзакции"},"trnTypeNumber":{"type":"integer","format":"int32","description":"Идентификатор типа операции для транзакции"},"trnTypeWordId":{"type":"integer","format":"int32","description":"Идентификатор названия типа операции для транзакции"}},"title":"Тип операции для транзакции"},"Токены авторизации":{"type":"object","properties":{"accessToken":{"type":"string","description":"Токен доступа"},"refreshToken":{"type":"string","description":"Токен обновления токена доступа"}},"title":"Токены авторизации"},"Точка обслуживания":{"type":"object","properties":{"isVisible":{"type":"boolean","description":"Признак показа точки обслуживания <br>если isVisible = false, то скрывать точку обслуживания <br>если isVisible = true, то показавать точку обслуживания"},"posAddress":{"type":"string","description":"Адресс точки обслуживания"},"posEmitentNumber":{"type":"integer","format":"int32","description":"Номер эмитента точки обслуживания"},"posFilialNumber":{"type":"integer","format":"int32","description":"Номер филиала точки обслуживания"},"posHasPrices":{"type":"boolean","description":"Признак наличие цен у точки обслуживания <br>если posHasPrices = false, то нет цена на точке обслуживания <br>если posHasPrices = true, то есть цены на точке обслуживания"},"posIsOwn":{"type":"boolean","description":"Признак своей точки обслуживания <br>если posIsOwn = false, то точка обслуживания не своя <br>если posIsOwn = true, то точка обслуживания своя"},"posName":{"type":"string","description":"Название точки обслуживания"},"posNumWeb":{"type":"integer","format":"int32","description":"Идентификатор точки обслуживания"},"posNumber":{"type":"integer","format":"int32","description":"Номер точки обслуживания"},"terminals":{"type":"array","description":"Терминалы точки обслуживания","items":{"$ref":"#/definitions/Терминал точки обслуживания","originalRef":"Терминал точки обслуживания"}}},"title":"Точка обслуживания"},"Точка обслуживания без адреса":{"type":"object","properties":{"isVisible":{"type":"boolean","description":"Признак показа точки обслуживания <br>если isVisible = false, то скрывать точку обслуживания <br>если isVisible = true, то показавать точку обслуживания"},"posEmitentNumber":{"type":"integer","format":"int32","description":"Номер эмитента точки обслуживания"},"posFilialNumber":{"type":"integer","format":"int32","description":"Номер филиала точки обслуживания"},"posHasPrices":{"type":"boolean","description":"Признак наличие цен у точки обслуживания <br>если posHasPrices = false, то нет цена на точке обслуживания <br>если posHasPrices = true, то есть цены на точке обслуживания"},"posIsOwn":{"type":"boolean","description":"Признак своей точки обслуживания <br>если posIsOwn = false, то точка обслуживания не своя <br>если posIsOwn = true, то точка обслуживания своя"},"posName":{"type":"string","description":"Название точки обслуживания"},"posNumWeb":{"type":"integer","format":"int32","description":"Идентификатор точки обслуживания"},"posNumber":{"type":"integer","format":"int32","description":"Номер точки обслуживания"}},"title":"Точка обслуживания без адреса"},"Точка обслуживания без терминалов":{"type":"object","properties":{"isVisible":{"type":"boolean","description":"Признак показа точки обслуживания <br>если isVisible = false, то скрывать точку обслуживания <br>если isVisible = true, то показавать точку обслуживания"},"posAddress":{"type":"string","description":"Адресс точки обслуживания"},"posEmitentNumber":{"type":"integer","format":"int32","description":"Номер эмитента точки обслуживания"},"posFilialNumber":{"type":"integer","format":"int32","description":"Номер филиала точки обслуживания"},"posHasPrices":{"type":"boolean","description":"Признак наличие цен у точки обслуживания <br>если posHasPrices = false, то нет цена на точке обслуживания <br>если posHasPrices = true, то есть цены на точке обслуживания"},"posIsOwn":{"type":"boolean","description":"Признак своей точки обслуживания <br>если posIsOwn = false, то точка обслуживания не своя <br>если posIsOwn = true, то точка обслуживания своя"},"posName":{"type":"string","description":"Название точки обслуживания"},"posNumWeb":{"type":"integer","format":"int32","description":"Идентификатор точки обслуживания"},"posNumber":{"type":"integer","format":"int32","description":"Номер точки обслуживания"}},"title":"Точка обслуживания без терминалов"},"Точка обслуживания с полной информацией":{"type":"object","properties":{"isVisible":{"type":"boolean","description":"Признак показа точки обслуживания <br>если isVisible = false, то скрывать точку обслуживания <br>если isVisible = true, то показавать точку обслуживания"},"posAddress":{"type":"string","description":"Адресс точки обслуживания"},"posEmitentNumber":{"type":"integer","format":"int32","description":"Номер эмитента точки обслуживания"},"posFilialNumber":{"type":"integer","format":"int32","description":"Номер филиала точки обслуживания"},"posHasPrices":{"type":"boolean","description":"Признак наличие цен у точки обслуживания <br>если posHasPrices = false, то нет цена на точке обслуживания <br>если posHasPrices = true, то есть цены на точке обслуживания"},"posIsOwn":{"type":"boolean","description":"Признак своей точки обслуживания <br>если posIsOwn = false, то точка обслуживания не своя <br>если posIsOwn = true, то точка обслуживания своя"},"posName":{"type":"string","description":"Название точки обслуживания"},"posNumWeb":{"type":"integer","format":"int32","description":"Идентификатор точки обслуживания"},"posNumber":{"type":"integer","format":"int32","description":"Номер точки обслуживания"},"terminals":{"type":"array","description":"Терминалы точки обслуживания","items":{"$ref":"#/definitions/Терминал точки обслуживания с полной информацией","originalRef":"Терминал точки обслуживания с полной информацией"}}},"title":"Точка обслуживания с полной информацией"},"Транзакция":{"type":"object","properties":{"amount":{"type":"number","description":"Количество"},"cardHolderName":{"type":"string","description":"Имя держателя карты"},"cardIsVcCard":{"type":"boolean","description":"Признак виртуальной карты <br>если trnIsIbs = false, то карта не является виртуальной картой <br>если trnIsIbs = true, то карта является виртуальной картой"},"cardNumber":{"type":"string","description":"Номер карты"},"costClient":{"type":"number","description":"Стоимость у клиента"},"costOnPos":{"type":"number","description":"Стоимость на ТО"},"currency":{"description":"Услуга, которой платили (Счет/Кошелек)","$ref":"#/definitions/Обьект идентификатора услуги, которой платили (Счет/Кошелек)","originalRef":"Обьект идентификатора услуги, которой платили (Счет/Кошелек)"},"dateOf":{"type":"string","format":"date-time","description":"Дата создания"},"deltaCost":{"type":"number","description":"Скидка у клиента"},"odometr":{"type":"number","description":"Показание одометра ТС"},"overPetrolTank":{"type":"boolean","description":"Признак привешения объема бака ТС <br>если overPetrolTank = false, то объем бака ТС не превышен <br>если overPetrolTank = true, то объем бака ТС превышен"},"petrolTank":{"type":"number","description":"Объем бака ТС"},"pos":{"description":"Точка обслуживания","$ref":"#/definitions/Обьект идентификатора точки обслуживания","originalRef":"Обьект идентификатора точки обслуживания"},"priceClient":{"type":"number","description":"Цена у клиента"},"priceOnPos":{"type":"number","description":"Цена на ТО"},"schema":{"description":"Схема обслуживания","$ref":"#/definitions/Обьект идентификатора схемы обслуживания","originalRef":"Обьект идентификатора схемы обслуживания"},"service":{"description":"Услуга (за что платили)","$ref":"#/definitions/Обьект идентификатора услуги","originalRef":"Обьект идентификатора услуги"},"terminalNumber":{"type":"integer","format":"int32","description":"Номер терминала"},"trnComment":{"type":"string","description":"Комментарий транзакции"},"trnFromOc":{"type":"boolean","description":"Признак транзакции выполненой в ОЦ <br>если trnFromOc = false, то транкакция не выполнена в ОЦ <br>если trnFromOc = true, то транкакция выполнена в ОЦ"},"trnGuid":{"type":"string","description":"Идентификатор транзакции"},"trnIsIbs":{"type":"boolean","description":"Признак товарной транзакции <br>если trnIsIbs = false, то транзакция не является товарной транзакцией<br>если trnIsIbs = true, то транзакция является товарной транзакцией"},"trnType":{"description":"Тип транзакции","$ref":"#/definitions/Обьект идентификатора типа операции для транзакции","originalRef":"Обьект идентификатора типа операции для транзакции"}},"title":"Транзакция"},"Транзакция с полной информацией":{"type":"object","properties":{"amount":{"type":"number","description":"Количество"},"cardHolderName":{"type":"string","description":"Имя держателя карты"},"cardIsVcCard":{"type":"boolean","description":"Признак виртуальной карты <br>если trnIsIbs = false, то карта не является виртуальной картой <br>если trnIsIbs = true, то карта является виртуальной картой"},"cardNumber":{"type":"string","description":"Номер карты"},"costClient":{"type":"number","description":"Стоимость у клиента"},"costOnPos":{"type":"number","description":"Стоимость на ТО"},"currency":{"description":"Услуга, которой платили (Счет/Кошелек)","$ref":"#/definitions/Услуга, которой платили (Счет/Кошелек)","originalRef":"Услуга, которой платили (Счет/Кошелек)"},"dateOf":{"type":"string","format":"date-time","description":"Дата создания"},"deltaCost":{"type":"number","description":"Скидка у клиента"},"odometr":{"type":"number","description":"Показание одометра ТС"},"overPetrolTank":{"type":"boolean","description":"Признак привешения объема бака ТС <br>если overPetrolTank = false, то объем бака ТС не превышен <br>если overPetrolTank = true, то объем бака ТС превышен"},"petrolTank":{"type":"number","description":"Объем бака ТС"},"pos":{"description":"Точка обслуживания","$ref":"#/definitions/Точка обслуживания без терминалов","originalRef":"Точка обслуживания без терминалов"},"priceClient":{"type":"number","description":"Цена у клиента"},"priceOnPos":{"type":"number","description":"Цена на ТО"},"schema":{"description":"Схема обслуживания","$ref":"#/definitions/Схема обслуживания","originalRef":"Схема обслуживания"},"service":{"description":"Услуга (за что платили)","$ref":"#/definitions/Услуга","originalRef":"Услуга"},"terminalNumber":{"type":"integer","format":"int32","description":"Номер терминала"},"trnComment":{"type":"string","description":"Комментарий транзакции"},"trnFromOc":{"type":"boolean","description":"Признак транзакции выполненой в ОЦ <br>если trnFromOc = false, то транкакция не выполнена в ОЦ <br>если trnFromOc = true, то транкакция выполнена в ОЦ"},"trnGuid":{"type":"string","description":"Идентификатор транзакции"},"trnIsIbs":{"type":"boolean","description":"Признак товарной транзакции <br>если trnIsIbs = false, то транзакция не является товарной транзакцией<br>если trnIsIbs = true, то транзакция является товарной транзакцией"},"trnType":{"description":"Тип транзакции","$ref":"#/definitions/Тип операции для транзакции","originalRef":"Тип операции для транзакции"}},"title":"Транзакция с полной информацией"},"Услуга":{"type":"object","properties":{"isCurrency":{"type":"boolean","description":"Признак валюты <br>если isCurrency = false, то услуга не является валютой <br>если isCurrency = true, то услуга является валютой"},"serviceIdWeb":{"type":"integer","format":"int32","description":"Идентификатор услуги"},"serviceMes":{"type":"string","description":"Единица измерения (номинала) услуги"},"serviceName":{"type":"string","description":"Название услуги"}},"title":"Услуга"},"Услуга талона":{"type":"object","properties":{"price":{"type":"number","description":"Цена талона"},"service":{"description":"Услуга","$ref":"#/definitions/Обьект идентификатора услуги","originalRef":"Обьект идентификатора услуги"}},"title":"Услуга талона"},"Услуга талона с полной информацией":{"type":"object","properties":{"price":{"type":"number","description":"Цена талона"},"service":{"description":"Услуга","$ref":"#/definitions/Услуга","originalRef":"Услуга"}},"title":"Услуга талона с полной информацией"},"Услуга, которой платили (Счет/Кошелек)":{"type":"object","properties":{"isCurrency":{"type":"boolean","description":"Признак валюты <br>если isCurrency = false, то услуга не является валютой <br>если isCurrency = true, то услуга является валютой"},"serviceIdWeb":{"type":"integer","format":"int32","description":"Идентификатор услуги"},"serviceMes":{"type":"string","description":"Единица измерения (номинала) услуги"},"serviceName":{"type":"string","description":"Название услуги"}},"title":"Услуга, которой платили (Счет/Кошелек)"},"Форма для входа":{"type":"object","properties":{"login":{"type":"string","description":"Логин"},"password":{"type":"string","description":"Пароль"},"userIsMobileUser":{"type":"boolean","description":"Признак мобильного пользователя <br>если userIsMobileUser = false, то пользователь не является мобильным пользователем <br>если userIsMobileUser = true, то пользователь является мобильным пользователем <br>можно не указывать, то значаение по умолчанию userIsMobileUser = false"}},"title":"Форма для входа"},"Форма для обновления токенов":{"type":"object","properties":{"refreshToken":{"type":"string","description":"Токен обновления токена доступа <br>получить можно в запросе '/auth/login' поле refreshToken <br>или в запросе '/auth/refresh' поле refreshToken <br>(описание запроса в Обработчике запросов по авторизации <br>и в разделе Schema > Токены авторизации)"}},"title":"Форма для обновления токенов"},"Форма для создания и обновления держателя талона":{"type":"object","properties":{"email":{"type":"string","description":"Адрес электронной почты"},"phoneNumber":{"type":"string","example":"+73332224444 или +380333444777","description":"Номер мобильного телефона"},"vcHolderName":{"type":"string","description":"Имя держателя талона"}},"title":"Форма для создания и обновления держателя талона"},"Форма изменения языка пользользателя":{"type":"object","properties":{"lngId":{"type":"integer","format":"int32","description":"Идентификатор языка пользователя <br>получение доступных языков в запросе '/languages' поле lngId <br>(описание запроса в Обработчике по языку и в разделе Schema > Язык)установленный язык указано в поле lngId <br>(поле lngId, можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)"}},"title":"Форма изменения языка пользользателя"},"Форма отправки заявок на талоны":{"type":"object","properties":{"codeNumber":{"type":"integer","format":"int32","description":"Номер кода <br>получить номер кода можно в запросе '/virtual-coupon-reserve-code-number' поле codeNumber <br>номер кода можно использовать один раз <br>(описание запроса в Обработчик запросов по номеру кода для отправки заявок на талоны <br>и в разделе Models > Модель номера кода для отправки заявок на талоны)"},"securityCode":{"type":"string","description":"Секретный код <br>секретный код вводится в соответствии с номером кода (codeNumber)"}},"title":"Форма отправки заявок на талоны"},"Форма создание заявки на блокировку гуппы талонов":{"type":"object","properties":{"groupCouponsId":{"type":"string","description":"Идентификатор группы талонов <br>у группы талонов должна быть созданая и не отклоненная заявка, <br>поле existsCreatedAndNotRejectedRequest = true <br>и не должно существовать заявки на блокировку данной группы талонов, <br>поле existsRequestForBlocking = false <br>(описание полей existsCreatedAndNotRejectedRequest и existsRequestForBlocking можно получить <br>в разделе Schema > Группа талонов)"}},"title":"Форма создание заявки на блокировку гуппы талонов"},"Форма создание заявки на блокировку карты":{"type":"object","properties":{"blockComment":{"type":"string","description":"Комментарий заявки на блокировку карты"},"cardNumber":{"type":"string","description":"Номер карты <br>состояние карты должно быть в работе, поле cardStateId = 1 <br>получить номера карт можно в запросе '/cards?cardStateIdFilterList=1' поле cardNumber <br>(описание запроса в Обработчике запросов по карте и в разделе Schema > Карта)"},"sendOc":{"type":"boolean","description":"Подтверждение пользователем заявки (Отправить после создания) <br>отображение поле sendOc зависит от поля hideFieldSendOcInRequest <br>допустимые значение и значение по умолчанию описаны в поле canSendOcImm <br>(поля hideFieldSendOcInRequest и canSendOcImm, можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)"}},"title":"Форма создание заявки на блокировку карты"},"Форма создание заявки на блокировку талона":{"type":"object","properties":{"vcGuid":{"type":"string","description":"Идентификатор талона <br>состояние талона должно быть в работе, поле vcStateId = 0 <br>талоны, которые можно заблокировать, можно получить <br>в запросе '/virtual-coupons?vcStateIdFilterList=0' <br>или в запросе '/virtual-coupons/full?vcStateIdFilterList=0' <br>(описание можно получить в Обработчике запросов по талону <br>и в разделе Schema > Талон )"}},"title":"Форма создание заявки на блокировку талона"},"Форма создание заявки на изменение держателя карты":{"type":"object","properties":{"cardNumber":{"type":"string","description":"Номер карты <br>состояние карты должно быть в работе, поле cardStateId = 1 <br>получить номера карт можно в запросе '/cards?cardStateIdFilterList=1' поле cardNumber <br>(описание запроса в Обработчике запросов по карте и в разделе Schema > Карта)"},"newCardHolderName":{"type":"string","description":"Новое имя держателя карты"},"sendOc":{"type":"boolean","description":"Подтверждение пользователем заявки (Отправить после создания) <br>отображение поле sendOc зависит от поля hideFieldSendOcInRequest <br>допустимые значение и значение по умолчанию описаны в поле canSendOcImm <br>(поля hideFieldSendOcInRequest и canSendOcImm, можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)"}},"title":"Форма создание заявки на изменение держателя карты"},"Форма создание заявки на отправку повторно группы талонов":{"type":"object","properties":{"codeNumber":{"type":"integer","format":"int32","description":"Номер кода <br>получить номер кода можно в запросе '/virtual-coupon-reserve-code-number' поле codeNumber <br>номер кода можно использовать один раз <br>(описание запроса в Обработчик запросов по номеру кода для отправки заявок на талоны <br>и в разделе Models > Модель номера кода для отправки заявок на талоны)"},"groupCouponsId":{"type":"string","description":"Идентификатор группы талонов <br>у группы талонов должна быть созданая и принятая заявка, <br>поле existsCreatedAndAcceptedRequest = true <br>(описание поля existsCreatedAndAcceptedRequest можно получить <br>в разделе Schema > Группа талонов)"},"securityCode":{"type":"string","description":"Секретный код <br>секретный код вводится в соответствии с номером кода (codeNumber)"}},"title":"Форма создание заявки на отправку повторно группы талонов"},"Форма создание заявки на отправку повторно талона":{"type":"object","properties":{"codeNumber":{"type":"integer","format":"int32","description":"Номер кода <br>получить номер кода можно в запросе '/virtual-coupon-reserve-code-number' поле codeNumber <br>номер кода можно использовать один раз <br>(описание запроса в Обработчик запросов по номеру кода для отправки заявок на талоны <br>и в разделе Models > Модель номера кода для отправки заявок на талоны)"},"securityCode":{"type":"string","description":"Секретный код <br>секретный код вводится в соответствии с номером кода (codeNumber)"},"vcGuid":{"type":"string","description":"Идентификатор талона <br>состояние талона должно быть в работе, поле vcStateId = 0 <br>талоны, которые можно отправить повторно, можно получить <br>в запросе '/virtual-coupons?vcStateIdFilterList=0' <br>или в запросе '/virtual-coupons/full?vcStateIdFilterList=0' <br>(описание можно получить в Обработчике запросов по талону <br>и в разделе Schema > Талон )"}},"title":"Форма создание заявки на отправку повторно талона"},"Форма создание заявки на разблокировку карты":{"type":"object","properties":{"cardNumber":{"type":"string","description":"Номер карты <br>состояние карты должно быть заблокировано пользователем для разблокировки карты, <br>поле cardStateId = 99 <br>получить номер карты можно в запросе '/cards?cardStateIdFilterList=99' поле cardNumber <br>(описание запроса в Обработчике по карте и в разделе Schema > Карта)"},"sendOc":{"type":"boolean","description":"Подтверждение пользователем заявки (Отправить после создания) <br>отображение поле sendOc зависит от поля hideFieldSendOcInRequest <br>допустимые значение и значение по умолчанию описаны в поле canSendOcImm <br>(поля hideFieldSendOcInRequest и canSendOcImm, можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)"},"unblockComment":{"type":"string","description":"Комментарий заявки на разблокировку карты"}},"title":"Форма создание заявки на разблокировку карты"},"Форма создания заявки на ОИ (ОП и ОС)":{"type":"object","properties":{"amount":{"type":"number","description":"Количество <br>если тип заявки на ОИ (ОП и ОС) это ОП, поле drDdTypeId = 1, <br>то максимальное значение количества можно получить <br>в запросе '/accounts/{serviceIdWeb}' поле balanceForDrRequest <br>или в запросе '/accounts/{serviceIdWeb}/full' поле balanceForDrRequest <br>(описание запроса в Обработчике запросов по счету и в разделе Schema > Счет)если тип заявки на ОИ (ОП и ОС) это ОС, поле drDdTypeId = 2, <br>то максимальное значение количества можно получить <br>в запросе '/cards/{cardNumber}/purses/{serviceIdWeb}' поле balanceForDdRequest <br>или в запросе '/cards/{cardNumber}/purses/{serviceIdWeb}' поле balanceForDdRequest <br>(описание запроса в Обработчике запросов по кошельку и в разделе Schema > Кошелек)"},"cardNumber":{"type":"string","description":"Номер карты <br>состояние карты должно быть в работе, поле cardStateId = 1 <br>и на карте должны быть электронные кошельки, поле hasElectronicPursesFilter = true <br>номер карты можно получить <br>в запросе '/cards?cardStateIdFilterList=1&hasElectronicPursesFilter=true&schemaNumberFilterList=1,6,4' <br>поле cardNumber <br>(описание запроса в Обработчике запросов по карте и а варзделе Schema > Карта)"},"drDdTypeId":{"type":"integer","format":"int32","description":"Идентификатор типа заявки на ОИ (ОП и ОС)<br>получить тип заявки на ОИ (ОП и ОС) можно в запросе '/dr-and-dd-types' поле drDdTypeId <br>получить тип заявки на ОИ (ОП и ОС) с фильтрацией по доступу можно <br>в запросе '/dr-and-dd-types?allowFilter=true' поле drDdTypeId <br>(описание запроса в Обработчике запросов по типу заявки на ОИ (ОП и ОС) <br>и в разделе Schema > Тип заявки на ОИ (ОП и ОС)) <br>если тип заявки на ОИ (ОП и ОС) это ОП, поле drDdTypeId = 1, <br>определить доступ можно по полю allowDrRequest <br>если тип заявки на ОИ (ОП и ОС) это ОС, поле drDdTypeId = 2, <br>определить доступ можно по полю allowDdRequest <br>(поля allowDrRequest и allowDdRequest можно получить в запросе '/user-setting' <br>описание в Обраблтчике запросов по пользовательским настройками в разделе Models > Пользовательские настройки)"},"sendOc":{"type":"boolean","description":"Подтверждение пользователем заявки (Отправить после создания) <br>отображение поле sendOc зависит от поля hideFieldSendOcInRequest <br>допустимые значение и значение по умолчанию описаны в поле canSendOcImm <br>(поля hideFieldSendOcInRequest и canSendOcImm, можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)"},"serviceIdWeb":{"type":"integer","format":"int32","description":"Идентификатор услуги <br>схемы обслуживания на кошельке должны быть ЭК или ЭКФЦ или ЭКП, а именно поле schemaNumber = (1, 4, 6) <br>услуги можно получить в заросе '/cards/{cardNumber}/purses?schemaNumberFilterList=1,6,4' поле serviceIdWeb <br>или в заросе '/cards/{cardNumber}/purses/full?schemaNumberFilterList=1,6,4' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по кошельку и в разделе Schema > Кошелек)"}},"title":"Форма создания заявки на ОИ (ОП и ОС)"},"Форма создания заявки на ОИЛ":{"type":"object","properties":{"amount":{"type":"number","description":"Новый лимит (Количество) <br>максимальное значение нового лимита (количества) можно получить <br>в запросе '/cards/{cardNumber}/purses/{serviceIdWeb}' поле maxLimitForOilRequest <br>или в запросе '/cards/{cardNumber}/purses/{serviceIdWeb}/full' поле maxLimitForOilRequest <br>(описание запроса в Обработчике запросов по кошельку и в разделе Schema > Кошелек)"},"cardNumber":{"type":"string","description":"Номер карты <br>состояние карты должно быть в работе, поле cardStateId = 1 <br>и должны быть кошельки на карте, поле hasPurses = true <br>получить номер карты можно <br>в запросе '/cards?cardStateIdFilterList=1&hasPursesFilter=true' поле cardNumber <br>(описание запроса в Обработчике запросов по карте и в разделе Schema > Карта)"},"dateBegin":{"type":"string","format":"date","description":"Дата начала <br>если дата начала не указана, поле dateBegin = null, то устанавливается текущая дата"},"sendOc":{"type":"boolean","description":"Подтверждение пользователем заявки (Отправить после создания) <br>отображение поле sendOc зависит от поля hideFieldSendOcInRequest <br>допустимые значение и значение по умолчанию описаны в поле canSendOcImm <br>(поля hideFieldSendOcInRequest и canSendOcImm, можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)"},"serviceIdWeb":{"type":"integer","format":"int32","description":"Идентификатор услуги <br>получить услугу кошелька можно в запросе '/cards/{cardNumber}/purses' поле serviceIdWeb <br>или в запросе '/cards/{cardNumber}/purses/full' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по кошельку и в разделе Schema > Кошелек)"}},"title":"Форма создания заявки на ОИЛ"},"Форма создания заявки на изменение онлайн лимита для онлайн карты":{"type":"object","properties":{"cardNumber":{"type":"string","description":"Номер карты <br>состояние карты должно быть в работе, поле cardStateId = 1 <br>и карта должна быть онлайн картой, поле isOnlCard = true <br>если тип онлайн лимита по услуге, поле onlLimitTypeId = 3, <br>то должны быть кошельки на карте, поле hasPurses = true <br>если тип онлайн лимита по количеству обслуживаний, поле onlLimitTypeId = 1 <br>и по сумме обслуживай, поле onlLimitTypeId = 2, <br>то получить номер карты можно <br>в запросе '/cards?cardStateIdFilterList=1&isOnlCardFilter=true' поле cardNumber <br>если тип онлайн лимита по услуге, поле onlLimitTypeId = 3, то получить номер карты можно <br>в запросе '/cards?cardStateIdFilterList=1&isOnlCardFilter=true&hasPursesFilter=true' поле cardNumber <br>(описание запроса в Обработчике запросов по карте и в разделе Schema > Карта)"},"dailyLimit":{"type":"number","description":"Суточный онлайн лимит <br>если тип онлайн лимита по количеству обслуживаний, поле onlLimitTypeId = 1, <br>то получить действующий суточный онлайн лимит по количеству обслуживаний можно <br>в запросе '/cards/{cardNumber}/onl-card/onl-limit-card' поле dailyCountLimit <br>(описание запроса в Обработчике по онлайн лимитам по онлайн карте <br>и в разделе Schema > Онлайн лимиты по онлайн карте) <br>если тип онлайн лимита по сумме обслуживаний, поле onlLimitTypeId = 2, <br>то получить действующий суточный онлайн лимит по сумме обслуживаний можно <br>в запросе '/cards/{cardNumber}/onl-card/onl-limit-card' поле dailySumLimit <br>(описание запроса в Обработчике по онлайн лимитам по онлайн карте <br>и в разделе Schema > Онлайн лимиты по онлайн карте) <br>если тип онлайн лимита по услуге, поле onlLimitTypeId = 3, <br>то получить действующий суточный онлайн лимит по услуге можно <br>в запросе '/cards/{cardNumber}/onl-card/onl-limit-card-services/{serviceIdWeb}' поле dailyLimit <br>или в запросе '/cards/{cardNumber}/onl-card/onl-limit-card-services/{serviceIdWeb}/full' поле dailyLimit <br>(описание запроса в Обработчике по онлайн лимитам по услуге по онлайн карте <br>и в разделе Schema > Онлайн лимиты по услуге по онлайн карте)"},"monthlyLimit":{"type":"number","description":"Месячный онлайн лимит <br>если тип онлайн лимита по количеству обслуживаний, поле onlLimitTypeId = 1, <br>то получить действующий месячный онлайн лимит по количеству обслуживаний можно <br>в запросе '/cards/{cardNumber}/onl-card/onl-limit-card' поле monthlyCountLimit <br>(описание запроса в Обработчике по онлайн лимитам по онлайн карте <br>и в разделе Schema > Онлайн лимиты по онлайн карте) <br>если тип онлайн лимита по сумме обслуживаний, поле onlLimitTypeId = 2, <br>то получить действующий месячный онлайн лимит по сумме обслуживаний можно <br>в запросе '/cards/{cardNumber}/onl-card/onl-limit-card' поле monthlySumLimit <br>(описание запроса в Обработчике по онлайн лимитам по онлайн карте <br>и в разделе Schema > Онлайн лимиты по онлайн карте) <br>если тип онлайн лимита по услуге, поле onlLimitTypeId = 3, <br>то получить действующий месячный онлайн лимит по услуге можно <br>в запросе '/cards/{cardNumber}/onl-card/onl-limit-card-services/{serviceIdWeb}' поле monthlyLimit <br>или в запросе '/cards/{cardNumber}/onl-card/onl-limit-card-services/{serviceIdWeb}/full' поле monthlyLimit <br>(описание запроса в Обработчике по онлайн лимитам по услуге по онлайн карте <br>и в разделе Schema > Онлайн лимиты по услуге по онлайн карте)"},"onlLimitTypeId":{"type":"integer","format":"int32","description":"Идентификатор типа онлайн лимита для заявки <br>получить типы онлайн лимита можно в запросе '/onl-limit-types' поле onlLimitTypeId <br>(описание запроса в Обработчике запросов по типу онлайн лимита <br>и в разделе Schema > Тип онлайн лимита для заявки"},"sendOc":{"type":"boolean","description":"Подтверждение пользователем заявки (Отправить после создания) <br>отображение поле sendOc зависит от поля hideFieldSendOcInRequest <br>допустимые значение и значение по умолчанию описаны в поле canSendOcImm <br>(поля hideFieldSendOcInRequest и canSendOcImm, можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)"},"serviceIdWeb":{"type":"integer","format":"int32","description":"Идентификатор услуги <br>если тип онлайн лимита по сумме обслуживаний, поле onlLimitTypeId = 3, <br>то получить услуги можно <br>в запросе '/cards/{cardNumber}/onl-card/onl-limit-card-services' поле serviceIdWeb <br>или в запросе '/cards/{cardNumber}/onl-card/onl-limit-card-services/full' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по онлайн лимитам по услуге по онлайн карте <br>и в разделе Schema > Онлайн лимиты по услуге по онлайн карте) <br>если тип онлайн лимита по количеству обслуживаний, поле onlLimitTypeId = 1 <br>или по сумме обслуживаний, поле onlLimitTypeId = 2, <br>то услуга не указывается, поле serviceIdWeb = null"},"weeklyLimit":{"type":"number","description":"Недельный онлайн лимит <br>если тип онлайн лимита по количеству обслуживаний, поле onlLimitTypeId = 1, <br>то получить действующий недельный онлайн лимит по количеству обслуживаний можно <br>в запросе '/cards/{cardNumber}/onl-card/onl-limit-card' поле weeklyCountLimit <br>(описание запроса в Обработчике по онлайн лимитам по онлайн карте <br>и в разделе Schema > Онлайн лимиты по онлайн карте) <br>если тип онлайн лимита по сумме обслуживаний, поле onlLimitTypeId = 2, <br>то получить действующий недельный онлайн лимит по сумме обслуживаний можно <br>в запросе '/cards/{cardNumber}/onl-card/onl-limit-card' поле weeklySumLimit <br>(описание запроса в Обработчике по онлайн лимитам по онлайн карте <br>и в разделе Schema > Онлайн лимиты по онлайн карте) <br>если тип онлайн лимита по услуге, поле onlLimitTypeId = 3, <br>то получить действующий недельный онлайн лимит по услуге можно <br>в запросе '/cards/{cardNumber}/onl-card/onl-limit-card-services/{serviceIdWeb}' поле weeklyLimit <br>или в запросе '/cards/{cardNumber}/onl-card/onl-limit-card-services/{serviceIdWeb}/full' поле weeklyLimit <br>(описание запроса в Обработчике по онлайн лимитам по услуге по онлайн карте <br>и в разделе Schema > Онлайн лимиты по услуге по онлайн карте)"}},"title":"Форма создания заявки на изменение онлайн лимита для онлайн карты"},"Форма создания заявки на талоны":{"type":"object","properties":{"declaredAmount":{"type":"integer","format":"int32","description":"Количество талонов <br>количество талонов указывается целым значением <br>если получать сообщение на мобильный телефон (sendToPhoneNumber = true), <br>то максимальное количество sms сообщений указано в поле vcMaxSmsSendCount <br>если получать сообщение на адрес электронной почты (sendToEmail = true), <br>то максимальное количество сообщений на адрес электронной почты указано в поле vcMaxEmailSendCount <br>(поля vcMaxEmailSendCount и vcMaxSmsSendCount можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки) <br>количество талонов не должно превышать доступный суточный, недельный, месячный лимитом по количеству <br>обслуживаний, поля dailyAvailableCountForReq, weeklyAvailableCountForReq, monthlyAvailableCountForReq <br>(поля dailyAvailableCountForReq, weeklyAvailableCountForReq, monthlyAvailableCountForReq <br>можно получить в запросе '/virtual-coupon-limit' <br>описание запроса в Обработчике запросов по лимитаам по талону и в разделе Schema > Лимит талонов) <br>также действует ограничение по сумме, рассчитывается по формуле <br>номинал талона умноженое на количество талонов и умноженое на цену (nominal * declaredAmount * price) <br>цену можно получить в запросе '/virtual-coupon-services/{serviceIdWeb}' поле price <br>или в запросе '/virtual-coupon-services/{serviceIdWeb}/full' поле price <br>(описание запроса в Обработчике запросов по услуге талона и в разделе Schema > Услуга талона) <br>сумма не должна превышать доступный суточный, недельный, месячный лимитом по сумме обслуживаний, <br>поля dailyAvailableSumForReq, weeklyAvailableSumForReq, monthlyAvailableSumForReq <br>(поля dailyAvailableSumForReq, weeklyAvailableSumForReq, monthlyAvailableSumForReq можно получить в запросе '/virtual-coupon-limit' <br>описание запроса в Обработчике запросов по лимитам по талонуи в разделе Schema > Лимит талонов) <br>еще сумма не должна превышать остаток в валюте для заявки на талоны, поле balanceOfCurrencyForVcReq <br>(поле balanceOfCurrencyForVcReq можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)"},"email":{"type":"string","description":"Адрес электронной почты <br>как и имя держателя талона, адрес электронной почты <br>можно получить в запросе '/virtual-coupon-holders' поле email <br>(описание запроса в Обработчике запросов по держателю талона и в разделе Schema > Держатель талона) <br>или заполнить свой <br>если не получать сообщения на адрес электронной почты, поле sendToEmail = false, <br>то адрес электронной почты будет пустой, поле email = null"},"lifetime":{"type":"integer","format":"int32","description":"Срок использования (дней) <br>срок использования указывается в днях <br>максимальное количества дней для срока использования указано в поле vcMaxValidityDays <br>(поле vcMaxValidityDays можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)"},"nominal":{"type":"integer","format":"int32","description":"Номинал талона <br>номинал талона указывается целым значением <br>если тип лимита талона в валюте, поле vcLimitTypeId = 1, <br>то максимальный номинал талона указан в поле vcMaxOneCouponSum <br>если тип лимита талона в единицах услуги, поле vcLimitTypeId = 2 <br>или в единицах услуги (по фикс. цене), поле vcLimitTypeId = 3, <br>то максимальный номинал талона указан в поле vcMaxOneCouponValue <br>(поля vcMaxOneCouponSum и vcMaxOneCouponValue можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки) <br>также действует ограничение по сумме, рассчитывается по формуле <br>номинал талона умноженое на количество талонов и умноженое на цену (nominal * declaredAmount * price) <br>цену можно получить в запросе '/virtual-coupon-services/{serviceIdWeb}' поле price <br>или в запросе '/virtual-coupon-services/{serviceIdWeb}/full' поле price <br>(описание запроса в Обработчике запросов по услуге талона и в разделе Schema > Услуга талона) <br>сумма не должна превышать доступный суточный, недельный, месячный лимитом по сумме обслуживаний, <br>поля dailyAvailableSumForReq, weeklyAvailableSumForReq, monthlyAvailableSumForReq <br>(поля dailyAvailableSumForReq, weeklyAvailableSumForReq, monthlyAvailableSumForReq можно получить в запросе '/virtual-coupon-limit' <br>описание запроса в Обработчике запросов по лимитам по талонуи в разделе Schema > Лимит талонов) <br>еще сумма не должна превышать остаток в валюте для заявки на талоны, поле balanceOfCurrencyForVcReq <br>(поле balanceOfCurrencyForVcReq можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)"},"phoneNumber":{"type":"string","example":"+73332224444 или +380333444777","description":"Номер мобильного телефона <br>как и имя держателя талона, номер мобильного телефона <br>можно получить в запросе '/virtual-coupon-holders' поле phoneNumber <br>(описание запроса в Обработчике запросов по держателю талона и в разделе Schema > Держатель талона) <br>или заполнить свой <br>если не получать сообщение на мобильный телефон, поле sendToPhone = false, <br>то мобильный телефон будет пустой, поле phoneNumber = null"},"sendToEmail":{"type":"boolean","description":"Получить сообщение на адрес электронной почты <br>если sendToPhone = false, то не получать сообщения на адрес электронной почты <br>если sendToPhone = true, то получать сообщения на адрес электронной почты и <br>адрес электронной почты, поле email, должна быть заполнена"},"sendToPhoneNumber":{"type":"boolean","description":"Получить сообщение на мобильный телефон <br>если sendToPhone = false, то не получать на мобильный телефон сообщение <br>если sendToPhone = true, то получать на мобильный телефон сообщение <br>и мобильный телефон, поле phoneNumber, должен быть заполнен"},"serviceIdWeb":{"type":"integer","format":"int32","description":"Идентификатор услуги <br>услуга не может быть валютой, поле isCurrency != true, <br>невозможно создать талон на услугу, которая валюта<br>услуги можно получить <br>в запросе '/virtual-coupon-services?serviceIsCurrencyFilter=0' поле serviceIdWeb <br>или в запросе '/virtual-coupon-services/full?serviceIsCurrencyFilter=0' поле serviceIdWeb <br>(описание запроса в Обработчике запросов по услуге талона и в разделе Schema > Услуга талона)"},"vcHolderName":{"type":"string","description":"Имя держателя талона <br>имя держателя талона можно получить в запросе '/virtual-coupon-holders' поле vcHolderName <br>или заполнить свое <br>(описание запроса в Обработчике по держателю талона и в разделе Schema > Держатель талона)"},"vcLimitTypeId":{"type":"integer","format":"int32","description":"Идентификатор типа лимита талона <br>получить типы лимита талона можно в запросе '/virtual-coupon-limit-types' поле vcLimitTypeId <br>получить типы лимита талона с фильтрацией по доступу можно <br>в запросе '/virtual-coupon-limit-types?allowFilter=true' поле vcLimitTypeId <br>(описание запроса в Обработчике запросов по типу лимита талона и в разделе Schema > Тип лимита талона) <br>если типа лимита талона в валюте, поле vcLimitTypeId = 1 <br>                    или в единицах услуги, поле vcLimitTypeId = 2, <br>определить доступ можно по полю allowVcTerminalPrice <br>если типа лимита талона в единицах услуги (по фикс. цене), поле vcLimitTypeId = 3, <br>определить доступ можно по полю allowVcFixPrice <br>(поля allowVcTerminalPrice и allowVcFixPrice можно получить в запросе '/user-setting' <br>описание запроса в Обработчике запросов по пользовательским настройкам <br>и в разделе Models > Пользовательские настройки)"}},"title":"Форма создания заявки на талоны"},"Цена на терминале точки облуживания":{"type":"object","properties":{"price":{"type":"number","description":"Цена на терминале точки обслуживания"},"service":{"description":"Услуга","$ref":"#/definitions/Обьект идентификатора услуги","originalRef":"Обьект идентификатора услуги"},"startDate":{"type":"string","format":"date","description":"Дата начало действия цены"}},"title":"Цена на терминале точки облуживания"},"Цена на терминале точки облуживания с полной информацией":{"type":"object","properties":{"price":{"type":"number","description":"Цена на терминале точки обслуживания"},"service":{"description":"Услуга","$ref":"#/definitions/Услуга","originalRef":"Услуга"},"startDate":{"type":"string","format":"date","description":"Дата начало действия цены"}},"title":"Цена на терминале точки облуживания с полной информацией"},"Язык":{"type":"object","properties":{"lngId":{"type":"integer","format":"int32","description":"Идентификатор языка"},"lngName":{"type":"string","description":"Название языка"},"lngNameTrans":{"type":"string","description":"Название языка транслитом"},"lngPrefix":{"type":"string","description":"Языковой префикс"},"words":{"type":"array","description":"Слова","items":{"$ref":"#/definitions/Слово языка","originalRef":"Слово языка"}}},"title":"Язык"},"Язык без слов":{"type":"object","properties":{"lngId":{"type":"integer","format":"int32","description":"Идентификатор языка"},"lngName":{"type":"string","description":"Название языка"},"lngNameTrans":{"type":"string","description":"Название языка транслитом"},"lngPrefix":{"type":"string","description":"Языковой префикс"}},"title":"Язык без слов"}}}
